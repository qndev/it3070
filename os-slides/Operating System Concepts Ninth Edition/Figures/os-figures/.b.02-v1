%!PS-Adobe-3.1 EPSF-3.0%%Title: b.301.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: D Haldar%%CreationDate: 7/1/04%%BoundingBox: 0 0 359 229%%HiResBoundingBox: 0 0 358.6265 228.8526%%CropBox: 0 0 358.6265 228.8526%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %AI7_Thumbnail: 128 84 8%%BeginData: 11142 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1F7DFD40FFFD207D527DFD1DA87DFD40FF7DFD1FA87D7DFD1DA8%7DFD40FF7DFD1FA87D7DFD1DA87DFD40FFFD20A87D7DFD06A852527DFD08%A87D52A852FD08A87DFD40FF7DFD05A82752A8A8A87D7DA8A8A87DFD06A8%525252FD06A87D7DFD07A8FD0652F87D527DFD0452277DFD06A87DFD3FFF%277DFD05A8FD045227275227522727527D275252A82752525227FD04A87D%7DFD06A8527DFD0752277D52A87D52277DFD06A87D7DA8A8A87DA8A8A87D%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87D5252FD05A827%522727527D527D5252527D7D52527DA852527D2752FD04A87D7DFD1DA87D%FD40FF7DFD1FA87D7DFD1DA87DFD40FF7DFD1FA87D7DFD1DA87DFD40FF7D%FD1FA87D7DFD1DA87DFD40FF7DFD1FA87D7DFD1DA87DFD06FFA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DFD06FFFD207D52A87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD04FF84A8%84AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF7DA8A8FD46FF7DAF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8A8A8FD45FF%A8A9AFAFAF2784AFAFA9AFAFAFA9AF53AFA97D53A8A9AF7DAFA9AFAFAFA9%7D52AFA97D537D52A9AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD%44FFA8A8AFA8AFA8527D52592752522E52527D527E845252592752595952%522EAF52AF8427527D8452527D5952527D52592752595252AFA8AFA8AFA8%AF7DFD44FF84AFA9AFAFAF277D2E84277D597D277D5952847D597D52527D%7D277D597DA97D5284277D597D527D277D27525927527D527D2752AFAFA9%AFAFAFA9A8FD44FFA8A9AFA8AFA9AFA8AFA9AFA8AFA959A8AFA9AFA8AF84%7DA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA959A8AFA9AFA8AFA9AFA8%AFA9AFA8AFA9AF7DFD44FF7DAFAFAFA9A9AFAFA9AFAFAF84AFAFAF84AFAF%AFA9AF7DAF527DAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9AFAFAFA9AFAF84FD44FFA8A8AFA85952845252527D52597D7D7D%59277D525952528452528452AF277D2E5927527D52A8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF7EAFAFAF52527D59527D527D52%7D27A9527D597D59527DA9527D7D52A97D5952527D597D27AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD44FFA8A8AFA9AFA8AFA9AF52%AFA9AFA8AFA9AFA87DA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD44FF84AFA9AFAFAF52%5253AF8484AFAFA9AFAFAFA9AFAFAFA984AF84A9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A8AFA8%AFA859277D525952527D59527D7D5252522E52F8A8527D52AF277D527D7D%525252277DA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF84%AFA9AFAFAF52A8527D527D2784527D5984527D597D277DA87D597DAF5259%7D597D27522E7D52AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD%44FFA8A9AFA8AFA9AF84AFA9AFA8AFA9597DAF84AFA8AFA9597DAFA9AFA8%AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9%AF7DFD44FF7DAFAFAFA9AF537D527D5284527D2E59A97D527D527D5359A9%AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAF84FD44FFA8A8AFA8AFA8522E5252525927525252AF527D525227%7D52AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AF7DFD44FF7EAFAFAFA9AFAFAFA9AFAFAFA97DAFAFA9AFAF%7DA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9AFAFAFA9AFAFA8FD44FFA8A8AFA9AF84AFA9AFA8AFA9A8A8AFA9%AFA8AFA984A8AFA984A87D52AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8%AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD44FF84AFA9AF537D7D7D527D527D53%8452845259527DF87D527D52A8527D7D59A9527DFD04528452AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A8AFA8522E7DFD05527D%592784FD04527D527D277D8459527D27AF527D2E59527D5927A8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF84AFA9AFAFAFA9AFAF7DA9%AFAFAFA9AFAFAFA9AF59AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A9AFA8AFA95227%7DA9A87DAFA9AFA8AFA9AFA8AFA9AF7DAF7DAFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD44FF7DAFAFAFA9%AF5352527D53595284537D5284527D52522E27847D7D59A9527D59528452%5952527DAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF84FD44FFA8A8%AFA8AFA8527D52527D52277D7D52597D525259525259A8527D52AF277D52%5952272752527DA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44%FF7EAFAFAFA9AFAFA9A9AFAFAFA9AF5984A9AFAFAFA9AF5984A9AFAFAFA9%AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%A8FD44FFA8A8AFA9AFA87D525253537D59525252AFFD05527D52AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8%AF7DFD44FF84AFA9AFAFAF5252527D527D277D527DAF7D527D5252527DAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9A8FD44FFA8A8AFA8AFA8AFA8AFA8AFA8AF52AFA8AFA8AF52AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AF7DFD44FF84AFA9AF7D7D7DAFAFAFA9AFAF8452AFAFAF84%AFAFAFA9AF7DAF59AF59AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9A8FD44FFA8A9AFA87DA959277D52592EA8525253%537D595252275252F88452527D5284A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD44FF7DAFAFAF7D7D7D525952537DA9%7D537D2784537DFD0552A9537D525284AFA9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9AFAFAFA9AFAFAFA9AFAF84FD44FFA8A8AFA8AFA8A8277D847DA8%AFA87DA8AFA8AFA8AF527D7DAFA8AFA8A8A884A8AFA8AF52AFA8AF7DAFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF7EAFAFAFA9AF595952%7D5959527D2E8452A8FD0452A859A97D7D5252522EA9A9AF2752527D5927%84AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD44FFA8A8AFA9AFA87D%5259527D275253527D59532E525952AF52AF277D5259527D84AF7D522752%527D59A8A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD44FF84AFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA984AFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8%A8AFA8A85259A8AFA8AF7DAFA8AFA8AFA87EA8AFA8AF7DAF5259A8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD%44FF84AFA9AF59AF8452527D277D7D59A97D7D7DF87D527D527DA8F8527D%52AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9A8FD44FFA8A9AFA8A8525952277D52537D27AF528452595253525952AF%52592752A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF%A8AFA9AF7DFD44FF7DAFAFAFA9AF847D59A953AFA9AFAFAFA9A9AF52A9AF%AFAFA97DAFAFA9AF7DAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAF84FD44FFA8A8AFA8AFA87D5252527D52527D7D59525252%277D52AF8427527D7D522752A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AF7DFD44FF7EAFAFAFA9AF597D527D5952277D277D%527D527D2752A884277D5984527D59AFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFA8FD44FFA8A8AFA9AFA8AFA9AFA8AFA9AF%A8AFA9AFA8AFA9AFA884A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD44FF84AFA9AF53AFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A8AFA87DA8FD%0652AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF84AFA9AF597D27%7D5259277DAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A9AFA8%AFA9AFA8AFA959A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD44FF7D%AFAFAFA9AF2E59A9AFAFAFA97DAF7DA9AFAFAFA9AF84AFA9AFAFAF7DAF53%7DA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF84FD%44FFA8A8AFA8AFA8522E7E527D275252A8F87E527D2E52A87D2759527D52%528452527E52AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AF7DFD44FF7EAFAFAFA9AF597D59527D52277DAF7DA97D597D52AF597D52%7D7D5252AF597D5952AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFA8FD44FFA8A8AFA9AFA8532759A8A87DAFA884A9AFA8AFA9AFA8%84A959A884A95952AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AFA8AF7DFD44FF84AFA9AFAFAF5252537D527D5284527D538452%7D537DF87D537D52A9527D7D7DAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9A8FD44FFA8A8AFA8AFA8527D52525952277D7D52%7D7DFD045259527D2759A87D527D27AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF84AFA9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFAF52AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD44FFA8A9AFA87DA959A8848459%A8AFA9AFA8AF52AF52AFA959A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD44FF7DAFAFAF52AF5352%F87D53AF527D7D5259528459527D535284AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF84FD44FFA8A8AFA87E%52845259527DA8590084277D27AF5252527D2E7EA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF7EAF%AFAF847D597DA9AFAFAFA9AFAFAFA9A8AFAFA9A8AF7D847DAFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD44%FFA8A8AFA959A8A852527D5352847D7D525952525259F8A85259527D7DAF%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF%7DFD44FF84AFA9AF8459527D525927277D84527D2E7D277D527D847D537D%27A9AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9A8FD44FFA8A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA859A8AFA8AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AF7DFD44FF84AFA9AF525252AFA884A9AFAFAFA9AFAFAFA9AF%59AFA9A8A8AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8AFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9A8FD44FFA8A9AFA87D2759527D5252528452845252%527D277D7D52527D52592EAF275253537D527D53527D278452A852535284%2E535952525352592EAFA9AF7DFD44FF7DAFAFAF5284527D527D2752597D%7D59527D5352527D277D527D537DA97D537D27845259275253525952AF7D%527D7D52527D53522727537DA9AFAF84FD44FFA8A8AFA87D27AFA8AFA8AF%A8A8A8AFA87EA8AF52AFA8AFA8AFA8AFA8AF52AFA8AFA8AFA8AFA88452AF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD44FF7EAFAFAFA97D7D59%527DFD0452A852527D52AF277D597DFD0452597D597DA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD44FFA8A8AFA9AF527D%2759527D5259528427592752A959527D5259527D5259528452AFA8AFA9AF%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD44FFA8AFA9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF847DAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD45FF7D%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD46%FF84AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF7DFD48%FF7DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847D%A87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA8A8FDFCFFFD%28FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/exec_file	statusdict /currentfilenameextend known{		{			0 () /SubFileDecode filter cvx exec		}	}{				{cvx exec}	}ifelsedef/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		currentdict /lw_initializepage known not			{			/lw_initializepage /initializepage load def			/initializepage				{				lw_initializepage				/initializepage {} def				}def			}if		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: b.301.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -228.853 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 228.853 li358.627 228.853 li358.627 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"1 lw0 lc1 lj3.8636 ml[] 0 dshtrue sadj86.8072 16.9258 mo264.824 16.9258 litrue sop0 0 0 1 cmyks86.8072 33.6465 mo0.25 33.6465 li0.25 0.25 li86.8072 0.25 li86.8072 33.6465 lifalse sop0 0 0 0.2 cmykf0.5 lw0 lj4 ml86.8072 33.6465 mo0.25 33.6465 li0.25 0.25 li86.8072 0.25 li86.8072 33.6465 licp0 0 0 1 cmyks358.377 33.5831 mo267.82 33.5831 li267.82 0.267579 li358.377 0.267579 li358.377 33.5831 li0 0 0 0.2 cmykf358.377 33.5831 mo267.82 33.5831 li267.82 0.267579 li358.377 0.267579 li358.377 33.5831 licp0 0 0 1 cmyks0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica Initial%!FontType115 dict begin/FontInfo 15 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/version (001.006) def/FullName (Helvetica) def/FamilyName (Helvetica) def/Weight (Medium) def/ItalicAngle 0 def/isFixedPitch false  def/UnderlinePosition -100 def/UnderlineThickness 50 defend def/FontName /Helvetica def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 0 /.notdef put def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0 ] def/FontBBox { -166 -225 1000 931 } def/StrokeWidth 0 defcurrentdict endcurrentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E44BE895991CB9C373C80EADFEAEF5EFA5F4286FAA013099BA2C44005FAC039F852BB4225633818093683A68F63554A937F8BA07DBFD09D8B45EBF1FC7D45C73953C4A942AC8EA07942969C3740F8FDDED3036CA23DA6FF540CC45E537C59B9AA6D45C578CA641FE62A8116AD9878FA6246AE4B043A31FF7F04E1808C8B7DE9818C0B46A24A3EA7E4479EAE242A5914A7B158790E7FB54257EB78FAA10F66F92CDABABC598B896060ECCDA4141E5D7F2780D0FC9C7AE6EDCFA4D4CB33471B0CE177F5F34390262090144A3542F0F99FD6A431CF58BFC177B69B948734361FFCA09219D86239F3D603158FD8D113E5F4328092B78C352E8F793767B178BFF1CC48776F16EA790F7143CADE2D7427D75F1528DC1A6D3925E146DAC6D9CE4162708BB768CD9C96558C5E5E305F97CA4A30DB8104FB7B8AFDB4B3BC3F4FC7560BE408747CA74201D38F5AD74E96F883F9E9CFEAB6B1240A2366FE9803F147CEE19B03DCED2E62CE2CE096D2F2828721B3CCA9F3D814A2212382CE23F516B9CDEFDF7BC8FAA73111ACE136FE7B9D486E6C96BCD0CF9C52A89D2FA2D30D14D0FCC9A2470B53D39938A43623BC02445D0EBB8D650771CFFE76FCA30682AF10E2DA6E4D634673A475ABF141802F37C3FB9875155262D4A28FD6B5F85EE4176592A8D3A421D4381BD4843BE10AD07C3DE85AA61F8E2EA95EBE86A6374184D582D35050900C96FED7F4E5A582DA69EDDC1DAAD28DE08D3CE98B8F6D3F7DDA609F4A3E9901B1146E22277CB7720A22CA09505B145546BAE68E2B972838048211660ED496AAF92B5C46A76FF7A74EBE5A27F7E523118173D167D9F5F68DACF119B296C0FBC5DD039404A4CC7CA837CDCE5FD15542E9DBABC7C1D42D0B9F00AE034DE2240DC724251C6B6817662E8E974BA4B60DE327E244E6EAA28AC475203416E87776838447CB3C4981B0C4BD30CCD4907B9A91D904C8D0B77F79A317C0D2BF21184030130DCC39455B80EAB8E1B323EBE123A7F0B05143B8EDB7A35D123B78719E50346CD44E7FC542E1FE89EAFCFB73C93A0165B0AE9FCC0D1860B0823E43C2DFEBE994C841084096602A02C9F4810B6C0F010A183A2D9FBF33FED88B4E1BA952C31AF88CCA6D5C81E9FE1E91A4E507E02EAFAEAC79709296F1BE5CCECF57C3861ECB1C9BBBDD913A9CC3064630A099B443C3722E4AAEC929409A788D9E73E5FFFA85D784F123A683BECCDAC02C2A75DE277A2B5C700A5A9444E07159EA4012DFB1E8C07B86D8DBC32FB590ED23D14823C9254C625110E3366BD1D4657B1720DB4702BF71C0E31E1A1A95AF701DB2D05404C0879EACF1A124C0FA3157CE4105B883F56A372E0967E781BEC6992B7AC5E7DB719FBD0FA14C1B54DF375AE6BD34D2D2E874D88A7C51C8C63E23C007A9470EEB98FCE948808A51459277592104DC1A0CA46C7F09BA2F1D7185F1EBC99D3B3AA0AA04313C2D5ECCAC6847DDE33B36FCC1AAF9A5C5B399BB3116AEE82E47D14218B3B08C351E746E8F81548DC7FDB56AAB34A2ADE4CFB1EAAAF3F4E597094BFCDB9E394836A09432D572408EC6EAB941CFA27D7FEA6D9B4291144723EEC613C08EC476B1C419E3724BF8717114EFABD4FE3B7A399518AAD4FE6EF4B0208B9EF34D21A3DD6B93E461F27FCAA3A1E60AD82813E9F17C3257866A736E3E24E7D68394A14BE7469E20626F9106FBB20FCDAF935091167FAA11A4C720AD84D6A654447BFB6A1D9752EBBF730AF24A176B15C3688444507F900C6B7EA4D282C15F8C5C8766E79B5C48D72BD843A436F61A3AFC7F508593761DD0C3074F6197AA101A439A050FD8C4130173C7378A336F1BE588AE1ABD865C43B1A8BE9846738B15DEB7DD7A9E3952B61CF1E0C97FCA155F51D44F7110ED5DD25AD7EC5F377790FE7107EE4CE09BC0C16F2A4B79F7EF8DFBDF25DAC2FBD52DD680EC7B87088979839F87394B1EAEC93E00E9D17AE90024872A4DA8987E2A2ED7EDA653CD10484B05511BA4BF3DA4E5557A0C6DE7914FF4CDB5055F09C9D80EE88C37B07AF2A24037041562EAA234742EA04A0157393053ECE96C66E2DBF0804B3A43789BC3BAE595C379D53C13CA417ADB688DAD173E90E9C375252185187983D8476FE0AFA642E81CFFA7BE49355C3E3E9C6DB2731FC30CA9555FCBB382CA0A1AA8B70F4B8A9BB1775BBD53D05E30B921F65D0008DFF40287E171F0976E05D1D88F64601B318F70EFECF2A74C8EF648D2EFF24CA4A226027B6CF8F391A9A0F3046FECB278555A6C4A7CA7FA0FCF78190EE033EC42A028DC24913A843FDA4CCAF4E9C010530BF1BA72CCA356441AAB47E9B374DC7C11DEC3C711FC99B522DD9C524F6D68665DF649A704F999D7956FEDAAE5D7563B5F4F8568D25AA7BBAA11627A82DF5A6F934770E1DAD4D52E4FEB08660348BAEAE27A70AB8E05E32FCFFFEC36CE00397C62CD530F4072A3D9B1E20B5D7F3BE8758C06BCD47BCE37B4213D1034A61F140D74181C761788026DE121D2A2E3014F731AA9834FECA8E7FB629315729EF355D72F67315B7712CF0B4CD10A2E0902F3D70136EA20B3346B6BB10AC416674FBB3698F0FEAD1086392E31F8923EA25B4E2B9F46D3FCF4251A750E1643116662F2EFE6EFC826C2FA986669EA64EFDEAC72C39438B272BBB63B8981D1391621DEF21BA15EA0DF0F9544ACFD15392CB9188795C02A2CDFAA0FEECA7E198AD501757A4C7DB847CC0833FBD89C6024A17078FA24BB6CB065B8A2DF5BF27F696E32F5C65855449DFD826862E29F3001A1F91164FE400CFAC9894B4994C7BA002C51E4247D0DA574D59EF26EB07D0ACE4F153D8996AD51A87D3D216B12C6E87E39D66657E4B0F69CDD1E7B7E7741EDA6C0E82EF6FA4DA6398A4358DA94CF9AE5FD005CBB86570A26436AE156079665F669052FD4B4B5301CF6D1F5E1D35C6C7E867D52EACA29B54DE6A62ED460B13866520C1981DE5BD43B4924622F26F31248DCD06DCDF996B8486383AB062B33FA0B31644D962611ADCBD229C705188D610F59012D02CD0EBA7F5A0F57DA32211CAB166B99840148B7DB88F9A48815BADAEC46C280FBE02E62960EE8A9C0211DFFC5E820B90AC60C16A121C9F8AB6CBD551F78BF4A13332C2554BE7D06E3B8A2A6C6E75D68C8059D7C9CA754F2A543B7FF3619EFCF529C9578EE03B833689A187259BDBFE850BECE7D710CB78D96E81D90852830F831ACB82F73AD427960AB456A9C1E85CFEB93175342166021923B940D1BA3BD9686794D6DD77E175B6526DF8D64D754F5DA3A7E158FB41CE2535E7ADCFF0C1178531332A7253C52DD349589946A4EA7B3F71DE2BFAEE635E282B09D0412DB3E067DB64F417051BFE02017C6BC7B04119D8D243449502DB8196F0F499282C38CEFF1637BF7BAEC44D4AC54E77AA9FC8FA615D534C53C9F929650DF92E02991BA807B2590CC7CEAC1CAF64EF2DCDCF9CF04D045A15B335D69C4CDE9A71F7DE72C8E2D6D53B91EDD873D0F508F164247615F6A5C6FC3BA4F4CA504E140642E3C09F80D610AFEFD7665752A91B65E58AB57840C7B56092D0361A1D43141FBD08242FE33DFAAD032ED7BC341D081D1C6BCAB8FE9B300261234F527DB89B4D2E67FE2B78EAA7675256ACF6C1CD0640BABE55F07AEEF2CC434C86DF534D18973C22B24C3B892C336C3036427CF3DD6A9409336C90C268106E40BAEFD8B5327B774F6AA1370BB2FA66D563458A96EB0438E7878E016CD7A28B2FE23EFE190736D413C2D551C15236E71977263C7D4AC0D8D6C1B95E08CEE6222D38538288E96F91105F39244E02E50EC0B1443243FD4A6C0A171D02D796DC7736596DABDD9C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 68 /D putdup 70 /F putdup 83 /S putdup 97 /a putdup 99 /c putdup 101 /e putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 35{/.notdef}repeat /D /.notdef /F 12{/.notdef}repeat /S 13{/.notdef}repeat /a /.notdef /c /.notdef /e 3{/.notdef}repeat /i 2{/.notdef}repeat /l /.notdef /n /o 2{/.notdef}repeat /r /s /t /u 138{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt20.7726 20.125 mov(Source File) sh282.089 20.1025 mov(Destination File) sh260.127 216.603 mo260.127 223.23 254.754 228.603 248.127 228.603 cv106.501 228.603 li99.8736 228.603 94.5005 223.23 94.5005 216.603 cv94.5005 45.5606 li94.5005 38.9336 99.8736 33.5606 106.501 33.5606 cv248.127 33.5606 li254.754 33.5606 260.127 38.9336 260.127 45.5606 cv260.127 216.603 li0.2 0 0 0 cmykf260.127 216.603 mo260.127 223.23 254.754 228.603 248.127 228.603 cv106.501 228.603 li99.8736 228.603 94.5005 223.23 94.5005 216.603 cv94.5005 45.5606 li94.5005 38.9336 99.8736 33.5606 106.501 33.5606 cv248.127 33.5606 li254.754 33.5606 260.127 38.9336 260.127 45.5606 cv260.127 216.603 licp0 0 0 1 cmyks0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5716AFBBEA343631FBA6214E402F086A0A2D7F81B4086D7CAAE6B82D1EE933239384255E90B60FA508122AC8B59692AA73BC6EEB4EDF2CDB2C2089159A0DCC72900365708568408BBEB977931636FA94378F0F1145BADB3B2DA74773458B578F1B3C49C7FCD121D08191FC802259D200D5D893D49F4F2F65F1102C03FF2258668EE422AFAC83C8697FDC17112CEA2893EBD957D96DEDCB79B65922CCEC81DEA073CDAF6282467832A41906BB3E0302D72B70E11B18BFEADA7B98AE7F2FACA62F1384DA357A6CF3D31FE7DAFC336E66800E6F4CA3F5B176E837542BB6988566A9AB88A68370560196169A0E1A3F192C46E52F34098315E494D7225B159884814B88FF60EE351CB8CF02E982EDE9A81F5D256B301EAB553786513D3E6A46DBCB07BBF5B2E4A2F7F529365FD641F41E3105B2762F80A88745D290C34373A25F87824D68C007CC831FCB0AC98CC82B84307D1E746915AEA7FF3DAD74C78E78EB82BD10AD5DC8887AADF1831A63A99C3CC0F5B3E401B4F5FC8CE18F03A0D91B4B073497FE9721C165BA8568AC97D48A4B4A523582CB42F31073AA6C00166C5831C94123900187AF6ABE7C4E9102A63B9B26CAD348BEBAF045757F1E7F59EF3E66C8E1F7B94FE282269593D457970B0AF0531F730BC1061220D90A4985F16EC014D586D0E187C84C9A3F979E5F89705585D79BABE491B95EA9651424150D07AC2430BC5338EE7E1A4A60A2D74A50E249C680448F029802A00D55F89F7D2D3B8E83FE6574B09F5867A6A5ED1CF5966D7EAC26986BED7CFF8C1CB9EAC1C24E2680073D93B9EF088EBA3D787D7A69C59B380F1A9B19F0CAB2231DDADDFD461BA83E8AF497344F92509E689C239EE5FF2469D1BE446177880A30F919679C02D3C30692DB7BD45AA1B7828C17DF56425969182A939A52C2F5DC04893424FAAC4496CA5DA7A78EFF19C0D896A5E0F67BC16E9E30A69003C5C76A2BB4D39D1FAB41A04C59AB3629219215D4C806B689AED958C0AC2B3784E5A30C5E7E26C82D5D55EA21BCFF056C8ED6F6C62A7F9FD176A067728AA47DDB9AD09659C62EA4BE4E5A9D9DD57329D7E99F625DEC5C9DC2E396825E2275B2284C03ECF4C5DC4F4CF9E8287F9B5F391837B62A968D8CA32EA903D0A0B158324AB72A140417C1153C31819381F4FECC43638C672CD677C990DBACB32EC3EB73DF1586BE41FDEE6F01D890A24E5A164B6991A53BD449B320EEB4891ED4B93A803AC5249F94E238BF432CC3C3402A5B939363DA31E5D8CD3A174641BEB7442C36182EC00EE9083702E2A0E10F5792DFB8650E626855FD014D0121260123A0A66E04F7C6385469F9611307D457AFE949BB554E6672B28BC40A2625A264FF1270F6BA7A93462A0185A8CBF8DAE4334B9D3CFCB071447EC74C7DC675AD593856BF07B45CBA240230608BE902A091EB8F75C71FFC6CA51CBD495D9678BA817D7552D9249FF7F01B3094E405D187935478B9D7ACA62D38A9E535C3BB6F840CDE17451B07431FC3488BB05D90172B059F5EBFAAE46A47B0A28D1154E7B02D52C722430EC0DF1E74B096AFED0146270296BB8CC3461A32C06676EDC17F428C9EE45F7E9673305120199B137A93E8B917EADAF7EBB4A4D933FED514D05A4286E6E2E5D92789FFAC6A4A58A48DA01D191CC9DBA933A7D8941FEA13025F973C13614B2467A8258CAB150CE95C511160F4A08692F8A38EAFE69C6436E5962FCF310191EAB7ED9282AD38D360B82430052BFEFE23E167C1564F9E6062947D9D723945C5FAABB1B80C35323DA045496206BF217DB27AF19DC8659DE4B7FE3EA550D797F584816D6A459CF4769FBB488BA51A7DD2CBA1BE159BE96D524021665E3A5E131B0B72A28F3F37ED56E6877057390532676AB7E79407A7ADD40B9AC4D82838993E3E29601B37DB8B4FCC56B316EB6393A89595850FFE169DA4FC3FD1A040F3350A7F3404E89AAE20171BE3365BDC41B301DF4D3E2AF4B841CA35669DC17BD038E0A01E5AF389BC135C8FC00BC07A397699817CE05382BD2719DA7E17205B85B26A722934EEB0022C0DAAE54521D0C826430933F40197598EB96718A4C5C1D3B69C749B0097D54141407529BBA380874DA957DFEEC83BE3AACE605C4F9FEB516DC3FFA447B5BDD126980419F764912D7C0B343B03A8E55AE3726148B2D2C9D708BD735B9363D098D8B20FEA26C2ECAC6D5C7F9BAB1735148D17F83AFD7D68F3C4CD4F4D19FAF42E471AB1D2F2CDE9260CDCC226C18D2A480F8B5097F66D5E3D4F37CCD15218FC47CEE18DEB69CEC9466FB1ED156044B138DC8C6271C38861D8E0A5DCF872A5E5134F6E65CF74524282EECF26A53BE235336230A89126A51108F6F4E495EBED8B1028343196B5FF1AC4328786FED769EE5F9BA979AB2E70D44F97F565F3C9948A3221BC6F544273D759F3063339CE90E681F5A8F5697897F68196242F5244DFD52B79AF4FA4E40AA0FB5E5AB3B2331ACC8BA375FF38541AFC444E36F132C7D9C9CAF479C6009D9A82EA007CCAAA77EFC743D8A52DACAA1422899ABA0E80B2880AB7DD5233851009B6F6119868DDB193F45B97696F6169853F95A8925FE118AB5CD1DCA2D29A05377B37AA884DF28BA8D9BCC9C6382A77736014C2A16462572FCC83BB2A156DD1B7DCAB42802469FAAA90585D57BF5070A4A1BD0B5C64FDC8CD50B14698F667DD740D3EED0DDB4F5205B09363AEDEF0A6352907B8BEE6DC3D8D507E657B0EE87DDC8B9DAA171C3B892F27ABD73EA4F75AE0992D145004736F3388EDBC6578F501F141936D58D2C90BD1C967867E1CFFCD02AF58A4CBD316CA30AB24571D9E9898545D87976CF35A4FEABDA4ECB86718BFD2AEE86AB5D4AFD9EB2135770F1B3476CA3EAB220767F25CCFFFEB6DB59B52F865FEC51A36877CF2C8C52F535D0597412534A2770E8DD09E388B1BC9EFAC848A76F1E215BE3F0ADCF64E3B5C502139B72D5431C7F2F732CCFC79445D81E9A8DA97F468F77955B073275663145673EB8FE58D4FBA455ACEDB55C06EDD75E8BE51A21C442FD4316FDCACC009003D6E17291390D76E3ABDB95A02C602657083916A6B0AEE0AB979FE272E5FEF730E967A119420BCD698628B1F85FFB3DFDD01B287D1F84620744362A0D2DD4077FD9D28C3A004C5FD5E60C2AD3F4D2FCC0E04EA8CA4BD5E3423D4B6BBD6596494C4E8BA34A7D044CB3495CC66DA806E28767185918B70A45AAE24849F7BB22C9CDF41C6B5CF34038A0E3BD7C0BA48769695068310DB7A334D09733B24D00A9A10B6D2E5D9106B307D14916C1D8CB08655769BE65EA74AA00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 44 /comma putdup 65 /A putdup 67 /C putdup 68 /D putdup 69 /E putdup 70 /F putdup 76 /L putdup 79 /O putdup 82 /R putdup 83 /S putdup 84 /T putdup 85 /U putdup 87 /W putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 113 /q putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 120 /x putdup 121 /y putdup 169 /quotesingle putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 11{/.notdef}repeat /comma 20{/.notdef}repeat /A /.notdef /C /D /E /F 5{/.notdef}repeat /L 2{/.notdef}repeat /O 2{/.notdef}repeat /R /S /T /U /.notdef /W 9{/.notdef}repeat /a /b /c /d /e /f /g /h /i 2{/.notdef}repeat /l /m /n /o /p /q /r /s /t /u 2{/.notdef}repeat /x /y 47{/.notdef}repeat /quotesingle 86{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt104.541 59.7041 mov(Acquire input file name ) sh104.541 69.7041 mov(  Write prompt to screen ) sh104.541 79.7041 mov(  Accept input) sh104.541 89.7041 mov(Acquire output file name) sh104.541 99.7041 mov(  Write prompt to screen ) sh104.541 109.704 mov(  Accept input ) sh104.541 119.704 mov(Open the input file ) sh104.541 129.704 mov(  if file doesn\251t exist, abort ) sh104.541 139.704 mov(Create output file ) sh104.541 149.704 mov(  if file exists, abort ) sh104.541 159.704 mov(Loop ) sh104.541 169.704 mov(  Read from input file ) sh104.541 179.704 mov(  Write to output file ) sh104.541 189.704 mov(Until read fails ) sh104.541 199.704 mov(Close output file) sh104.541 209.704 mov(Write completion message to screen ) sh104.541 219.704 mov(Terminate normally) sh108.803 46.7188 mov(Example System Call Sequence) sh263.23 18.8633 mo264.053 16.9258 li263.23 14.9883 li267.82 16.9258 li263.23 18.8633 li0 0 0 1 cmykf%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (D Haldar) (Techbooks)%%Title: (b.301.eps)%%CreationDate: 7/1/04 11:05 AM%AI9_DataStream%GatkKCQBIeQ)=Edniu42+M`smQM:@;DmUe8(t5'7m-Zkn(^q>[.MnNt28"$8a6<PPSi<C,<MW0B<&Xt\<b5l2m+?YjhKS@p<daGV%mp<YP54>(mqn!YorU':0em,<d=!&plLW^K@r3s:&X]Ot?Vgb%dchcLb+m$QWbEo%brSkTac?KirqSd^Nh0T(sO"Xk!p$1(/0:ok%%q<GH@YC:02YJ5G8`kOY4cI3TU?h;s#>L3:k]tPHQd78\8oDSF0mah=+=.]=Rrq"UNBC"f?Qf#4&fCYoeHiBXu/,dqtp?gjSqH\%&%J,]Cj]^t=ZqDEK5M>6WX?iAs`rU5f&pY2a^s6j%hlVHj$]2u1C[b#^VT)\8oj3(5IT?^C8H%"SqpGpuRaKPC.qXrS0c*Q$b26RPJ%in)e3GNB85p[oWBf,LoRK@6$A55r$P?MUd0X\3$@CUEdR9&qp4GWQ%W$e8UPEP5F(?]N`IN9,gRfA[H.*'ZXbT=qfd7iqj/iuc%e%+IkSYiK1hmmg!t3q=q^3gT.M$pi-2^IpLCPbP(<%NrJtQ-1gqCcJK[UkA/\a?2sl@+3!R'T!*&sntE8=^We^p?b^sZm(30Wrc5^N%dH8*q0?s=TX#L!0a1IC>f.hDqB&B3<@pf,s)>Gjk?bL?\hn5D%j7W((/Kblp>eaRJ3U%I6(1)F@Siuu?Z,+1rln]o+]mTSLo=^bU%LWf.VUW7S=s.j/])tQSfe%@WjDqhTo3R%KX/KVt2\+XXQIdqe+P39$`MZ2<'G@,Z+k4a(LGLbSPhRNQ>@@6BNT"/J1AP<\)aBp->%mM+*Dhs3AmR;4Y"0*lUj?Q/B_r7;/YOj(Fi5Snl+#TKTa3a[@5S%8J1ifAOM<U;On\k_2`FI_Iq*uu`g]_3QlEQ4'0O6cW5,?_Ie%s6mHFleX+.XI'7;:VIT\8PE8;orBJ!c]U-@m#uD%s8>=J\XA#en$tJ"S.k'7a,9o^muM%/H`hkpoC[LoVbVLV>f?PO=(Qn;dh8'a%r6DKp(NlSc+6qaq/*jHbmM^.1%XesRIV<tJ,M&6VQ/G[*@VU!4hmS;eppPT]nF=3fi%2ElLQgrahjFeA7NUe9f6?+:CTl@K4Dcg?%Dd2#eoBl#@ho)/C]4%`nr7W$:,@iH_OOENC&'f=rleVEHhd6?0`ng7<04+V=oML+N)lJ=9o()I!#PWj7hu2#nBC"YD4hm1N4l34%%@=NMVf<b@`Nan\FCYp0WpYZgITB@$iZ+WQA5mK'7]och%Xh<'WdJnI_h;>[`Q9;lE0CTM0YNPr\idW#ErAF=ZUC$]NDCjbrm$B`$%`2^&-fpuH2s7/&&SCc^Gc]dZo3mm=%RFT_hrPQgjDss:tp78`U4Lb@R5IU%4b<N-!RSQ)iVR<VOZFg/7&)7MIo%C58s0qF7%KH+_%h0a_^fs0,KO(06F/<Be6\,XbnB'p4^kP#XOs7mc:o&dR`]\P<Y(8uoI'JBAHE5qLQgZukki$eoJq<R]t5J1=+/mf`qQnJ>28O%"@%c`b'o^$E@<^"91=lVm8u:S0i$dH=@Ul!#V$YE\[]Pk;)BSj'iYZW;LP<dgn::Ij$:Dq1k+kr8Rj\%_]2htlUg*Vn5eqW+]\oUVmU%p$'r'.I$&o:\FP4VroetLsPU_j#O;fI]=W2T6j8#Id1.K-iMQ(FAKA-4[7C9l)27j446p\pMD8&@s(TDWP<OFqPc9Ao5pR,GGLkB%DnYFAh35!ecK9D#I7s=2TDHj^Vg@g?4rX5Wa6,"FZ_X5VOlr:-UHceJNpXKj7XeR:gGdE-qNgPF5BWiE"jaeE5<Dq?YPORQn$^*r%XIR>rrq'-=l0cjif?\O!H:L3m/`!%JSu[*.aZ6Qfol\6C$u"]\q73W\3PKRcorW;lDY%o*q)Nb\r#F=6h=Jk"ofBj-qkroHmV\2e%]@50j?([bSrq'.H3osT?GL"<UXFBFr]"?-%2p&euc8ft/'i+#-am`#*DUPDET9=6;_G)\$CO4;'3P':_cg.1oVNKb:jE>J)f_)B$%e^(Roa.Jurs3?b!RX%Ns\`W)1S7d(mr&a$76/0^q/mmD@og,p%oCO1&Vf^hWr^$O*oRdS.2#UjJDmTAG%N<`3-?\suCu!$V)t31*%kBYAuXdh9KoQj\0HiMF&o94s]o3Vddh[cpR^WREJT'neST)Wgps*f2Us-7X(?-;Qgjo4/$-g)ifYNN[XrU0U\iV!+mq;U_DcZ^F:%c[Xi"F8l.-HN#^=s./jgCT!ff\t4E/r]4Ds58V$@n`e[!C&[tnf0SkTm7dL?3rNp1ISt(P++HN*hmZB6?[VdXa(N#tDpjg^h0EVM%d<\#<]r/X&]on4JMTbkg8NDjHrH=c&,M.G.?h`a0:Q#/6h/^+0';BRDG*H>3ESpNZ`T)d741a/A^OG=Koi'I,?hM.IWH4U(IGW4o%h=DQ][XLEShSZjAYIa1Hht`eoF4NPR#`\#7V.2\HCUa1&s$,,qr(Z'5?hKE5h*.ngReS\>rDT?Pkg)93T[UAs3+_L9YL!1I;iX&F%Ga&-ITA8T,F8jeX4agLcY0G:ja+*dR?b,lC*-&,DZ^N_Oa3jaZgje???Ooa,g`t/2a/A+JpZ$;ipr5DUNF&g4[6MF(nNM?''k8!H%^N'0X5B/$[roK%LSt;];a&_W)]q3sE^,b;Fs1^#Ad":kQb(&j+P&D0\f7uC.g2_Y#,O4[;[n!r<S8YU,'g!]<>lU]4F+@SFU\!_$%d]rC[-(KIWkLG"<^2_r?HT:$7b^7N4+11gIPP;EWGS]`1i1oTQlf5`Q347gG<r1Vsce%42O5@Fl_6L0+R,1u^RoZ&_\"iW`_\.B`%SijUQ8$=5O?%l2]NnM/"4O'QNNojTQH+p'"cL9u[D:K\>qdH$;YP4+84o^!n#N)'3HB=hirB8d0an\]FI<PU<9)U!&4/D$/*PS*9%O3c+(*5&ai](Z#:W%7o'g>?5ohY5?Do0^*.lBj-<rRuWqO,m($GZUMVhsX^$a7eF2q7CEkS,&OLP_F?cDKb')KCe[Ro$BH?>PF3#%JTU8K/DSOSFd9UR'Xu[mf+/Bu:T]GN<NN+<]5R*hjQBad7k=4T<UTN`=$#2bo_4.6qt",9>K')JiTY(2:HNdE"1n3%hVOI`fA@\$%mn\@[R.L&(_BB0YhVc43BNB'88=8XjSj.4sJ(crrD\7F\ilALrYfOTCSo8]LJPU`*&`/e(g\VNXI6UrVl_D#caYj)IBmJS[8-Vi6%]</Ute#=@c<o3?D9k0t&Vi<gdqe<*Lp\;(^krjB4lB3jll%(,cOq\QN[.?N_p&+cQ%S>rbWV>W=B>).%XPruTQ2]-f`VQQLreX\G%"3BCIkPFg:j55:8qo<@L+`HjYA>#^FFEc4/A"ES9HCksUX7CN&n%U5WEc8i[Ff$57JVOuP?0TAfDA_?>%Hl(34i2L3P>e"\lDN86%>rb_tj#p%3hd-,'4lEr%s+d`9#I)&Ch>1XTlcg@)FQ5[]5A.YoC`P]u$f9n6YAYI`hgEXJ5MQ'bga^$N#CcUNA%R6irc@r7bIkZ.%%Sf+\Y,'o*gHB_)HMci=)?.P)iB:sq@*c='#SpB7GsK[49#N1E:Wls;jDH$u@r)'Bddk+0\G:a:>5kmd-O5m,ea"ZDN74CsnRGf"%OnJ\k9CR+1b%^=jaMIhV]H\0cX*"C/-fs=NS&ChhIu:U\#SGj:kV;+qfD4S$Lo4;eH@8[5UXdh2goQT<n<;lB+1)(Sb,oUB@/f$>%q?&7u'-Z1Ji;#NAmBiB2\j,QRO''H#i.944Gs%DSHTD*08)ECd53>^;m.%;LO4T>UHM%3sn%Cm\ZiAVsSG<"6.]TE?he_99pJ1+#%^dCVnWSHMLpPWYNl.]?f*uWkoYPV>n2sbUEWh*+.b/,SZ7i^M)pk+>]dt\dW)'>!L^GG/$8Dk_,H,.[sNWX_]/K_8'&&.4D[.N32%SoNi3EMAp,I*.n-=B[n)&+8'HIPpct]oLq.5NNY.](*h5^A"8LZ&cm5I_9,#YP6-!'A!*EUQRiR#TmEYc[5V$g[ZCD3+KOd0=8@\%o.0]PhZ)b$_Lj/])P9.aoZa"XpV/[s;W!N4m2CC$qY*pl^B?&N=G"Tmqhu$?rk<"jO%0-d#opD,s)J;q9CULV^KmC_.t7)7IgB9V%brm.2Fq&]2hI:i@=JEP"9;L[E[\,ggP]I=P&`T:^d!_P[lJ[P+,V:+B"e^BnqY&Ak^9@>;ni3H+I!t=IIZ_!bPUF*[3Jq.H2lq7K%aSUC<dk6--f).'gIO#./]^WoUcT+3%g0<oCT9Ph1rok0t3-P(Abi%IQa&_^d@Y:9d0f`:rA-lFH77H)+"ugAnWHR:Mp8Hh<#00`V%k58KK)_+'brYDQ^2gu);Ih'nS*uX-XhWf<uh`IqeSmM318b^m)Rg6V$C$Y_=EZf.:Nr6>0oV!"HGeN8q5:J1Vpf_Q4MjljhmD.Jt%NOt7ugu9Wm4tR:b]R0AORD.TbBmF&)hQHP1)t,"okIeQh+WU+7j\)u4ndFm_?"s,f\A9COnXmT+IXLdK&;%O]6@O1"6rBt2Bdcb@%j^--j^HX+u5I(P*Ida^lG5AodVnS.gh,`g1Ha`4sg2[.s%rt4b+\f&j2ePPJ`]&##7k?uPN/4;HpC-otm#Ro6B4Tsu>i?IsJ'2PD%#lF"frI(3^ht6;+(?$8QJ'7FC55F>Q);efQ+2<"hHp18.IZ+e4G&iW@D61Od'=4bN53g&:j--U_O0HIB6Q\ld4nl-uh!jk2O)4Ka%*JMhG%f\POK:@#]`K>fJ(8q.@%KE7p+#B!hOahYBaY/Vu+4i,8%/\\T4<nI1pNkuQI,:!So;Bb2PH:$*O6qjDSkl1OT>,gIi]F!K%^Ub^bs7,3/B.pt^5C<;)n]@ETlSm^n8b0pZJ%D-8j^l)Mq3'dQDrY3mSpu*8rUS4E^08"\Do\ltm%"cqs6G_qrq2KNU+^rcC\srR%o]amChCqNDA1uP3l,@o!Dm039QT*M\[$O:n8,7#G^Q%buCK9W>s89d(ZS'KK?g?0g=&en0+mV2X^:emLSiuu0\t4s!F3X#pD>`M`%q7:V?g%r$tIIZIm1VGN2Qg9+jo(r=.(\>nu*F3#nMW7Z#I(shDldb[]h,r!1ELtc8Y!9RDF1lpC*A>/,iT8n)IsK;N^D_UBY_p-n%rS@&]Y;tnEjM,$UoD'?NHh[BeEO&YaqQ%5Rf3[=9='o:+4F;8MPE(*7rR6)#?N08Z?X=U3-U(#<X%'pu^0`O#s)<Ck+3q!p]mKb!%kLTOcmLNC5II4W+o?Pqb0@r.doQ/m&qYjXp6,2\ahn>D$qsOH9na(sIPOl)amJ3fr=R:>3\%C7A@E+<^XhT>bEkQdArO8,;b/qE,%n%$6K[V$MRcM)Pn4uUJ8O)I4`5I]Bh_7@9q0E:.)]D_MqIX.&(I=:j1NRogirpZD4e,@J](]X4,Di`c-GL,I7b=<l6DuT"sh>_c,%IfK*>pYL<oAQGtlc`ZU6S98_ad:FR2a(JHA1STC!g\3A8^[Cg^eb]$P]m.(orq<AjlT-l^huEEFPB[&<=F332]=J^<Eh*.'ch@gt%hAl!"5kgoLl[&A!FcX;Kf9!a/,l#?"7!l(bq9Aqa_>UM%YJ.S>j%U<LJ'lSir2fq[:n$^DIb-ganET]Cma_")W5d$L?bAeS,^Y]q%Q`!6c]Lh16FFi9jmA!PX-g9gV&BFg4P$U=)THD\1b9s=Ra62OS=o.q+h7WY0ja92%T=FFc([^IVB@$QIq[Ocr.h4f?9)J&Efag==%V>k2!/,tA^n(rHdrhmM$%dq?#kMNT-k'ZL_e^M.FY5-,Mf-oUO5j/%EoGfe8U%mZ+=*I/7n?8rKmsW2:NIQ5VWJK_-MeRZZeEG^C%k!t0cpu!(tUEo3PYF26\EkZt^q"Tp;mbT"PLD(\XgP<QDcsFK"qs3p)R4hQ>Hk]oCIf&$kNT7/*3R,k(;uH'-0E1gW?e^gJ^NT%Z%b-$'fn*_6Emu7ji_(FOChKR3(3m'nW9K$PL_bAPB@D)36fK/"!e^)&LI<Hcn=e2%*#$\G"af[<!Ht/u>(;ho\X;,#b46P^+W]#3.%[qd._kur8R7.3G_c*oTPi1RWIZ[%=<]6>#9S(sMLf#Lcp$-)=DHsPS)h.+WTZoWDHgKNgZhLj:<Q?GhU0Jb>`Sp)_C=cV^Fp_$Uo%o1dk_4)at5][a*%/#C8)VlSBSP)h&3+)Z/_FbaFBCh8nED4GaF=L`FWJ3HFP.nu4/T>>SMb?@!VMIUhAqB"EaMm:K,f(PuC;):#7%B6QOu')e=mLpt:13(Dur@=.%S_KO>&3-nfZ6u*[=$*Aq%GH$<'/ogEr9b7f$X=Gpci>El`P&g-5LUbQ5.>1Nm?`',IL7-GMQ8+TS%38[qtXiA0AQsu8#5-7i)`Q`4(kU#!5/!k7`]/<MXSd@s-Vpl[#\J:Df>X*#0Af@b]JSlV7.5\N7fh>4ZXfYY&AiPFl3PW#-@5*mr%aj"l:k1P(8N&BJ1hIc/rf4:md>8AZ%3_.sK"]Ltsbg)/m<ph^9mITDgXn1^2/q`JQd4)uklk10?fidfNgJ"#.jud*n(4hsPVV2)%%@hAD%bb"`V$.F4=^!9V[Ph:EJXP"T*L9Mn(-uO8$@dU^PYV+0]Rrs_PCds<tF.^X&j(_#O@[[JZg"aC2F,q<mkf*1-o'!@>(jcLJ%-6H'Nm[DC4CmW9M8@%crem'//;0)DV-Ph$*hMX`YCp/9;4OCGMm,/PqXnGrM@a_k(Dcd]%,%sNH%F]lR=0kFdh0tfWLLp6B1JrGZ%)XP$XH\R_sf&"]3<.rcf/j0A0.;)dnZ,d#G:smgJC.*G`?R;#$&6`u.+g?2=Ag=OM0)*$mR^%81ai7.YNAf,N$i93WYlTQ!+Z)m3%Y.c*L`[rOh\%u=H;O5MG\B(!U;i6[]m7Y_1G<u_I$MQ$FO(]!FIoNIWIG4C<YJ@V79fm]3K!j6acjCC`=Gs9'--&j6//83'39Goa%UrgqHAghLN#j`FQJun]EWlgJu[FbtB*mKSFD5<Q<8%4ji4'&FML88co,L%bIh*Vu6@V]$c*TJ8Z</>,rdmiZ;1@<_^D*,qH0st6i%bJEc1<EOdO3CTXa_BA"m]@CM\PG.`Y0bk-XNQa3POdU0"Cao6teLA[O7`7(9dX)JZLi7!]M99i.^(K@ar0MFQ5.JVJVPM?YK4k9m%L_Yj'_QFCA?@?eIXFd&VKlI3iK6@ufIJ9mc6\o@H<J/tG,k(HtH_Z/CEj\a>5!GWN(*1Y&gg_f\8/e]nJbel]R^*8V2Gk#TP%#M]%,*A8@>p<4#!:U"=MVS'!8&3$8WN3+8=ln:u+%-cPO%6u^qO/?!;-.9J&UP*l0oJ<.Yn7jC*RhUhhF,II3i?a(c\u:F2PV6#9K0YP%9TO/p*a@]f0k2"tS0eBG5"CZZR+Q9:1,ltRX/7Y-UDrVVgT^E?/lHS#fkPapKI1Ge@qP)rAtXeLc<Rm<@_$.^%3L>kY%:6TerOBC%`'n)jo9S6ZI!'%aEOU,P]']49c%-UdaPq5_0hf5H`nk4XcnDIhk1b^Wls)K:>[tHTFW!7&]ekLlE\/d\K/#]Q7Pa2E`^Q[Y=b.,s%6#rDK>UX/B%Dj\q0$S2Js4LjN=SNF\)1:(JR:M]ILe$\8XVpo3[[;'dE3iRYgPqU1.2u0p!`1SP=0HE7,T2MP`,'e?^,Z\dS>_tU%"uB`8^jstg%B%,M8+bX7N>o[eFkMk4b@##:@oVSo$\s7`A2+Z)2_U]9?t[ki/?[%4UJ$W$^]JhGqng!R$^!AChGbn^3EW'Ce4O2g%&V3ZAM3E6.]*Y=Z]5r2H@H6m(?l*H&'*B@jZ%mpr_g!qW%au/4!CBc\qM5Xhb@#pKEkhti*+S#425*opD%(MPD=&=^+K8Y4A8o)F%3gM$D`8,7O"LbOGF<Mju,FaX0R"Z9TR-U8c#bCd6.:/Ae3t[erJQ><%dl<^ZUsRVIYleGEO'B[#2SRhKf'$qg*8j`cWn?uqDnn>U%jt&nN1Qm'Mi@A0;GO,g:b%A!o1DJ8tfPe"L)@=jm)JMsF%l$kti15ua/@`Uqg,sBVZ0[1RW[rMQk>bWfeoB1^[pVIo5U:^apM")M%BqVlX*FPqCJ(:W['P#S<93olRcC4QdV48>a)qp\8(>_L=E_#tFo*Bf1A0Fosd+K"3c47!fjW/MP""(6`fYHa=8d;YC$k*C@0?^mE%p:KaIZXH-DGVO#*EGZG%kFV3a3"69K#f*2W4j5'V<RC-\=94Inn,Y-lb;2).8g\Fbm0:SLAVOqrirtMGAh_9>9tV"FcRJMs?Ti1,%!3EP)47!kT#'>PB(_*2,^@cp-2O/,++@:t-H13tW\HG3`L9JE!DpW\@U1ib+F+1]OKgK]&c2hSB0la_BD?BEi+)AYl8-:nWe_p[2%[hB-H(*D$G8n!GdH&lF=L+/dJS3Jb)O<"f67p1!=aUBE(M$nB4+Cp(La"s,EE)3G\]]Fg@T^Q'[KiK0U(K76e/"!R/iZr&B?mH8X%%$9Tsp`58q%.Y^2%8>Nl'+dHdgj[6U!fo$[kV]hN!:T^(M@'>qA[aA6"/sqZ@#r@X+<B)u<n;EZ*(G@MD8B?`8S?Vc<6#<dN.U<F%]LT%QhAT%MR9Sk]5a+-'0[+3?Ieebg`Uj-ACVggP;!gLqWqZ]e+tb+N!2@G]oBsg<\W,<&7ED,sAkP#TPZH<UYddLY^o&1A*`/=G%n9pY@:34qpK`E$cCBHX'i!fc5@*P2ZBqNkm!Re9s@Yc9f?liG'gpi)A\or.HQ+1p(fDuK_Kmc#2/N,0_@9`:F*4c"VnQW9&ecN/Y%NEmAV#=?Fcj'`pBgRWn<5Qahei0"6]$48LhXER'9&JG`<.+kg?=BFht>*Im1&.M;C@tQ@%-jr3G%VQ="jfR!"EG$>P$mh;LC0me[%K`u,gn=0"6,s0I.6@^E$M,$Ds!9Y1t49OM`n/kC/eAYX\pU2U(B$-[W+ht>2gc.\-")&%/TJV^sD#=bYIrDJ"9uRB^i+0i*5_-BV%<"<MO<]`\]%u^["Em^sHH)nfcYgX`,-)1[+_m4e"X%YB%)WM!rc?S$5]KGbjGW:>i0Yp"]JSZY[GG%@p8Cn#E^0)<U$42M=@fj0F%F@\#V#J0:G"%f^qNVgS5Yr519LQ4=pE4\%"6A.S`=ca4,AY)pt9=,GM24-;g.rHhT_plM$&WFfbMJ4EiO;L"@K5+@R!s!nU9E7Y;%\[ag&,^h?I'-EdlHU-c&#.q.UE(u9BK<ed%Gkb^?kTa-Z%i9#?5i/)Wm#2o9$jpI(5W@m80[S=-_-0N/2F]icS_tC$pNVUdGes@T%,f0bi!Xp\D1=Ne^Jq\9p&o]YVQiLJT2d.H#$T_XOH.6)NafmcLH$."%JB(m4&c/c0"XjX8Eu.(W4H6HFZT,V^?l`oB,7@362@?O9%f'r5)>D*8J[u_De9<r'C=n#,[o$kI<)fsgRL_Rm<%V&rf^(;iL`o/^:Q4IbmA<$0aFG7FS`#]9$["DjS[NNYC",Dp5+qrG@*^Kf.%a9f/le>%5nO5A1E]A[(5&OF8Q`X0ZH*#QM.=Y?'o\qQd/dl5X-)]%kOk5g>,RID<F/;t;`JEp^)jXoE4:+]8#CE:2g`!uMI^dXGa%q^bL!fn^,p"/M]Lh1,rb+g$;j0Ie1JcaX#p[>"XX6;#-=FrA%&4fRRq)4K6oXML5aH,_nk+XE%:FANe!&pFGj0c&+uK1uG^jRS0'%_&sQFdpYQ5`_e96S-'=CO?\?1'7On4/>j=5<,)NJ(7%Mp(7&U<XYiQUfBWp)b&O(?A-nIV&H5jdjqnaefpQXR0.4Vo@W^NgXPB=*%8ssAr'ZdhPM63_FR&R1\JtEq^YI0b[^iFGf`9iKd[^cAq)*M>$[3L`QoDk)2oc=]u<In5/\L9(_C4fRf@Uju6Yf+1-Z.gi+&jaS-%JcuO@fG"qr\AEM]=9,9*^t_:c(\W&1iA[pJF,&RJ3C!eh6n.WR*$=-S\.R($.&;%*d&KGI41''S9H[;u22=dA`A&-\5o_uAVBF5N%D&fDXJoPN@"`6Q';$WDal<Gl@hQpRD.$%gj?oVgd_uJGA9s118kr(pD'[=i(V@H'TU-P$'>7Y-J8RiERdLm8F'aL"#9!$B/bRfs^%3"-^7#$A$jYaZ#:AhoPPLM8^jm^Yb6lNs,ff[c"/U!8E/<CCW2,i7VZB(6f_KKf^k$7/GD#kT(?c&s6RGRNi1>K@$V>o5_6.\AIa%Uldm&m=G?mX:9QiJ:U*V=p;Yd/,7&r1$;*a@QYJ>Co%oT$V_\nCggc!6L6*1'Um%aZ[OF7@hC^0n!k@+#VZ6l(!L:nEp*A`VhVoo%V$oKo%V"<BmW][$N"=32+:VJofg+#kC_#5.F+h62%MK*T)$Ns5foG<785BEPimsJ5^bCC2qXD$tG^q+j+AU2;+42k%?2t'MoH7R`%!MmNP5X[kRN7FL3*:I`<Yb[g*7a:-"bbp%<D@=hMB3>l*@t7Zj3BFYl]":$fLPa#j@c7P1%<]TQAm@3`"n%6#WsZjXb]m[g3Z<q8%k@<:,e0XaekRQH_EpF[@``g[-F<\"&P2d:@`jV-8(2g>rW!Y/i7L5G2B`_4B!-$;B,&.HZ_"oAL*KMZY!<?kC_]R)@_-ccK;$pF2%(/q$a@sn"jg^dpC9p]m72M*-h@Al&h>Tjq$F"@?RI0#*XDEqJ]%6=l1_6TeSN)$;T`Wb=5jV=0&o7:NDO>t80K[hd3bA^d<GJa+6%KjhD]F:<c1&c&C+H%Xrt=su)M(3@E9!JWS#=TKkDTMr_X)a*<%bT`h?3\;>o?j`D_M0MN+*Ws2%)(=%Nf:#?rgg\`&".b'-Ym3O8%`<^J?5fF2X&CCeD!sa[K45Xu_]>.9;%Jhr%lR@C.'*8S\"]QRP)r.dT2,aJp_\?'`"F^c_(B@d'*b[!-^jDqRFKI$+LHaZ[OmHln%GQEGe_'=h#)^HK]"_86$_jX6sUG`o&JjhSP>rt=/d7S@[>87>Fhs6;R,HaC279g1-:Q_i22t`MG[GMNS&29fF'D<,Z7PJH<2MPEj%UB)/O=;kRY<1)!U(u&@(;.@\YRfHMo&P(RXs+0MWLBF<=kb*sD':[X*I=<E<+C8ZD&V.eS<sApW9S:C%gLEetIhfW%8o'NT$4X6I%Rk/BG[h_F&9Gn$g.SaI6+Etgs_<809?jFIRY7?GC[_MnWWaOf@880nIh9<=60L[sW]3q=_Dt%9\Gm3Ps6i=s>PUs=,?j(6OZeu8u%RU]kZ%@GQ+#4\uc>%rW5'E/(>lX?Af:i7tHK*.IILV&(-@?nE''J^RA8'H^!"n5_XYY,IINZZHSac2\h=^p2(A"4;+BjbmLN#M$g%'7hN6/6Wh%a.7+ehMp(:MLfMcr#BV3*s!U(5U!5B!7emM/cj]m4";)c9Bln3TWL=:rZckU'Qfi\&?p.'Z8$BapjE\WH9,Ib\BU"C%SD&4fMA-mr[BUr$:&O7EJ2gR8.hauM^o:lf0\c\[3sT^b^]DUH)E\q-(g.AM(gDr,^eqI1Ku$ncD[0ojs']pg!$CQ;6fVA$kOAgF%22M,tXWX6:QfS`c$hOh'_H&pDZJr6,U.T*IOiTh8-&*5F[;1sf2A6s`pnPFa%]]`XoC<+qO369_J3Zkg((6k(4*K==@K-F3+KLkY%M`VXWo6GPq1C2$*Xqod_*@oG!0r<W-=m:T$8ZVr"d.F%qA$gqsWN-*f@;a;26L:ejXoLrRWA#(tf7[+:&TS:[8dY`*d0Tr^JHbVg%g<dWC,&j&5@T`c`]Lqm:*B5UJE&:8JU;.K:!t0YLd6-G`^bh^_N;gW^#LG1m(_o#]N&AT*`==j%KHmRm]tfd:'?8],*\c.Fr\]WI%&Aa[b<V1YII(#SlV_:;01h+SC1>\\k_H%Gl1E`k\:EU%SXGEoi;FS\J5QE4L;NIXP3ip2U&;H18f'[Ft)1nnpl3)XS*CMS@$c!`5%Tp>[="B-'50ed<6/Wc*:nR5QhAhYUBJ*n+9BbmMdoGb>njubs<Pedg1Yn^1(MK&_.4@[1;</e\eBc5]oR^TVtS@fN>D"oB>-Jec^%LM,]hN"BS6cON"W?4hW6bcbtB2N2?\MSYH`25ds2;)0RSb&?6QTW0ID<WoKYP+^JLg>==/.@,g8$&(WH!u0&?9i3BC/A)goeH")1%&al7$6%\)bW.f^*6_KF\,_Njo:('S`TK0tV$gn!;%F+td7)M)`nVE"$F:[&"0Ij^<r+[Z!)oVhc1><N(`rl9$W#>-r)*\]LdT#<"%d@CW"">4Zp!%.1<_i47Y?W$+NS=HJjpX7V$BLgHoSC$g6B`Uj3E#H]T+TW>:%erlDMfA_I1rL1X,6!Q*Y$b45KD]%BmM'gFQ!O/)%lA+n@$?0KK+Z.M\00+rp+T0G;3f]U/OArlf"gR($ZaTf[?o3c=0t)Y,Rtqt*h?VF^L;FNr&KV<MLm^2@&$S4.LX.W+EA8i6#AjVE%]PV5*"_BQb-"/ZXP\W(2=bUhT4&O1oSLktrK&Ju<WVn#gnI.ZK;isli$T;qn\^3R**Ff0C#R_[`VSESK;L66lN=5N^>B!Fi()6ur%=DUO"bUX*6+QSXPTIk?."5FEEB,*U@FqJ[=*B^L,&$)6T%-S;1[c6TipkD:r'>U,W>odka?-M$!nVC(3iQ"6?$4Do8CF90N_pl7G%9?our'6\YSJ8$Vg)fA!4"VqVcE3_4V"M?EEJFoXB("!,YK;XY>)$C5\JL?68>HDQBg+^c2<i"Djdk=f[g^^+^FOBSQ=:P@u__pn%%`'iPgS`@W+)#un;G_c\l/I!#Y(7ZEuD]r,S!RV"6=iVP&2:8)UF2Z3O<g31qX9]T,VOUK&k>#k)+?W5HAo6E[s/:ce[_f:HmM,FK%=Ep-5*l[&Cc,TE2%a\u*T8uI2CeinsoU+XS"Lc?,V1V)aO9p,+hL\Q)A-p2)GIaB_XY=bIROJOC)WK8)6BGNCrC//7^]`F0-JqLI%K7HtZ5s'B"iF.ihrW]h4F=IIjJbT:6On.@j#"<YSZE]T1NU&?/E1r*peb1VW'bC?pC)/6p:o,fR&5^P'L%iMs_jEq,&hmo*$s1_:%+l&_$emK!L6_O/omt:g_!X4IZaF&bGUK,ARHl0!i+4pRr)315[$Zfh?Y[K$>A5M+-\SAq6F)^#GabV6t'I!_:f)?!:1+?adXufYo%O3hIe3H^C1GDgVTKgr/,G"bk[)h-G8SbQ]3SD'qZ)-.`nY/f*@MiF)K/]p>p6U`!*jn8ZaG[kVI6bt6a*2.ouir$WL;0\T;6WF>n%*t-..<_fWQ"Ul&X!"OaF2+/IJ0/*FdLDF>O'X>;1-jFn<1+A*]rCn\s?O$$W-n"=cnEh(9C%6l7N30TCe)E[Cb]Qt4!X5[fe?!\B%/5j7rmAY%b(b#f#`51e1q.FOP<:)cEd[W!&RY-6#g4M:TN,Upe`m14nS,6OGG_cnlD;Bb>L([$(i5[p)MQ3a%-Cp'Fe\1&S"p6_T%%b#la;(",O'd!F(!"JFJRIf,;*uAP&^fg/YBGm8!J$S"gWq7J8+fsQBF936'/L`V-$lG'!$nJg-VqNal24Xe,?M,gBJFWck63C#P%,*inkiRYlEQ)o?HAOcbiFn8`'/U)62@24;Ji/i'f(jj&BF1>VZH,j%Gr=fcp,\YLR1lO$\Yqu;I]>$t(!Z2o(V-9G,>[oK%M['R*%(LV'k2O=nGdJ<A&nZj@-(R4`hn9@pF)Q\lV*_"n5EUZ`81gF:*&OjQFT&:7c'PH+Yc\d3?D$tsF(DfGF;H0l5#t\Uj[:9CT!q6]=%RZQ#/q?9u6'J?;V-$G0_#87,O@#88)6ko-HABM+Wp3Kcj!!L;t?@`3G]P]G_!#1C7jDIZp%UtLGK-bHM7LUton:+9YZPG!%a9KoN%ehX>b+qm+IBnG$j>!r]AK'=,-URk!k'B"CHTLa^%Jf7FN5S7)1*XgkA`rL)$$+4RaRg.<@+MjG]arj6+^S\e/Q4A$ZLY\t*.1?Ia%S3nG+i#3^O?gY*:Tg`h2,#R!l_?)`I"B"c!JX`*RK>Fhsp-I*[bT[N1PSFp1JGaCbr)93@``MROIVDeN[Ll=PPf/53BLhWFHps5M%TE<]*AV3<LHj]'\0kE49,h[7n?t;N/d#O;t?^72%'(@e0;[WTN/g_?#23\lTW;#q9ks>:[B8D1?VI2d-Q;F4#5!T;UkrpRo%kI]_%6s^Rn@m1Pb&YL'XK]`i*g2RW*U:iod9f!=p(bl%@MQ:U:KP:dt13^6U,c+oQYYR%t%01*SVP:.O@0@;3h#;nh;EA+5!a!mu"+7]J%g]7aJGaS:OScK8"WOV"W!M),KR]nkt[".BPmY-gJ76Ht`0dAf@Y3?X)6^`Jq#u@"/?\n1i#>mncB?"PW!A8)9,At#`e#!1K$R?_"%H"&%dYZ'#KU;SH%-GrXGJbCV13k@F-DB<Mj$GS#C"JX^+KJ3mRc#(0;RB6Qa%Ef$EE#\)].N]9jg9@FE_3eW79N0*&gK6?SlXZ$K%^KWcc=]pj/H5%7'g3pE7.9[6u*@a$!TJpGhiILINMBX8Q7[];G%<fo%2V9,HKLHmk/>JW76Roeh:ijHT@EK-IVN_8'7oW2C/g9/3%:!49pXaJeEN[*FhiIAp+m`TsUXbA5W]^=G#YscTA9>%o#1`\!5'MIH*9=o]V-f,J@LHjhB(cm4B>icaALAGI)+/DCZ$]bU3Aq"\'%Hk$Z;9G%U@AQ2D9StX*^N[9rF7*P/Xat7"[BNnMfSYaBMNal!!6_-9i?j;KD4GmSK`L#WY6'N5])J^qFnco>U1#c:tgQ`b2*Ckup%O*G>cXEGSi&piBLLd3X^TU)%@1CXVt!"2oQiX]e(\sWre[tuEoU9#H,E5[30-<QrbS-:Gh@<@&H=ZLgJ%+qXE&5EIq/)d-X8/CEB%R0T&:2aO,G$X0l@$q7dX0W:Y'e=n3)KFbld3FhSVE>pU!;WX"ii7mfl-6&Ysg+&r&$6Ebl&P.co2=fkaCiZYpEWPZ3aZ-:5SpO;D%(*>^/d=ndTTh'0S)e42Qi\//%fTLln[X->M)'%'K0Gk^>kUD@*03"oa^D%.`!/Bl+qDT+ML%!e5mWNkEI&clM1<'n^j0T<k-_(S.%%Q"OL`]8VX'G=6fB*3rCAI^/\K&4R&)8*;sGSip)Pb:8hK(#'9m]ch(O,_Y`0OtoW;.:U)(T:pW76HZ#X,Ff?B?[g=W13Ajmg)M$%aSW,&eDUD$CM(+^PJL!fI)GLofQ-C!W48'W$h),WTirR7^gtMYE]-3l;Y`5,*uG<7B7uD:i7:lCgk(.YTsI8M(oLfM+V%c;DACHW%;n5/ZHcD3ss%EK$PpPdKBAJ,]"[jX4cO_ll8^o"E-*K24,5*9<o)LI5XT?GO.V6e=]>;>6OCtVB<KF(pGdI,7@n?Z!jr5RukL;+N%n(G!i4_i^R.ZNOciJ<5V_`9L^$99VYQqu_PPZ<:bLWUP>%+0so(@2Kh/kAtVPJ[UtfFlccMW/R,2jZN?EjL3qW=k"9B!dh6MfKq%%SrL,mH]6)n<Gkk=R%``:C>9TV:^Ra"#p;2RK,&'$l<7L8Fe1&LR$a[T*Sf4B3ZS]C.q,Xt:r$$=!I0^alF>@mPEE6fbr%Ar/R6(N%A_'&8_(]A%TTrA'8^-Ok$@tQP?utgHj[L`+FH<-VBQ-WF7K`B&NlP5`$)>AIK;,&NCZD&7!1^W%W"Gq6R9ZTL.>Q?*#$t[XC7WMV%.*d0q(Es,P7G=#db^>6`Z_j*X%u_RSoHQ,O0M:q%(,dW#gF/b<@K-sML'5K,@IoG;F/*`@F](iJ`peQK;1rE6"BCp!_PMhsZ]Hj-%jBCY8Br@[FWfEKg"f.Tp]3COaOYQ3'oa@]+.'s%cPVo-TdqQB&=On7,jBZJ<TJ@'sDc+,fE.FX$[t=YN_b9'Z(V"D<-K7&E8Qi%K%9I7l41QKWH26_]^rh)t>BGa4&q$$,9LaDLLYJs:eCnhUW^kG2u*"3!s;ea@:Lb[>t=.CI)TM$-(+7"N0fZc`]\UQ"%(Ki=$7p@s?%:kZ]j;4nb[GU%/VBIh0e%>i!1E?]p3a$;<-gLs5]52'MWQ4o6/9PID))9.nP$ekEX3&.%KO_7P,c\YJ,6,^l!W61d#)5Y2#A:k>l%-n"Xm/tN)3AbRW&Hqt9p9B4*b=5KRbJ5H)u8gC[2%rIEu]>CXqpnC8RJTfb/$"Z)(:WhI`aq,6eN@LZ:g5/`(n?L"9+?Sjf]P2&9%Ri?q[%=hKS2[sC4'Uq<R@F^7e6fXj0-nNeO[@s8S(HjbdhnV>i(cK7T.%"kK)^D3_AP=orbRV,qef;QXk5s;Q3P>Jh6N%'BY"DIk%IjEFaW^oopE"G`De^QSJBh-<Z72WBjTr8RI6SgNg+r()[YhS@^UQ":>M2)e1&S-I^GY@'3qh+i!Q-j]sN)o$m>7\.D/(ds-X&9QV%,U%%/M]+=j>NlBSeK[`*/OdO#<*iqcG_iAZ18F`&^**>FdE9SM?ur>)K$Z?NjJ=&9$BPD[1*$pF<k]BkL8oD6"r!kkQ*>7CVCCS^%M8jcZd-DB8Bds5$aE1qu;3j,X"G,35Jn,c^QYTd%'Rt7&e,p2`8ge5aD/f>K+ln\pNMn%ibc.h9g-U?i?tPasTsI_n&sQ_0j5Ms1%\q!%$F:cC[aQ2krVQuIAj]/<gj)@^s,ZW68HUMIsq?C:5D\chjQAs*F7W*Jc^*$cu.+JTe<V/^4cVOZi=BS`k'/1.C@QYL3Fr[.\%%=GiWo?eOp3s-5e/o>NcZ@IN3TDGL'Vfe-XkCe:L@WjLN\k)qS@9#+l^c7hhBS(O3Prn\W'^^ZlQP<J!i\fGm$EOesp1bqm3[:@K%8[*L.ML!587cf]A%J'5@S7S(>h*_7O/rpH`)/KkG,/b)BTtOtj[.aFe!(U%TlsfU[0L-O!$BPCr;Y3MZ;;`rb,6c0N191/fe,sio%1-iAB,X6k)6LM3hMO=Sc?A==SP=;Wn`CAVPn4@.0pTH11(6n8N'KId9.?(>r<O%kq@m[:K<kVN[NAa0C.&O4]B4+`m;\9i%[!)e&%?oY*Lh't7d$L0GN(UjCnb1r^86=":<3-;68eIIkhck?iDaN,57FK'r!8%>.J(q"?HPXbbC0FAqs[>Y\#c]'Dj?F5nSF4G>?<J76T%,s.AkS@M/RD7BkGL8^Y/`#a=ldh`7?QU6]B1oL#_QY,k.KVqMH,>B!%<m1dYVBWp4DJC'ZVakG:J-D=8!hBh0!M:p:n:1VX^2AMA%g9joa`mL*^d`\ZCM.0[/=VG*\A+/M7Zu$5C:_)*o2?DBK0=]-d?j;u&N0?"]!Z!N6U+.DhhSXQ4KJ4#NliQ:QYXqB;il7>lL^hl(%!Z=_TH;m1FK,"hB%\!ZK8)G&["U.m,:X#k,#_5;;1+]H2]]G=c&@LOW,':=KL'F%>Jf[WDCs%!S!2.IginTd0$jGBcS*jBq9LM^j%P"jYa`+3K]rh]gZ2"Fh?Ft%o.EG59N2Q@MGlMtk,WZJ?i-m-fTClWOUQS=U6:3OF@WVuUklEmg;#(@sd:1%d:8X));J.%f;e4l?]%7eT$'5%n.99s1U:m:@F`:d7?+-P[N$lB*+uJAV@B?/FN%&.-(Rlujcji`UELQ)1,eLVAE')nYF?Tnj@o8QdPNAh?q(^U&O#'oLbg%Ir24^;?f<e\JGEC;/HH&mkMRLA[BH`:sc_PGRZ\BM=i/aD+^P379c)j(BM0SWfV2S#as8@_SJ(fL%^[=i\mmn(?f5+P*Js81GS8h%grJdbD=@R(B#E[4UeCTa(f-6jlN$d]`(u=*ma<OA4l`0M`V<k<JB*d2V907O!$hdMES=p?R.mbs;%Vhc>hKD,0TG!on3T%#$t-Nl%b.MJ.<s,<1#+A@`%g@Uh,\.taee]BtlZP_4OT_U6TZ)4G>^X>GmBo8],Wr"T"A>s(;k@(E(C#L2``3.0F.e"3U38fMW/NgF-aCHm%#W/PPAgJbbMl0a`E.q.(n5Zm="T6)dVjI2ibN@Hc2M>$I0GR%^K`X^Ep1!bgH&!#$D&X]t\Hnl<Kh7UPl8GZJ"/0=%Q*_qJT>I*:%/>'6g3VRMZpR9571#E>6_(@ge^tbA-U`?ec)0'fABiV;#5jaiXLU,mr1n;`'Bu*@e#->KS<cPGoYjWcW"mSM_=Jj$INC<qS!r_T(%GF'N/X<r7$AnL_(*c.qc'O=X\,R[b:G\)ah-&jFa(e;gs]qE'IpTiuaR\tO2r"i*qR@[)&VRp8eP9R_3L$BtAFq6:oGi#0p?fbYb%V#b2IL]I<]gaYSo9I]?t_(]a'K.:J6_/HMCa\s<*-ojs$XEd+t1$D^ErYR%<J-@R$<.0]-2l(7)7>HfGJD$^fB$t9Z%nE-c'c;:b%I9;A:fA5O5G8=^Q\*S97D1,9Da2GXnQI'hoPn.LAGuWaLAVo@cfJ++GEY]sa$Hlk!EI("E#egP^DL`up[Sbu!@:gi?#nk)q@)98$%Mp:ii8W7L-:b)Q?mA$DR+[Xq`G(A1.U0A<2HXW&a9]]gF*faduJXWp"aq%S$K00DA`und<PWW#Yfi^hX5ZZ)Qp?Zap%)=9=.Rp6;%&!`'GBbnpF\gljh(O?7ZLFkH$3p.1Bg^64LmE?o^C[HRY;AjE)Y)%b_K@s8mURIl9<J/2rf6ei#@?_5jSI`Lh8uH5k6/1h+p'0l8%0k[FT&u-"0pY%"AY"!q>9m>ih\>X7]Q'Q]\@%m`QWMh:8/8F!k->BdgGF2l>iNU^I-^30q<_jZ^[Q'*;<%[34`W\&"6ED/b,FSWm%G?f-g5R%9SHH(`$,D#o*Z?W[R$?*>E3tbdJOO[i@!JSS.O&c$ABc1B\*"EO\;cYoo(tfE=0B!)X#P\fp`WQd:;jENRmA-H\Ve-XN%1@&M&]>N@T-OAs*-$%^qXfA6rnuT]u.,4kjAu2V5D(bp+Z8V;*3XCk%U7n0!"0)f<!"]Mo<5B*GgY/l%+X+[-4pmcqYjBLj(9AAc%fgr-i<Z9-!(op\.d8qkVhhUtuJPZ_SjssLR09&\mMh#Q;2G->>#Dl;-!'&R\92iC:S5Yn:!kEQ9W!Z_dMo2:P,C7Z2K/T;Kd^b))%0?RnK)_e;mi(.)3*E4\O*95g4kRal[/?&saUEY^SKqf+b9:TtT3+q/k_5iIYiF&ogWi;Ak_o`<FG[*<1_%@L-&h`8c0qmAt;QGEp%WkBtYQ^J3UC)$io3%<.O$<Ge.1Kg!Y!QjMP7mMK6W*`TiS6/c+^K!/c;N@>IgB"4$'C&j([lmu'*)/G0J1o-V&i.VK.A$g9aMJ!H%NT0j!,M*80PNnjBbgmQ*<#$.`@V[W>-DsRu_m_<Hh=+I@+Wg_69HI(i<2.8Mj5TA:;-REL+0[E>Z*9ggK']6FdO9W)iEV2.MWU[c%%]]]ibR1ASKb)4TY2UP.>5/+EmjYTDi,u:)8TguI8lZ_FQQQeU4Y.g[")H%iLN;IR3Qsil_C@ZFokbKr16-4o8nVulnU=PF^f$aK%G.T1dW2Mogk,r0Z$M[P(rJOP3+h=?1E+RqYMWkDF:$jJ]WX*B;3Jp$WnV9=I(RV(G6l`C$TlPr'gMl()f!OD7P\Y.K7ZY;Z9arh?%YY%e+duc]mr>B?=0tBqn#H6P5VHEIg!#a;iiU!#PDm3"s<YSN77\!Fl#hhX3T*u3#h&Gj!a90d5j"I_9A]JaI0rWs?P$Hpgb-<m0%m7jlZVHCiuqrFn[5%F+#8N'@%DCS`NF=]j#(c1A^=02m+Hn/J[Z^>-q_L,fL'Zehd,HL1A%rG/Y0f/4Q#[0".*TdoQ]GC4H[<nsV%cR-*(!8ZiS$^-GMlW==f)J'er\#t,-$$bl.$k^fle1I>ONG$5T^e(WABC+B)*7Rj(HCn/Qa,"6A,NB@l0]n0/@]ia$C:,;!-GE7>%(+UO:.\LAH[+4D?=^&65<a\%u*<h<m<eKIa%4%b>#]m!!YUa&t_W_kC2(iD@n%]V`<VIqp!]&kmG$I:\\FH_>2I3F=P_>JF)![3'%-/Sa<R9ulmEs]?Y"/Mq+5i>XA>S2$&!!Z#4]#miDDRC;BY[h\pVEKhhM"a1b+\?_q?tKXKN#4D6>=aN(X0@=_[8E<TGm[Xp?k30i%PlqH^UEtJkU5U;.phK.&o951B@(TVml<.tD8#fqG)4\33d;5g.%2W_pK\9arWq+.`*hX*]Kf1ZNeP`fo_EqW:;s7m!Ckf!$D&l[t%6:2fu/q#JgTETkW](I$XN)&H5Wl-An[*u4@js9'n)hC]l[=D)2UXDc@lI.adECq=,oQ<8SW"H>=Pg08<3>.)*#^H)]=RrT)!=sNG%,T0mI=T!d,=#C[iK1E^ZnRYBrhgf\Y.qQ=2(!]hsQDd+Ro559_"]_6>cDjsk?l\9#Ei2DcGnUO)qRp=[QHY[FTDF_G_LQJ<9dkCI%$W-9L:qa,r0c"J?(DW3&ItE5/<:(!"jfmanWiHf%N)rl>]_lK\jfA@igRW<;&6YK`aOVEdi!HAdh=sjPTWB6V#k6,.jk"3Vg`9Ph%CT5$Y+(6f2"Gi%73TY]<5UFVU(f6pR?Ad0u"Q>I11@#ura%]\J@Q^+0@"gk;/3F!o!FeZ7c\N))/p)oDBSUW!F&f%Ediir]N3@Va%AU;,,36dQtN8&%]$DklT0VC=]Q+tqu)e^VG(UgkS<5TXb6WP/="+l5PjpmPP=E("WbuAU!$XEA,16!7-&)da_'h.;:<_tZoj<_U1%o'<f<-ui..C^k!TAi49m)`\Q5*fBaDU%k`<Nh$%dlGp^%Po`&Y!2=',k5h8SY)]p#-&"hmYE\1ljFOj)X)+%NSX"(oMRuha=V\aG%g<AeK).!TsKH50bE?U#Gj.i?(]eGaG[TB_7iqO@uqgeE,>*DV^Wee-@8U9sJ.8bmoW(e,aS-;hmX+HiAE#G,TA1<foK!od9.j%7:%)1q03Bch"R+IO-9]r99$.*'W=l!+FEN6!LkNj!W)*@>J'd2(r6C-*Dm_)c%G:bII83)c&a5\Wkm9d*j6;RG2J'rbm#'<>LPq,8t"%f4:/7c_Qs.ChOi)\j-nL5.54+?Ooh][0-qCS/-8M&6P0?;jj&TZ5g9-Ji%2J[nWuA;kV#RmJ8=AVqNeh"sZOMb=:\((?`b%:$&cV%oc*rtKRp&=J[.<WCV7I;Klq+kY^&foH=$5M>6;#Ggj3q>RteKhp#j1[*WoDVN"c'A^jo'e6,m0(>GZ"+>M0';/RSZM;&B:OR"UF@%;A*4maDXmPLPRXu7STG_.U2V/Q)nhl_-g\%)>G32OnthY4;Jms/&l5`B92+##?op*==cN`ocID%KUd0Sr"N%/Ao;[i7W1\5<4\Z]%hC=mlQE)YX6jcUbC_I7Y[:%(=\YQ=9K(n2iVFV-(GBY2\DG7YZir0`=]Nc//J@P<3Zn'F\q+4#'Di13X6AN],!1YMk[?T(AEW`58%BVYfkQ)-]gnY3<K&8r8'^p-OaNPS3:,u7,":*Q=D=?'&QBcQ&We6L*"#^4eMMDEhGc3#-p\(.4i:X#SKVc:=sPd^\YK!M?U>D`B^%-X9>B[YnKB#h`CsUtG2Cg)=D*Z/+-'^m9W$Mpc_="Z9>+JFZ^EQp<C0Q=4`]jlfE=#RFD`S.otgYkNQF.NiV%<G)?.BVmPt]TR$8%C>gl%:+F->I)cbYcDBp5;:.o[S9CtP0N*=6Pj=1RF/lI9#o2_4r2A*drrGZ_Wb.1b>W>h9DAbX9SDgW::hm"`;3nEg_eW==,osL]%"TWNENmo$W]W2NK.W^9:)&LeS#D.50Of\b8!JZU?\LkrJ<WfM'0KuBNR=h-4HW6+:;RDQZ@m<u+==^gH?FX0'ape%`[;]sG=&AS)%3mVq[LH+FYHVEO'6DIjalB/%5+&77)VELrY]@74Ef4;Qoa/jA(BI,%BT0T<>b6`2di;ohcn]9"Xl6s&>=Vegf#V&cR<Xl';JT,0I%'5Z\C:bQilINNq1(T5+Vn.R"J>.Pa(]b&bph?4\qXaIOO=/.Z`9i/O/WaH6'ATnm%LrY<nU;V"N'dW&p8/kLh<+i@Q7#OZP+#5n0%"MAK*"q(buEUARJ/X9(P4`h,B#Faa!6a)-V0SsJ4A"f.jSQo7mMtfb<8i\j;h!1+6H%8RW]iEV@EGkPXLKpkpi'oXbQ!"q<O0;BX%0"!>%g1gc+/+G6mkXH"Q`&6*%%6o'P2&M<61jYoZn.=YqQg+rIp4Aa`Q)lTk,9=fL4XrW$"j+eK6Ag:$!.C\gN2cFgcNofdKo8Vp%:Id\3QG6=4X#et5_4I"f_tYLre:<1O9q#gk!/nZp*W*VsUF@Ael=^\li$+[X`5te4C`?5[@%.j[L4BakB/rk`\GRo*_Y7'Fb?Y*E%XCt$hn)DhtkL)7,&3cO-m_UD-8BQM.L_UP.SBV'9;sJ&D7s/34>S%O:Q(F^BGHJ<^`M-Q,9m'Hg,r[N12U&06J,t=rab7@C]SO?-%7>mF%Q(tdP!mh+CU6HTBXD(0S+jEQZ<=tO?0\%Mt1O><,GBbXIUeQe_]@%B11#pD_n^4#HE:G]fZC"(nZjj)WC7,+hZ`43I\5XcQ%M!'c>i>D0^h+Oe@=k2^UjAME4;c+m"Cr+1mXff+1p`tWc+%gP3]q>im70XQXVcFHMTPPDe(LSNKR++Z!h(R:p%En4NmkE:*c3Ob+%:FD*S%BMgG.alDViaLAd#gB/L.]iURo0H6J;'@#ZU<Y/HiZ0L-^iBpDXh+7+easQ:]"kOc\TF_XCW*gD/=f+Y<\7;ppPSC>>bR.W%#*;mA-&S,l*T]hg\"G@P6b+2:MFI-JC5K/\#tEUuab2*EK.UbDQr#O192kQt=EVN3W6SImd9&J<K$$AYGQgclp3?hGQ1kUZ;JdJ0%%,[588u(d"eH*L>ZU7d&dOp9C@k&K*Y:p3%Od03$n"S+**:5\Z%Af7,-jfA+0r(gFn@1A.O6enBnH4<&+Fb)(*):W?^iC*WgA6VA%<Ac<m]iam-,W>">U5N=S6]_f>l7%Qi@Loj*^1E_^s'_lQ)=*sXH!/+1d,0Z+3)N;E@4;`8@`TMF9kC0:rWGTolH&*RntU_2L/u/0%[<\uZ3uc<o4dm9T[fa>j]B[oc%CR@CC#Pg)aAZ-40rhS]Y5lO@6]t)@oasYX.:!l!<^SC@Shs7_]U1a!@CK?2ptnu!,D6uROhDBJ%d#t)gU(@Nnbpk7Hqa.bQ=)Sl#d[EK9BE\r4S!_@Lat23aWeaU^'6n,)ar=0:p<9ORi-)"VZ_k%]Zk%edH"aP.bZ4k\X(g3c0/L8$%ng0sj:&C@42H@XAobYToJ/X"$6,3^20Mt+&IW1$A[)\aB\rR@20\q^G9o:_OSEeA1e_$e"$Bl>Il4B=Umj`L3Vd[M*2hqcP%92AE%BrUB;-hfg/rBRFN[ltj=ed5`feeq^-&uuEH`OXnHC)MqcUBsPH!IQ;d&sR33q1uOUW<_'*C*!gR6euFV=7[Zt(qTsj<Imc_h<&ij%D?f42A0hheOl10s\$fh%b"!!`:fiC/">hE0`0U0e.>N9W=cNM3!cGh6ZYBlpERd6"2#pZ8WtW^;+uXM!D^ZP+MsS'%$Rt4Yci_a;%;mV(Q<#R_?E1j4ohc</L<JS7AUMA-aUWNou5^8%mPnLh$l(ZHG<Q1b&;$Yn0'L3hOg8K54g+(cJLr31]WDRCZNaQO1;Ocm;8**qc%e4=.X!_u:kS-^gGomgBMQs=T<W3[,+c%4c'95>sjIak>uFgb2g?44OOVQ%lC-4!CfoYae.BDb(q`c>%]s&:)Jj5u@'J`<A.glafM%.Z3rrZsa@l>-*%f]-?oJO;+/bFO.8DWXVptle(r(lAN]rE]%gT?H<&ZRR2Tc@g6pr5urYFZ"\&q#&[=!%8,#(6]J:6(C>&_;10'l%;*CO$rue,4>bH;rW)90oE5ZFi(rbqmFpQB,^^fa\H`MRaX[^#SYQ_MpeK@tuh:C,I-Q;*IFmUf<&i?M.-[!3^3sg6O60eMA7Mr]D%RB<8grWNX\MC?g0%&:qY)f9ghiUP;qAu7'3!;OW-AIgK&UigZ$3E876N`IlN/i,jq@lA1I!Uj=E;IL(iM&nLWmM'>kP>%q3j'ib[%5QJ+,qq?o4iRS@4=ir#1UBb3[)/?QR6%?;eCfTqtk]^f7&56gU^`"^3`S:`%UEO?h:qbS=i8E[<C&lh=VW:qI=]Ke^*8=FE#u4kR%kl\@_/M\He,m<VP.gipgfV"gO3&P(bDAm%eVm^Hl`EWj#MC.5-("]EPLYB.ZQ(PlCeMSm-6UeG`D;ckmeK@t+?FWuu"%gL>7FfQ7%!_["W&VkL>-#j6-GH*.b</buJ0a+XmZT+O4_?!A8+MD7nQ=B6+;/E-kFpI\W8Q4\CDXZcrM@i^@HY%#nZ+<k'WXtE+^F>!n.XIq>%2pbT'8hf7<YeIY:!2H`4mAS806pn@kb3;nX,7CLQ"9)?,%lb;,;eh:i'Kd-4a&N/Q$=8^J9>n/A2X"R7;o)iJ<Cb6<EadqjIL4Um%,^][<'Vh+@V^)fh*s9Jb(21>d^-WZ/0C#mA5_+f*<$R3lSr?D2Rc%#d)n%V@\Kk=qXbMaKKsuc+ZrM"/6jBCYlDu)4Tgsb.NWiTq%&F)-*IV=K<f3Gqn(BK)%a00YHRUh3B;E%6k92NeanD7!L/>d=&TT(-p9iWi;RF.W)"_-CAfF\JpS]9)qOdi?+,,6.MUV])QV8ug.%PcW)B^]rPnU(aS\(WZSBV)p1m2U0Vb<L>H[%:8Oqi,]<`.p]hr<Ah-&V@Rlm,[u,.E`\*a=0K8^1n!E@GeJ[Cm(.D9_E&*lG"V%)%9@[)UVHT4tUG@;d[;'o(&%26;%;j+<cV:n`p!a]`h+(^?jiL"%1/N1M92YYsE[bAs.QT@XeUV3Z;IR#F(Z7#:0U7FGD*Q0!O#^:>%cD711#cb/`c;trLkL;M9*ZYm#(N;>J`E\00Q/Zk"_?4LR^B3h,"VOD//BuRT*$ZqJ?q+1c54c7NpS5Wmp83?g*Cst>Uj*)`kfBti%ME9:E(>#=/82[p\=Xg=9C(&$<?!F4)X-iRQ"sK21AG$<H:sm`S)G%c++;aegog)TA-FMY#g5/q3JB8.7F>FUZ#H&A`2`5bq8k/L=%j,+-2W/bY'W"R'iG,L*-(q#AoTWo)dn4FYMX%EDbXTF">W2i^SOr/]RE+j*u<`fWl;8ndBq8+U2cVM8Dq+Tm@>X:2Tp2GJg8r)>u%(M=P$[8FnD8$-5aPe[WfWlqG0:(9`PlijJBP6'cc'-f%"Y:bOS.eE!4jf;?&6!#=5G!n/=*)45d=RZMX<Z@j$=`O+sa5S3P=K;EI%<c>%%1nd17TME@(rIS39q_Xs/g1sPIf9MS)T^[Yu2k!q&'PN:8"c\sg<`K>p9@[aa*g$F^Kc7G!PD]&D:b3<b(]^*gH`e;5>)BQ1%lsj*GWY:,YVP/_iWq>Ho(K59p91]2@[R_b.eKY&.+]CQ5crI3@'u>PR1M!CKo[HVHDQfuQ3X.a6@,Od`;bAR[9Bf!/'Ncr#99oBH%<S'SOE+r"@b1mPMT_HhJ9H>gH*^=&_;hl$C.LnoEV$6XX>QcdU[Mb!l[oLg=FTumOd"b)6<Q^BYG>U.aoe-Y=n6DY9H6[gBe1jFA%(p;G/?<&;r(Rrf;:)9*AI5G,ES/qcneNX[BS:YrW!`a"@UV'EnH<!;GlJ%M"ab\sUIVKbibgC,J\j!+-)"h.`SicAE6UDYIB+t'b%:5'RuDPP\k>_;S-kR7V]jViRqPom'+R;smGZJkn%'sF');*S.59HEZRV-B(M[FO/gRmVAIKOl0(=E^Im1\?OP-p;]'@o-==bilc3%Tn[`DU?j`o:M!i$LoA"$Vm]]`P8_?s64r:;*Zu$fHu9?X>ld+m@SKgKmO9?]qGB+S:l_(BYG!f"):5;p\rIY-=0Zf4+@V!!Aj2Zb%*[*_mV4++\PUfe0e76$8(/`mq3lFm,<D1m4/h=%6';h!V;*6unk'.)iqQMq&KV8T7/*eoJ<R"3ZF";1U2*bs-Ms<)cbK"4GK$"8S%[hP%47i+8Kf1'S=Ssl^XIiS>BBrZ*<3X(2<*Vq!&Xq!122+FX(fp8H>Sp7HM0YEZ/>4fn-*3C%R@Tp/#MY53Y6j$dp$pZ]LWn%=/%$5KVDXU9*6;9EnDPZVch#Vha7Kr$-!8W>OVA-FqpLRt99paB2JcRiuIBX.1`!lRrAGEk817*0i0=tb%K>Wh/s`W]s5\>%$lKZUcl%e>Bs%;p>[!7^Qii:V0)-*$M8>gL[enHb_bo<snKITunrM2*u^;eB0qqM!EA5:,Vub36n%m>omKtL`pT2W<t:mO27fOcDoWh&k:DK%"2?&=1k;$sk<Gook>I3j/E$e0Ftl=a8ppk>Vcqhd<(uP6i8(J(*Ioj=@mp;)9+k4@Re==Tb?F\Hj)IGdWgg#7"BVR:JC>_EeDN=n%^@($l/5-2J>Q'E/#KWoh-;G1p\b,fTK#q#_>^`X%,uTeV`RH=BSWk>F"/[!.bj'%&QVt:#7'Eg1p`B*K;_orSZ`*+&ro%NTE9qQ@%-@Cd`#B?Q7H0^S$WE_F`/C[.#F3&i3.t#fF\V0>/<Ki$[&n4^`Ve/m4`/4E;>!9(p2!s??eTGFsoVhY\B=b%d)siNka.5:l]0N%9%C*h^-&RK8(U8LXQ.&@8D%!&3f4HheNaJYd)!(3t=bZJM"WZtL'XJ-&dYo$eD+U$("3h^q;[u_`-KIQ"Y06!e[[NNMh?An)V^qE",%U386?8lm`nY@gM,B=_cZRVZECETgLCR&s@m0E>b;PDVua-D=<X4>1;RI!:r\<qgj?Q$3":R*,Ht,HFAFlG3ULne!Lf.$r7)`'$N\%=FiK&V'(m5@=^]mQJ.jPm*Na_D4s7LEfVDF9U70X0aiaV,of=g'a$cAA@@"WO!cibXAQTUG^P>;<YLOjm4,"]k:#1BQ.lCd%Ga:r%Q,REoZ6,gP8Eq'K\-5%m7sQ.J6<BnNT!IDLU]cqgJj.^QSQQnuTJdAHW8jD>H_P@$4U]</*_qs>qK0[!$C'9K"ohjA2$usC<\Zj"%_PkNc\4r(i'm^_-`iO>o:7:cZ%HBa^lGR57H8\-ETlgOJh2IrE]piUZ!1u33E2Z:;qGdN3e<j5>6-9Mb_h3KI>m;&>;tD;TB(^]%%ma@4#L[_=38lD<NO1&L%PjtK&P"K@a7?h7QO<R`@>bnOE"kD:F^RRF)UL\OLe^C1Y9rM!=VrXK#^)l%`(_bCM-FG`=79i,!SD$l5%)`]['1_pM?I[p96W=p/B:f1k8eZD^U3-rSu3e&R/a'A84Xe;Wu2W9X7.*Wnj)=Xb?\DSWW/C6I,G$Y]7JTTtJc;3!@C:9gj&5CbS%[l^W[nRZ__5S03#HM(\KHt?:Fa<p01,)S7Bk,@)>T5.:GZ"+]3/uAkOTSfc.40iX`<<OJe+f[W^?8rmn[4a7p"rdo%W;/<b&F9q=%=_]XaRXRD262ds:lj?^"nK#,fJq3L[\=gm0M67-JWC+:DquMLOgHGC46gLg#C`j!sP;X9)!^*bG.Sl(n;/HVK;lipohCMCuMa;]F%R!,uJdLuX8+<IO(e/JMEf^qS?!L`'GHG[#9"p+Rp')&";[3[AU,U08ufMaK'MTr,ZIPEB2Al@!^<`SHV*:ThO+@ZT%oVKdX=k&hi%/r8Ues&G@!r/7&bS[0$cSjL!p35.8Z.L/E=RV61EPL2`aXA\3RS2/BcVSe^(4nF6S)VbaKSN?*eleQS5V:d:SXi.HB#9#lES!'Mn%(o'D^2*d$R!Iuf&9'GR*MPI4Ed`<"J'::61@2(8gG.jB:IK\lN[]+Vo:r5R(8e1787c!H4-q>CLF]7D9HQ7Vci:"9u.93qEeK]%V%!l,S3)HimiNFT#<l7l)7TY`L[+aT$"O9n`0.mIEP2$rR%*%4,/=tPiApS%pYAWW[sNJOT%Ep?*tc0Ai4Zn+AG!fp=2iaaq*,?=WZ%e9AL^H\@/RPm#`@6@6c2+S^aZ_Y7GaeG)H!$Au,W_DGC+p'TN2<Fb"%^oC6B%T2FrjZ5@Chu^>)*.aGU.h4]H9pUU!"E!?.@V?uV%O5*P=,]ehX<@.UZkZ$5QcWQu_9S09,Ym&]!:CFuhW0q3sfu6o'4>(703K3'us2)?k2)/W%Ee$S<e[?V_8L4s8:s?j!IUcr11m\s2%`mLcmfqQ^(DInC`R4!bIcss#]jU&65D_kgZP2NDb\g"EK>c=DAZk,/5o/P_S!*q_u!Ih+>J^'7QXeB6GG-.E0];,%90.LQUK&e5]%Xn5t;(o,&p`ZEIm[+84qF^uP>jX0<`67I#$]OL!&+^pWC@]@ZFBn;P,](fFcU+0j^5Z<AN7p_)l6RW/+G@W=jBQjbQ#n;>G.IC<l%r_oD'"$0:9C]^,HW=Q^XaAe(k#.AiFLj!VbSc\'arY^$.!,+e5We`VWeRkgmTt95m"W,,4lTk[]c,mR"(DSY+FtAn]ioTjg#crY4%8d,F@>V-eadPdA!TcIB3pX)?]^U2N)PV-0?;jLF3UO:^rh.<eQ"_`+aCCsdRl>qDtl>u58_IYE1WmJ;TdgJ!0.9R$8ku&Tq;2NF]%$rOsg>(g7*^+.f5S%kn.ST1W8mn@2jng3!J/D>;5N3L<:-042fk>h.oCI>8jH$iQPgK(uo?ja:uF\Ookr$[W;IB+rR@dp7Pl06#i%;$_s1_-r.O.tS8df7QXl?\Cu]&V=17Kr1k7[N6!RX;oR9/,<)f1)$G6,=$kS*R)pi=J>G6;=d[7'3_8H32WPrZ:Y/6;BLsPQkba^%.]*ca;khcBR\8*(Qo9l]%U.5R@XZ7p-`pFgp)ur+>L8"QU7O2_oR06qogCDl@6<49W`Vu^O^I8eXhm)-?0XFZg/NKB=/ST"8dV-F%/k2Z%EEkqg(7Qeh@'Qp&fK*8-LauT&q?BrTk2X9k.UG+JJ>&a\C@+j'*9.4WM=9j>0gm^S*YW)WN36Zg\*Fir88(j<E^nBm_PaG)%E=m#OAh,X?VQAM:Z8/al2+4ID1/'oaV"fYPBp'MBO)Y92.9U/[WXbm4UK2gZ>_W9dV6*NRGNkMF:=N:JB6b`kZ3lF7J8--=AS\u*%h&hJ".Y37!lKN-K44:M/llJ;C7gr'h+W43JURl\fO.nCRdGktOkNQ!k29lGH.FO3$dR/c?0kBBKko"+g!VI0<&aC6(KMYm_7\,ZQ%hR`8XWue.=Ei5V/>4.UiPZA_e20<=L]@s2`FaKV#hgd=H<kF5nD:j7UD9f/pO33qls.aNhkh2uC(i#_41(M]aD&51aVuj(M!DUrY%GWpl'WBPa2LCFq7)<Es66W!im8]hdg<>VeN07*VJ*ZCr0@b'ja,6N]h8Cag\P#eD&H?IM48j8p'@+\JGOn6sd0Ap2Y&<KjH5N7qs%lOtl[#crl^\.[oX.`m'g[i>dQFSd,<Sn<ZsklQN8qkS52<a-0rE,]V9\0@qX"#qQbV*,7QPf9O*6`C]JaUIMEA8->qW1"s)r`'L#%J3:XSS%os9/u[)DF/XlQWIM$+k+X\HGr.\LO:*u^X20sm1fKBBeJT#AaYd7S/OhmG!5ski.]'#CP&R?']5kHH7HoI,J.5Q+"-9RM%LhOYY9m+Pm?;Zc6>*);:1-52>OdE"VW)C1)$R'I(KP0eF;,JZB8NjqhH4676m&<KKi:_Oh(nB]q@*7FV?i_"j%jg(Ic^VP'HG"pP%:U*JSQdH_>8b)*&Tkftu=k;`Gb2&'B?"7e>$c`o"0Gb)5i7f.*(+21)?soqKajXB1rcW*f1L**;'koTs9/)&EjnOF7l7]+08dqrl%'^\dsILN4t$a"^uosM"prIi1"c-l-tB4p$oHBO:$#EEE[<CTJ1<)bIb@"caaShqSFCfF7Te-%#u%>nh"APLo&1o<eb9;CnD+U#<^%&[1'=c<[f"UdnNiFK$SjWU1a2C%6M$j%qUf@Cd2I!]CD9BkJDq+hY'&^e35Jl;m;ZER9t?O4?TMU2iANb'?<M[i7JA$mOBS/DI0H%*&=900]pX'd);m<Fg$Sd/8^!;0=\UlH9Kh?lOh#6Is^@Q,fu0R=8bD`6^c%=%:hkN^)ssBRItV-EX4qG5RV<uK10BAc88DSeQZ;g%?rj.Sf/Z_,RKkP!,t1-W&_reRWiW;Ga9_P+*q&d^&S<g!%:P\n]p4frC;&<nTJ(DE0Nt?c@Zef`0Y_n&E+Q#g9GaHJKkgS.HkE[+%ip0\nh/Hr7VLe6m3jfOcn4CcWV0njhp#@R#UJC0K<-_dg:lS(8-YE:e2,+4N#HTK)-BB!pe/i/`)P23T2,A+u8XNrZXU#Qk=5!If%DS36$5W*(i'r3rNZ[6bH?C6oooG.H/5(mL1rkCDPJJ#^@fnj=?).6Z#?Qp@'C[E&'m[1rDee;X(Q@HlPa969>%%19%!UR8P8*!e_%m`FQW.'mOJ7MPo>V)#m[9EkS%4qd/c9Xg7TXgMScU<kT3WX(q%'Pu!t=%fMjWcQkm/`kLKY7ST+hd(BiVpt[:427$qL2-sY0=.ZJ%MX9kE]^7*X].T'\!1;.0A+AAun[m^8Csb5q,WueS.]4s&ZO>LmGm#m'Ft/^l>ueJnB941$OO^JD2W1/g.(,m-5%6NnjO%ap9fM!t%<-F&9+Ela7A/uu)[F[Y^=&fH&AL?H7ZD4&beioG"*MuL&$l0Gagc+b^AU"X_1.Up^Ksc5H<\q.h:Ec`7cgmUe6`u/@>t[a=D%mj&%Kp?u<FFBpuXMk\rLp#a2NLeq&Z_9=B?*1Ci;kBgp+9p91X1JZoi]HKf.Z.W.RrqsI\L&A%eLu`S/CpDPcDNfeP0:(0Tl!Yn6pb=M%a%W.aBY`#9$<Z$78iEs,M-*hX<t,4;L$sn,7?XFp/uCj4.)=*\:CMWdPE_`-a_F!+\]i,M&BTc#Pg(*Nhl$T9'+.:%Abt0`]"G9f%(lpESf"&=_@Se74H#cV-"RrMb5tq"+k$FmuJut=k(6E0@\l"@L"]+KVTUjPcjWM(@;ONKRN+5bj.kSXJ,o7k_7BWAigEHu=R$F]=%f#/pa/SXQ:TEDXLZ;n7%Vt/64Xq-`P<N;3kT(K=K@uHd82Yl9Q*TCN_[r_[T3%hinnHntM\'F8,J=>\J9J":qh5ID#SN'ph'UeT:%CbW':W!o&8Q/mojEUh%pdW,U4V)cX9&%06d!+iU&rN)1Wb@icdUKH3eC.X%;-ii?88>81WA'5uh^knjqkakS&]dt_0P1=lCbCJi`%aI466E>VW@)W/l+%-o:[qLH(DSg$&BJetoa.Z5)/@;d`'lm0\%=f:hfoo4im%&_?(`F+--po5@_g8b8$j(+"t(F*JL9,Xrk"S!gR%KAmK>]nFsf)qg9HAr1`p-E&+)2LE%b-YN.)E>Y#g:PDP!A-<pKoqTsq1AU#5iKigjYcO.`hVJ$3@TFPRJYlm%+a-mp&Y@MQ*a9_5%bO6ef@+W$DS'+F!Q;5Wem4!h7!qK0m2jQ%77pncObT`U7>>.)*r1?($eL89SC:idNflSTA'l<U)'VVj#Q>+WPfkRU7FA^Y1NEFB3%1g+QPP9qG"0lkgr!O*=U3Z<ED8.dFV,fToh&8e`;9DP7)r*]^1-mT$*&c4AhZ(9lWKs!+2N?L<U3*)m#QV#VB!\umnkiC_8aHWj+%XaU4$Mk,dfa%!-2pV"d/OdBg)@8EXIA/:j0?Oh$;Q$`S?0U4Dk8J6qSD^(=b4M&4uS*C)[G=9RHG/U5]8];]DVH&<PM4(1m/;UGG%gnAg7>4-L?3@`#n<PS8dmC19%LasbFQ7f#=YIJQ'gKf+cQ<G#jm(G:P2QOP[1ae3hI9i.#pSos4C.7c8lcA?Y<7u@O(Le>@7N&ke%ZCjUO/q&n6_Esbj-5BcE((*.,a%Fg!8e>g+(CIg5Wf(#Z^]<REkj>,R1Q9IS.^<Md;t8`*D_"S[?IBs'h^GTuDbuR34KV'5;7Z'W%ZLCB[M2dBR_4A9!$&L?5-0i;mc94og;L)2A<>4]*j^$hs-,O"W]ouo0m>Pm^:p_RlQc#P`5>eR2@RnP^'F`"2e5Ztud*.anrnarV%9$'RUKDAO1nt<<ID,666UQNR<es=6-LH?gMBNg[r0os>_i5qY/LG_^rEgg)S&d8^"O:dqj<hkmI3L[oQjkBYDi8g8$fP+:$f!J31%1T-_5<[oFO:M^W5P[LS/f`hrk_KsmT9n_3"2lYRZ]dQD5WUcpk#QOr-)TW4#33tI/SMEBKPXT$_f;YX3=GlSX'n\,s$tsC]:NV`,%(#*Q&-kE4ME1X\.Ag'!`C#d]<S@1n"M^CKa:R9:1PR9arR1:?A%@J\6M3'H95Asno>1mLma?hJpMpl?Q6.`H+W-PKN^g^EDLh2W9%*.-?>eGu5-'Gd]Fl;"&lLrF$fAU7n&4;2UeoaYD>pV6nC9S/Ggs'ks>>aXJhVmdZ4[j<r"JjS4MgQ32s<4V9;AjiFO=Y/;.Wa"#r%Kb<`m.<R%q7b.;;<1@"NB:-hIC;*Xub(Nt^P]^RKqBX`JO%ah;lb(t4.*@NN=(.:@W_AnS@"'Z#4_!R!E)`#8qj,ORP$]$C,0N7$%[?o,/g5WTB3WKKfjE8Ke69l["a]*59ASm5mUrHR`Zs5:?K*diHV=>TT.7]J[IZS#2Kbf;ERj(AG@V(u1-orcrH4t9u%Wmh_?64p0%F#40C3Y2c2cg6m!Q9&s6Ag&5>lpIDT[:j&/0Pgm5cT5_g\\SDn\CnA!CN%1`7"7=Q>!?$<+tEkckUF!r$g1^OUqoD2os0H?Lqjb<%E%g1KotFp.njl&.R+H39JfnO-5n;D=%X4#2cs:1_72@Ba,cn6%-5RPgK<>?Q16f8Vjo]n6<YkK2(!Nf!ToirF$!,`0+Z#EQ=VgVN%FI&:D)j)eV4c9s@'9hNH(HNP/;N;Uc8WMf=;Oaqm6W.q2dVH+:Kr-ao'*<=#/P"CjC)i1tn9X4o%:XNSP_ZU>8Tc'/"dW`*S/[Ba%T(k,m[Dkp$^-h..[Dhdd[OVqR&E`8UF:L^^Wp<8gO[pVMe7DX(DVK.4`k%Dt8FA`D9I3p/T^\<D+DjoDf\cj-C.aD/Z5a1<SRI5P%>^P;gmVg4Na/g1/2;CQuP\F$q#7\8"e4"Ro8%Ya&!em)7('oLl(?rFbLn)b4#qd%_46\_>[D,UjA5XpKKh"k;1;T$W(+ki.;I1h[%eT/nlJ#g+g;'3l-km>eC/:"hi>0:=657A0RNr`r#/h<>mjY$cN#$&m71drQ0BHM$lZ74=GEJ`?sM0Y$ndcb:qU;ikH!C)5D;rUG"%!^)#`EN.$gj]WH\rN4qX8(e1')/>=0L8%8*kg%flIQHr5!6Wc+qO%V379H/-lE+4s.O1']SNL\u.683N#,2[[D5"[cShaqr2Ln"Z%M_F'^jnS!#CY>$:`5#HaNg']U;WXQE5b.65/CUK!m7:U,;JgFh<#96dJ:gQ;(l3LhYZjHYTaQmA`A'p5<_Brn>Q)C:%fBjUOd:;+%i0prZ"])HD]RV^&A=FJl<"j28S4\AeEZN;H?("6$b]D(l)1bD<I63aX=kKKM>[8kpV,@KT(t<9eDOG#8HAu.2X<Q,U1Y']uN+?S%%^R?X\iQ-p%D/O,.=tZdY*n?ZNik2Z%Yhd**"oMPT0"DtA?/[fJZfMkEa(;JQ-_#r7Ch%4$8MIDM9_?H$cTttMpL`cMm%i("e[`'.%[[mSMT(#5O-4@ZOAMJI>%ufc&]Ji."9Ys_04DSXc`dRE*Z:V:gg_$W9A8]eak?!ST^u:@>'.)4`Q6C&j1lR1U"HU+k/LJg\9^ni[%G-<0L1/H>=2\p!;M`0j.f2F-qVQP(P?mrFm9*/[R)Rhbqq6YT%RheZKKbR0u`tXk$2`?Ia)Wc.)"R/02HUFf$=(ed&dg77lMWnN^%?/MrXK7pWZ;eE@NTe%P"e1@?5<6l?M3ml[B^[fK-W\LoB./VWdh!EnX=-h:1H981p=/g]'NR9N&g`!;^Qn;hfB<<V%3Jhgg*adh8%]Tim.F9!@bI4OR2lofF9)[+9ra=/WAn)gG7=(H'PWohYG*4,/$J?_7#)@qHl$cV-P[WWlh7RXs-V"_n0=V!Tp.*sYhXRA!<]VJ`?%H?O-\*_EAacq$hGnQAu@L=t9.[WD+c5_P]e:LR*hU[7*@W(sQQ:^V<WMg\d[R4hG*W):?])&7KoDFS^t+XIR%L#j3HO?-%Y%U5)r%\"Z3'Te.k]^um\h,&5,U9JVaMbqo7>0b_rF@i\:f8Z@5sm(r-'_%_<ZoA2OY>(&ID4.ob(Ct@-E@kr"L!4LqkLLTaU`uV!ZZgfi/%,;#"`7b(nW[bM*DCi%O(LSfUk85tK0a7P[Ci\grR.aj/0G912F/3gNl>2o?D'2hN3M-IVP?7KZ`(!4Vm)OUg!1roo?7jKl`>.)qO%RsTn-R&*`k9f"P-D)dehU1!AuFp7P[0?[k*ZEc\901DfmF'.D@Ze:$M1slauO4[)Cg1dtal<L.GO_SA<p0h6!`EuM[5[9P8#B\/)%l)pU-[1a=K?]t*c6bJe,#N$EK!:XuDP+q-AH!NKGH6BB(I[r@6L"W>&<bQKDFc-uuWpSm1k-<H[!F"s7,?OlF2J5Q?emqg)nE\;7%jpj,.<IJ$_Pt*@tWm"JdW/2hm/&Web.k[!lQUs^&VBS?#Mftn"YhX!u8llY7%t2Y.<=,q+*pjRDrh(+\;TX\&`2IKPc6WMbaVj_A%j^[VkS6Vm9[^Dg-iYWEe@2qr0f;L<:W<ueoL8Q6GR!QOb`igPq/c3Q#P?#tW,^,=aE3L9W_J9J)mGi"=Ma)%3'Y3.cL0ERlGK%g&%1?I4Dbk&csk9^k/H>V4@_r>8;Z-QgGNE&,9>Gd#1.9FX0Rc).a7u'<rMa[sBdf)M>5W`"H?J3,RQXU#(:-iqup4eTP03&5&R*W2j%gm[0K(9s-7Z<+0br^8FpSu5Q!"$]hd!_N/?;[.`4i;:kl6cC781fe#cbL.W&Q(_Rlo\ITaCU*dh`Wa7"$9:GsaN7ErANmSp_e9+t%D3[`#YRdP47'iSt\b'm-gSSiKZlm4s_$u)aN9'bd$\ccEs3TIMXWL3F0.**;V*\WCFB1'SB;=bJ,s\56-)H2q67(A?A0!:i=ST&P%G0*k-!DD2k$TcR;b%L(07"0RVSn0b,7fb%dXb?W-$k(WmVC"Vel_OYi_amSVUqZTa:/bj$2,tsHOU0si3T"m.pQ>XkJ[DBob3ZI7%0=Fd5Wo'd,TY-9,;eD7!46>3cc"?3M<:jn,L+X4j(tFr15u0fRJhB]^j</>QR:e(^:lUHI7Vm]'DG59`ZEP_fCMFh[U:uL19=?Y^%T7Hm+FeZf+.[t[jFeE?1qoW7mSUak/3Z5^oCZf.kg)lb8ER$9Zpb1lB$/7-N8_4(6B1nD.8-->6>mCDsAFGfKl+MDF4A7]B>-Cq[%1?H"$]X=PA#2@NtV._;#(XW"Hm?PuQJ=Vnl\2eAaT^6L=;eAC62PR>@ZBrM-_m7g-S_Ip9Z4b[]_,rHIbdE('3t%29W3'=K5;J./%le2VMqpN3O3bNTn@rco#lS;"/Q5\nD,.(K:9-GO\L4O!h.d]7).CrJdcp<Z0#Krc<B*TKc/#"2GP!kJRML.#DS/GEaKLWu;<H"3L%o8Oneekfh]>,Cmm5+&($M6oN'OkL7NU3%\&J_F!\fO6V*i3iYTSQR"tnUFBj=:TpK?<`7j#'F)g-f7lX(^_,6e$g_Ocs*h+5NCPB%EPP#-/VXZ=hUp=T9<m>*7A_CsbP8+=C'(NH,J0KH6i8,^^h.!TQ,6CCQ+B^U5WT(:;&U!k&jUAmae#9\>.&AP6mY`9JY/?Q<k24\%AS4,!$o]ZWC`[dl[AadmK$3Q(;30/6Fr"UfCS_ka^p:rc;_]^tMVS?E23tq8MQdNWjAs&?.?*k#qd=7NS-hA+:`JIQ9m4o7llb8K%"4>HC"qh&OlK@,?'s-SWC(!Uj&/-LPiNom8m>uLHD3AXsnn97RO*fm8,fLlN(L3=WOQc918gPQlE]Zn\?rUkf]iJ07k2)P6,sf%A%VTV(P299%0#Qt5Yf,jW8nKTsC@L)cZ/UZkq53h]Afgq;n[c6:B$(Ltt3n;VPFAAGjY17o#?OfKr8hOP;'-$eBW7hA(Cj>egJu@+X%e4GL1=cD]!2M#h<*DW<Q;d]tGAK6MlA@nHqbPdWTp,J<lVBVp=bhJt$WcLK>@ha&8j>5>j8j-%M9K8>Q8%A@LfM?91KUhi.2`$Pl%ph!)Zl`<)*p)jgn@^t%J#\pui/Ib94!cbS.'dq+\PX!r&M0j/!\QM`mbDfspUMNjg_C%WZ8%cb[aZ;^)?E4[c.BXda_"F0>nn61l%2l7u)i7T]L!_[?n))sOrd>^a8!gi8p/_ZAgiApItq9AlMPL#Vqg>&12Zi6(Qj/Z3PPu]d[kntC2Oi%XONo;TKb;f/o'HCE#=\!;a%/Bh%/HSGbqe7<F?@-qpr6T+G$n-5Z0YS,.3!i._oU2U*@&J*qpDl@gHmX5t-CmM7rGscI#>(DJbY)ER$%:UULDO)Sb*XYhJf^(qN%"b85F9[[!nX,99@N>RZ!42$!R"D,E\@:ft2EeoPm?<nRh:Y?7OGp`pJEibc<#*!)</9K"SXJ`<OYu8Q+'kK*ki?n4KO\X^BfRLkb%RGd"++;S"uStaU6+fQ<gqL&]K<`[d[O:k"@hC_?#T`h'+ImXE.!^cX>PQR+'e%Rd?*l%p[0;4W3nT3`n#^F6D7'B4;)]$9ZPCSt_%fc@1d*=Bou#g%V&99<Gj2:>rb1D`Q?]s3ZAY'bYV\0f=6B:IuE\Ia6A!5tg:kG#ET?Fa[P7p@^/`D0ma6ng;eROb%IDK2nj,hNQn%\E)Gt-m[W2#XFrah?G'ega;>1PXm,8<sh*s^^Ok9+a2$Xa#D(Rh[ILOr'Vaf#(*j&USr2f'iVYUbA=E\X]?4%Ze2IB:Q\+\>Su?.%[i!%QfHghEOoi"JMN[p+-YRVnXE,K9U;=QI;JW/Ja:_`N5HA&#`Ib(FX:N*\]kAS`Q6i$EQs`j6CM;Ko]HcH:-(.%`a"FAR@J1Uu%W%*]&:&m%L"Yg:J&R=Jd\BGJSoQ?H"CL"Eu>$9U:'e]A,BT6`0[Ap;h_>m"4OK?i*H>uZAbE=\QiS)AjV.d4M33tV$eT,JY-T[c;%RU+?2BE?sWY@q$P/s:Kcf=gjp/6<^-<$[f3\51[-AK)DMo#etJX%c%J5]W!dL=@23j>KN;F!c,%>IVQ4?Bl(BY69dp:Q3cjob*r0%eC@\:bFVO!HKN0jFhiX2TQu\a=,U5@9A;/t@$La`23q+"c<c]L#O5c]Oq;tTCkHF?1ET7]>fcRg@frgJ%aAa.cc5njDW7i/:2kg?%P9NVa,ihi.1RMclq]mq(`2(cr/R.Q\@uo1n`PnQL>=6?5MoKj6Bu_j0P9QOk.D7c]BpSeP[R.(!))s7L-%+js2n5mle/&P\5T5eV%JMldcRM-L,FA#$%UWf-Z59*tOl]K@&iFo2%hE.CmHpKcP]@HHmRICd$[aOMM&:m(i;=^N\,R^NuZCNi*!tdr.A9Y<1L00boDFil?%DLb:)-fCCmH>b(T8Q??_o2EPCItA]f(`bIF$QaAho2D)/J?[5EhWZfC::!p9eCLur>6aB</sh[A3`++Y>pl*1^g"m,2bba0e-n7X%%d(s1(u&H+==4=X#f]8\D8IaO<`/OEra'kW$\jpS9cA4cDsc3u4g#;A\6YooN.#==?p_*1i6.!QiksnHH-OuN4Qcp!@C[!T!<?Ia%ApBI_:FhnRrZ6_9!O4"pm1"Rt<[UaSjYiN5"jiic"DUN5m0u[i9XS<dOI<g.>aqT9a[QR%QJ>kN%e4!Q3<Hp@8t'YnZmZnEdC&XG%X]r]NAQu-B7-8"a\X#P)X<e?FR8<=Re.].+e^ci6]q#K#o@rkFRDp@6!0J@(UuC@QR[2MV9-WJXkrhg6\Sn]L/k.9&MH#nTLa/WV%'OYh@;O$OIN_/uX&$:<j8W22t3-3)%qp;pM/RVtW%:btAijrjR=pA%/&X-Ob9d>'M!P"Nj4s:jRI29ur1oYRB2sj5E,Fd_X.sNsE%AN,mi6-Lr/;GJ:>jM#+VKthJ&GZ#`>WD&S,J.G!NGGCQ1jZm(L<[3.:Xsr*TXMl4)4lXW71bS<+/43[s0G`fjq.bN(TP)q%eXNm<%S^9oVKj_b;?RHa@m$km0ZjM)YM8>JL;oYXc=JE@p<N9mObu0bBduHs2j4s<JCG(ec#6^'hC"^os$gZOPDjXS6i1!t<^UZug@Y?=*%?^^e8__ihG<2u8E2HX`ZS]!"A7,QG!fBOV^-=]siEO:NmV*QWO9JadQ-8BQ$MNcg'P<Oic(\>Qlgn_WflI67s>_8Fu;cK<]!K:.D%C@`G7Ft`sORTZWGT#jG>G'GdXm7#L!DQGqd_,D+e_5K%<48BEfel,8h<+Vt)AcOs!jdmn%jn>8B2E4j`Hp62c`bHOTIYsH?YXm!n%>N%2Y*"RbUM`!Z@qjW7OQ9</b8ZNgEem$LXF0D;PTQYo#X]JQK%H_s*:/"P4[\`"u>EK_\3<>-S7)N]=5\6_dA9h0$O*<0,)K8<V%23Rp"YlLR-a[K5M:P?<hY8O/&eYrX_7hH\*$Nh"H`T]\ilK>a[8Vjkf3N_@3\+!8^7,6O)BK'*L'AYRK>8_]dGK`_%WJYsrj><1F%`nHB<jg&Wljf7,0eiq3I"*Q84n9(cs9POfp4^B(GNXHpFR4BVp^O9i(Qo,ut@_4ahN4$NE,]*iQ\%H4'`/f)pM<?G\aqPK,i*%Q[%rU6,Ogai@o5""?L[6[t8Bfa_>S_>$&YcV$MK"W(nbu*2V3`VioffprKDrq91l]up.%niO:P-%Yq%WN_io%U!h=854:"1?D@5ilFr%bg4P@.\nBt;2I""g5Gn>"6cg`e%:q">;@iP78hH0=`!!@@>f7KoI%LCU*)cWG;"dNJ=0!=ER$$if"KOaW4hTKB5L:n@*.8?]@+2A%bBi<jnBQ?qf!Z1M3D`O`c7jHPU2i2qm'L&]J@[n$ai=5Nl74:<Vi$@bJ@P-`!;8AF&m7d4b3ci(ghEH'qCkKk%`m4^<UrDe]aULV%<I8_L4!s@h19oVnTp97h)RdI_I-\=c)nF)qL4Y]f(*FMg(n/fGTIc"qa'?$r/<PZ!__nk"4IGLs<<NB#7gk0T">Ek4,m"Vs4"R)T%+\Uun]66^;.iYPqjCIqDDVfJD*,s&&h-,tgHZ;bH@9BqDr/aV^2FpToI99"h(WnGU2H\(:lt3fQpXRL,&0qA@]#96W)oC;2MR1I;%d`+8i>Zm$:Lgk*EVGhdTV`ZlNm#4RD9X&M1EplTon+Kne"C.92_(Lj_:A!&ef!a^0c"2Tr8>=W9\$')J#=D#7!bGnY-^1LOE=nal%XCWg@?3aCJ5[[6uppQ_E'u:K?=TtZBX(e</PgU^&RUH*;?.]fS%hbhkk3b:Zn?KIt[[6nO\CDO`5NiR9,1oW?iuf[?.Y^jMf=;h-%[f'SM!2WB(G-]407hIh>%,E*Y7hEp%f`(2.\c'[&aPK'0S(s>c+V,]ee4tGG+VCbag+)8-&TsXf18hdl85<&dbCHLb?S&CE<GX5I%[#iI<bmpd$W_j6/kr]oZb!JfU+;88)K<m5@:E*tIQT!-()42t$<N-X9+si<)Y1d]d^.;ML81<-RQ:PaU!;shS1c!1XUt3lUPtRRR%R,D9H?4tEsT49aGWZ-+*aYo5Pr5'(Vm2GalJttMj6:o+b4`f3lG;So(ZHF4f@CN$)j!gtE3gt0nGa#kgY4E,/@B^Cpb4u5EZUPk3%#I(X#^UGabRK,,^/M9i:XN@i-`2I.2$lrjE$<FI7-.ZQ0g7tV:`iaH-5PM%fCu:63+c1_KKj*8b;cX92)cLIb*&7k%arZsY;f2CH%O3DbOq%R"a1F8IVaD2OfPa^+qi^/C,P!DK3!M<6t\/s/7Y,lZ,LllHWpo@Sd'8knFX34JN5s-N?3T2lKZ<7,.#$9?Zl#W[lh(f=^%M'fY#/ZR"D.=#Vd>:"]l1>8#:Y-c.tkm]%_gb?Z8g(#1K#82S74@!^skCpnPi,UmdC]a"*^LO)Z#tQ+U4113ICr@"N-6om`&]al9%m&nIU-sMZ>QV88)9db5[6HY`e'4hV#W[lcUPMR.:e[CBR!7=n"`A#4aM`t#JY:8e5I`s!r-LT?#H"jqZ$Y*RIgga\qY*sF[`FQZi%:5n!OB8C:hp,aic='$CZHq;KZ<oSY/66=st:+7B)Pu+S<+>s<5nI.UYhT3/[Tk_&9Y*OqHhK)/VB6]u3*C=PW>6(C;^F`jA%Qm/]%J2O_QYd8U,+?+8\mYl_l,NL3J$*]]M)i.)O`!DU[9n6B+%)[Xs83)?+rOF'uet-KV/`3#X.?3b8Kde`S%U_?n&2@%)O=%?A(g_n=%AXRrh2YPf]DL\@^_mOhpQF'2RDgS%b+E9q'L&9k1po:;o!'BO:/=F@tV3k_0FU*,(^Ll>,6pr0c8?upOV#D;%;RldCYfSRpIG(He%YWUq%(-VP?c)XAYAR8@k1WH,spT1^p8kR7Z_LB[pc,L0,J>bM;)otF?>H-p4f3=qNZ[=H,B3mkF6G2BTTUc&"#B]>a%o+oSFXXKo%\HNkUYuJc`n$uENZa=q<7qu(K[KS8q#YGYC0DEuK6NWokW3_SS;ANJBlV7pJ("3ten`n%Qaimh8Zu)"9DX,s^;rS7mfVO[-TBB+Q%?=p4FFYe]T5XgRPP^%$_VAhGeeLSPFf_l'+;;@Dh0_DLt)-GBB)sj.;/1bTSM\0cDqS#d5%ATV9;n!<,J-.?I[q5\HT/0IuO).*m%jg:@3Q[R7jS5'RbM:o:9$@OUT->@+[-FOT\R5-2A#q/_.W77]S9b(3fo7^DSGm;&(QH;1KT\IH08(6k9eH@WCpSr<mZ5%tp(\ciU%cGM1<:Egi,'PoAljE?-OZngN,ZPOA^8rqQUj(-SG#(ZkhW\Cga%gHNWR:S3>U-'S199'NC&OocAE=Khoat7'Em$5@8i=hDsLs]0'%fiTk*<`hJD>O%]M/M4*Z*ktL\LP[?3pQer?WM1U_PM3>W/-].EFd20(<-3^<4f\6nbEi\;p_[eE=gPtY/hsVRgG@CAd>85$)jO98%jFCgecWG7t@4e<4\ha$A*dgm6eC'1/dM>Y*d/]c'-fUQE*`h4U-4obKP)AJ_bc<^7M+i7D.!+6=2"8iX%M?k9V$*N5V1E2n16^po%+>B#6.+n7Hae&[XF.!h,!=Q_LEOL0B[n&J4e\ERu:g]Ws-N%M1ca.aI>V-J/QF:R*$9Y=aRGVjX(mbr&^tMUg.ZQ88l5_iE9H*'e%p+EA!8b-HkM"YJEOK\-EV(:nu[l"PTMl.uBie0i<(DiD4:3fa4Q(g1aR?\PGoHpqF>fV+<XepubqFma>FRne-"J^*oVm2/Ug@&+&%[3EE6hIDLhLG^nCM*E;,FpL?9>n9h-ga8]Z.CH=W80$-Mj^Bcb`E=IOfQVnok2`$AbQ2KW#5`bt=D(+^?r^QN8&3.hJ*j1^YgnsF%1+I/hCK0B,(fGFBSW*FTNmHg$=@*R,B=Md!;W`e+ROY;7R&I@I__'hj;>m3+iMhR%G((5))]rX+H"/E5i$<@V-XqFG9IaPS*)NCF%<t_6m8R6o_Alka5c-/C=TJ/Cj9SV3Ii-J2t0*W,m/\!Ym(#b]X5_DJ^L'15IJ3;F]![.'R#-r8H1<PVnXE+\cPRjMV[<,=A(+*mc%!-p2ZD6IBI'iF43P9p?5XM4':2!h:IT6/BS?t')RZ]M<>cHS-/G6W96gdNNZaZ?#lFg`cN\)8oT)_>-.[I*PTfeLObY&,SMiPG5A%,32>:5okqK=%^@IbADFok2qVFXfXGnHn\9FNRhouV/;3;&l(>=C`HJ$G,\aBm"1n$=l%_B-/Ei!(VI^8DJ`Qpeu*hs=W/'4bOV?)%F$U:ZBsGmQ#K=Ss0U%LNS^pEu'lHh>*<GUr93>eLa`T[e=XkS/H,aop.WUq2G3:Q8:5@!'SZ*$/D(V1ZTIL"B,Eitjck'S(NR#tK%iFl4":Ap.H9;U!)H$lXF?A1GoNKICXeKV8066FrT6j[\2h*J<[eCsEK2J_VH<L@WZn!R,B*H\X1$0p5b3_<GUmUY,fp/.46/*GD8%L96YQTLm:@]bKCJ8#g[,\uCpK"fA(l'f"ajbls0IPdCjG4B^EoX$gCHl'*ZMpF8T<;82>4S6Eha0qSiF*V9fVQN\HuKZH!TCC;@p%L4DXc65dJP;l\R,Wkd$9-<3ml(6N*_oco`ko#[Y!BXP5p;IC,tX(,t6pS^RM@\.4/^-#Rn%JD,rkbV_QR8^ZTDf1HB)CgZ0EE.m$%Nh*b:EkN#X.>VRjNDW&4K\K_s8,,.7W*85o!Z7tAm7@-s>6,(03=>*Y$]>>WXDeC0:XWid*&(!AaC+879Es7\MScC0[E(RFg'/DJ%9<M6FalILnXKo(?I8JfT(.OL)D&jY7AYj"4ag,a0h/G\ES:8guUlJ7U4.+>8D-]m39DL-@rl6l*[Y!4_O=(B(L#(R(*T^;H(&dHE%(349eT,"]$3GiUP3d.JFI^V;_S;.PHl5b38A(%uL0hM"+>B\am&QjLn"Y.VuQ/flk%K$tAY**=P5okb@/Ctu>nTNH^Cl(m*RL;Je%I%0L^G4mYOYX3?8`+4uGG/WJ#(3.EDRp.A*be=A9%<^g11CF9k*7(J.Wnb[5Utl6mF`qn/Fu7I:8;5-#ae=rkmg6cI(=5B;OA!A;%'4eYlXr"Z(BtLsA,i6E'eCh$g.?Q-U0#&s9M<,q=Xqan:Te>o,7mlBE]rHt[kjl^p=(6-f3b+q)S+[`48qKi4KN7Yj9kBf!#`I2k%(:mZ']bi=m?4Z`ZYj'.kK6RdfdqE7O^2L;1'%9Q'"rVc!0Ha=BpoIGb/$4#4jDQ7_8K%^e[a^W8=U!\q;Z<nbB02dk[795F*@qkJ%$\k.>dr^`sX2>AX"1mGD9oWm^d9mM90mU6*Q<fEWm&]Dr<#$QrV/7;*/N23q1Y"1U.Yd.^/-`pOpE=P.8i;3e\)oKU`Edm,2lBTC%=+I3b1A($=YL_J7hm>hL_%lZ+QlnKR,2$g;&1J1t&5e!PE"%9?C:$Z\G5kL7Ce<Znc<Oi;g&%ef4\fU$;?1;cO&6so:[+tcFpg.3%-0&^p5q^>KO_3$?rgcpB#$`5.@PJJD7k"K/9>lWpW>Cu*b=(o5:cf7*?o@7R9dg[/8U7U6QtnC@=!`n0TU7fm6c,rs,FBF#=Z-pC%KB,lh&M_-LL_aP\\B%uk(Z5sb2snr;H3Ysf,^l+!/#u)jK)m90V)/OmFWD,<AKL4XYZDu?-=lY4>//:H2Ga7HEZA6L=kaFA#;Ue,%YYh%dL_p6giPF(Q\1$k0BPgOtj%J./8a8I[PunJr//@k`i/Od@i%bn70a$s>'AoC]@'tR@))Bm4W37KUQ`Rb>'&RH.Y+Zrm9[,)^%2;+<DQ;B6F)R6Tm0WK&hm,6rJ9Z*\88P[2&lD;[?R`Y*H[S9n@\lcc""*RT4!^N`l;9fk4UW$UjjFn,#M2JS_9Ja4X.F)`&>.L/n%gB]SiFt4O#d_!CM=d&a-2>FX"N(QeM/9Ydt&RgV,N4$?0Q>%64afngU6WtC_2#(iDg[*PrcoAqd^6IZ?0a*<a_B/TT3nYKC)$[;e%Fu[DcSH=OU5)do`=b\u<U+Pb)(5;t1C="(8[HUBV_c85AMR"(^Bno<C?d3_\dO'P#7RSP#*i_"9%=5R#S0##F+;-?/*j67gbm+C^%jl'lNnLqD.-\-p%j%8*XZ0+-l`30f)=JiGNWD*]Ig;HqA\;rNs_.1WNq9d7s3i@:8M2u\62(a>fDU4WA/N1Z4Hc<k<g.@F?[B+QI%YX3!e;fNRASa![)lG^Us!`BRkPIQj87klMH[7PcF%H*Y0+S(P-&eeUc+\;4hY#[_6^02X\C8'u.eX\;Bf3#H'*+Bb5@MUTI[?ahE%ClP4f"R8S..6H=q/W]K(#Ku11Ju^6-U"iEc=p7j[m@.+GCfFPtb&uG,T[GncJ,uX5<]?na8MaiBMG@UIghuB(l""g3+UnW&>AR_U%\hi59[?"4DY(cDo%/'1)f8UtUK\/9I8]C!eEV6SoMM0sV#R1OWb86!;V!+F9H_=g,+)i8b=]&s7)Jl$DLR[5?.eVAEh&qMPaHB+Y%9sTIW&o0ED%`Rkf$B/gh)/GC;\/cJ]R"^\]'Nu*[f[AWe;q>1>73J[4r+Mda[9OK]82!!3G`RHqLfqtq/.Z?g*l`#0D$sQO1S5$5%&3/;t*geAl"?5K,j\093#:h^JJ1W:2!1\nFXM):NlG_"Rlc*I6,U,TP:F5N?=(SQAs/^#sYf2CPPcp<kZ1,GuQ%=+!O8'Bcc-dqq%YG?eLoOXA2f0FO+ZajfBb,T,aS<t_Us-q,2/I1m#.qn<8OgTN:p/K1+'7;-Md#'hf)1h>dD<eEqMO5uY<&]`pi,V:kO>,F,!$VRS%Y`+ro`$1+\ZaM/m;2WUE3gcoI9dn4@94Q&9b3`pcB&L[KOJ(a7aF[TEQJ52QCD-]jAfK9)[@i"Yf]C>F'+7@HUT+c8\XSRc!<6LF%Ug?a%qeEm!,a]CuZG9Q'@'kN"a0WW,K"!:M"Nh()n63@A$O#5n!tjs;:JYPNY>T#Bai9EHn&hhRMfO>)Ym%m7qHO'TAWZ,Pf?rq;%(,`]Q<Mg>OXT;gKdn=d*Z*9r92E=>6a-3iC\5[.1THV>^.<$-j^9MuY(5(EA1i[bY.`k,_8H\B;X:bik7b,Q8j;NEoda@VR=ImDd%gI]^0[<fBLY,ehlE<[u!%e<4U9&'aZYdH.f$Q-_p];Ak3Va-+uXVo=O<`1<BraZmH8du7D%mrBK'S74?OXoI-cHe*?7U86?$pSL1%2WhYH)F5-+0eoO\k+-o:Q-(ghG:ZFK`GT\i(2-@?e&uV43%QXCXGnr:X+`j52>9[X<aKN,#1g`kRUra2ZB=]4.!@a)erD?1GE8$t%aZ`Q9L4T;T,OQ3#SFJ0XL-&E?'@SNj,:6(E)*g1!P5,E5Y:32#27aqP[^n>eHTHj@gY!2rl)l93Y*5TcWXQZ[S!t35]K--`)&d6D%]Sm<B,igLYE8lBg&VY96QBGGs.rD@="c4u;1_NE=6md1u7iP2N$N^r()Lc>(869hm`bd\Ec<M?me2l06M+S1&cYP3!Jh_oBTF+U+%?5Q\NRM8r@9hXQ2RWO2I:32HG%2f.RT"%dG&_-YRU:$>fA!iFN!&d8PH7:r@`S+)AA2*nOe.!^kB/Ceb\gGuF[n:A#+P004Y:W(5%H\Y4:"Oe-(?E6Jo8+:N.2i`kQHa0C/U]T`DE*>TE>ZLRH*"PlIZQY^?9$1DjX+X;i[97#F#h9tgM\P9Q^pB$=Ni`)nUfT#.TRDO2%7EdENTWhE;a-X8oUsY0=(l^WG]qm2E"qK!2&Vi4a(s/Th]\l\-k2(6Wka)'=4?m&\=HO$'GKl@K>oO'7mklc/""'MjQboWkDQd3m%fPnm5cb78=(dlc3@utLsg5)-e`3i25![t_r1PR$tZ?Tm578+`<s3f$SYdcj"U/GdiNn[L"?tF0EhPr73,UWoHH(rMM1PS"cTQ\WA%<tp#L"?/rk@qGapUK"R#d(@uUEuAiEBp,-"mdsS^QdE-ZJm&g!]>@^fKQ?P)B(fmI2cGlda+hZEKm2d^d-C,jURE_/Bp9Ak%p2kj%WbM?(&ahfN7d$0MHO4\7gPq>9_`k&7Z+)>E]/%DH(p>T5a%1ET@"tK+M4*!G]m^f_Pa-dFH;*\6O-?W61?nLRZ[T"<_7b@#)#qq[%^[1umi8;K[VKE=%h<$J/^WZW.2W!dYg\AN:Q7VpsUU.#sHul^=DW:(F9]',\^!&Z$qR$*bpV4A.j#6d%<Xjh6]\Vr6%3Mb5C1n,b%DSu3gKc`<;RP,j4]XTsag@FdmaV<orof=(aL$<as%mSfSXQOj'q>FaTiR\Ut#l?tU3nn)10"06rjg'n2*eq^Fp>6DFjO=(LA,9e\%)#%Bs:VI_h^3[%KrPec'M^QPM4</F-:7iPEp;_(Ea)7Ig]6QAZZbMaZrLp^t6Z4%WbmnY6Nh+)2QZ7@3F+H%e:@W(CGdE=_[<HU(%Vqo>Sl>XCAYN,'?3c#gflW8jhj"alaj-ij!`g7Kj,L2(nk5+cEioR5siGKUskX.Jf?c0e-*F*H)F'K39c43(R=biJJfu%%Gle@oP%MlYUQKC8bg*Nor+Dr6"*Hfqp9^GjnmM4Ekj.f/VWE&6=QI;sa%i;L8ps5P\pN16=r5?o5K+/a7k9`J@9?=$<6bnhG8[B);LgikF3%jXlNS?>arP\Ek8Dm7/A'f,*&qq$iNG*Zj\j`mNUQ]DLp\E8qqKR^o63Ga\P'':C"=-bY#75A,<8q#:9;q;V8Z-cj2u4cK3o5Q#<M%LA_cK]A7AQQ)9i;E8BbY3aHp=>]@T)dt;!k]]ODrZP+TIlc4-+L7@sWJa!>nmTsaJDjVa%iR*i<HM6FW8,J]op2G"aqk<h-s8Jol%VsC5k#CX0Jkk"a=T0G?nrI'105N;#-&RRacc.DiRAtRStc,JY*DsnddAXKpOpMJ\-7bHsWfIuLfMTu]=h-Rc'gY9no\D=D"2coO]%_^Y)gm)>A.WG2@ogD;fXQgm#8chMHtUlJS(=(bSJMtH;rDcYcpF^0D<GKd;A_nWKA*'V)bpio'LJ&U]ls*V%opSV.7c'pH%G^UU=%560$tf'o^'W^FcMrp_nJH-m[>>V3%2h<QF=bkk0@?m&tKM>AD@i-(g!d!$:74^Tb`+ZFEZd[[l)DW][[1N:/JG8`;5h[bL7?cJF@%PncZ-aJsI3XGW]5%+fmca1JAhqSUdlhLu[Ej)1a"_Yt7Q?H*]k`e2meh/C&SI5u2rh]D4c::HhPh0QCL_f$FA06eU$mJghN=g:$%%HLgUp]EFhZDcY2u^:FZ<EF->kHYZW/SA"AcI\C!eca]&9R[p(CT:MUGT:@!q+.Wr*rHWVDSi>j*H$*Gb([(VIq:XHSl.O23n_)=C%E7UY(BC/iC<hEB)j]QShT:V[HSXuFES0":DSIVQGG1rLqVp/q(>+LtW`G'dAIWBUPH?+%HHua<aSFe2b8UJmUe0id<GuC0na61KU%a/?s*a2c4ja2;nHg`<lEc#J/:*LFgcELn2A+.XFC*h=8k*uu@28,Z;/e/gJ;ohfj2*Yh3@E'Bd$Vo-Vq4<+gJcmul"FS[IeIYPL"%n'CjZrhMdHO49H?qQ=c(LZmR9/,Hn?n'8Mnm\Dr4N]Mm%]?V[Jh,Rb6'j][f[qG)BHdWtE8+*=``947k<@X^WD4WWJbuo,AS2A:2%Oi6]V5JV[k30:l.J+\)8<hIqjol5CZ]Dp5L"&^Y[C@-4OSQBISBm!;o=%=!%2QI+^X/;&,WDq$L4>5%'e+0:s/s"-uFWe0%Hq6/$%(1ggB(MC^$EDdbm8$X55i'eZC9$XgGPer'sGo$3qc@G$IJ'$EHS<qbrH1p.$I.bmra$L+\@)E&idlUoJ++=%IS`:[O?[DD7l,.:#%4$MKH9\/S/]R4takret+PFn9$J&rL]r?k+ih,h5?XS(rLDm++pl,DpHfs<o5!l]*0]79a'Fncj?@J*^TiE$h^XMOd$o$uo+I^f<j%j'Q0M]dd'4S,)7HeMj[WnMgC+T6T[W<PA7@eK=cF?d67\c'Ji5Z2+Y8n3u9p<klm[fRS[jdfjb^O-fUWHi,&f5ep7rkSI_iZi<2c%_j:[XCm0SL8!id*2q^:]IPGD@*'aABrOMot&U_mgSdsL:pQ,m[9-.)qmm#N14AYPjmb[(oDnYsZT=k3tMtLqmMOWAd:Tp'Yp+6#u%eJEcKfNs!O_!YO2NjlJVY?!;7S+Xh&2\3FqBR^d^h!UaTrNj8TYs3[9`tSD?kPf3gfD!!8^\Q9pg#)C\TDaJ-!,tSEpL8I+cb/H4%LYqs-n,DYaT!-$i5+X"4I/*U%#:%KVMjqo10mN97j1df8,C!%#0^-d!C%a2%YNbl%p\/V*r5i%gS*f=$8"8?u]D=^o2qLiCo&1UN%ip-8HHi6m@p$)N37!Yi:DD-2'nM+i4Y;`q<ql<fWg:,s"nn/``h',)>J-*"#VdUCGi.q'10n[3O8<>iJ?gh?Oo68MFgWVCcGkN6B%]43Rk?gYdgX(OY'&iIo''E8V[I#N4HkhGi]rd@o+hAn;O%R9&6htVHjqYKVYK%=d`h\BD9?'r1lJ,TTcJ(Y!Q:W+2A4@e2_r#.3I%hu"Dl2+QW7O2jqt#[t13lL(%KVX9QLZ%LehOl5G8J*:hF?[20KIWH0U""oF[jTk[@Ds>Lsp,aA1b\-t?lK6jcp1CeEr9[9"r8a<i%J)/.aIh2!3NqC/+^AhcRa#q$1[GIGJn5mA83rXi>J9tq?I[13!6Xr"5-2>.JoaTI#]6JNTX>eUPEW5J+?#?`nC)$XVn*U,>s)627%5Jn97RMX.#*2GO^rFYlahol2ZX=pH#([`s4aB+kcm1bUMQbU[iH>CfUn.Ir'%P3B<*I\mDqU[OPhe1qTJ+.'-U->O1Y5adCc0P,[%bmtW^maVR2W+u0][VVF?fcAmSr4@1G._8FF_:pH_rh+2P?e]GR?i@V22/[T1_rl$mID3Bc@HrWFip-$#kl+Y)C[^,qYJf&PRf4CQ%[Jt:Hk$R?3TB%)A7s;B(DZ#MY*EHU\)`M1eYGTQjZX"<Hm61+<i/qn'?2_WMa+oF_(;Bh56d*LXpu%910&VB&NpjL2G7T%AG5:rO%)m4(]"%,;dk3"AZe]l(*m`q$R05;$1%bG^DLR5L9PZ#4OfQhpae3)sdgYMPiDY7R[1]66.l+ki9nRf,AIJcjf]^_Q-M`7h'n;Xp?%_u55GT'gKq]>(9>qVpG8Wt4NSS%%7c$od)"h*?=:/_=E[K]GXqY)[CDRtp=@+'EOVDX<7.[B.WN?84(eFPJ8$a(`T3(rJC>:%+,%%)dh:RmbEk1mGa2=?ZtMTDS,`4Ic;/.EU^?L\E74h\G1&T?,GahmCRl6)qWhh'=Zl>e`Qb=]f%lqoDW0Je*_Suf7+faVjlrHAdW;U%[@?gaqeXd"Z(JUKror[r,G0G__VC9gHN+T'B%h(a359f+X2E7A]/Mo+T$Grgc/\c(0!<WaCi3/)o^:4IJ,O@ck07G875omo\(=FL%)4lW8EVlsDZelHH<b9a]]#"F(DiNkZk@=3:*P3dc?9Q'W&'XH)cK+:e:V!>#Z/9TgDtf=W>E7j@O7+akgFQ\P\[1oqG0A53m#G%b%[j+lnoI\PiNGYYt431V7>#i!9ePJ3*bD_?DaSWVpI.)@Seb_#p=aeX3A^q;e4PB8pdDVu3\_0,#&*\tdcA'lUO&t6:SdR`nI_)S'%:d46Hr=cB'rV"q)`T>!'gJpBQ#B$^ME;ROWcQD&EX+S(./)GUIid9O.r8O)D2))ARSGI,)F]H$OrkM^qa7l/iH-[-^A]K.YhgOC/%O5CtgW>D&jIWAE<5mIO'E3"V#BI^L`*K(`kB.q!?4t4[-Y%c@s5+reILBm\sVte*d.W)/6oA?l%"VRkEeK7aa[nk/!]PNJUMo@@,%A55>gpYnu_hIZQng\Z30\\0ZDptbf>orG96a.(n'<fd9h@UnL9O7p?cc#[7i]mos@N1%UGA+n/ep.:HC\pA@Z%<lIJ&mtR.EEg-O%h;'*a\DRQtKJYhbrYpUBMcZM8O',WWf1RaI_q)O\q8X$!Z[LK:3kne'>[RE=b+AP6LAo.NX6dfSnpE6+mG4RaF-uRaTPEa=NO-U+%DiJg<*9?ol]J7^(58id"VcH,imG6,BqYAnE)48Q2Yu0kpAjl1lCC=/HMbBr61ufY6b7EB[?^5cojmc)CmuLq?h&US:%V+<U=.[(t%SDc[\8k/O5XhMM2k5NkkDm]9%\UUY"\c_g93R@Y.<F5:'D7@)@ELPN$F8t82Dk(>KfD+hV/*Hn,*o;7RgP9i7]^p(C-gqqNG?.VX%,IX1R<VFso-,"4[io)7$;81b6Gi=E$HZh7Enb-E2nIC/:Kr;TsXoCb[=8U&;ikK$M<ib+rnJZXD*6<"$-FfI3AT&ZEoo%G6rOL?m%\bkIe7lG^-o_9rkJ*([^n_**WnS5IYp%2SIrpn%6s7(@JDm'*2DA@Z6\Cpi2.ZBka>:2L(j\SaVpnuE&c>iI4P<@`=Y2B3s5\j[X%guQddk'eQmJtMu:Y:Th[g3Bc>Z+bMLin'Zh2m<2%5jqL_7n79M"'TTZbP5"'rZZ55[0Ab!c1Woof<>3:F&]N6UC+?JZ>&p)I;>jk%og.825A?)51n`1?ISAKnX05i^2)!G@qs(6Wa4luSjp*O)d0\us:A?.$XZB;.)1,L.e4l:R''h@BgIE6fIX5+gDJ9!e2no$jrRocT%ne291]2Y,BePs9h69Kb!>Y,4CXm;%^i5*+Z1'9dN05iC]%Tc_\2dZAP?f"dXYARZ`IdeAlEdp'9mdp&:rr?T6<*f~>%AI9_PrivateDataEnd