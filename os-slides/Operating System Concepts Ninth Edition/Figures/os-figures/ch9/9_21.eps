%!PS-Adobe-3.1 EPSF-3.0%%Title: j.19.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: manoj%%CreationDate: 7/1/04%%BoundingBox: 0 0 344 177%%HiResBoundingBox: 0 0 343.8819 176.6666%%CropBox: 0 0 343.8819 176.6666%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %AI7_Thumbnail: 128 68 8%%BeginData: 4694 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FFA852FD7EFF7D27FD7FFFA8FD7FFF7DFD7FFF7D7DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FD0AFF52FD75A8FD%0AFF7DFD74A87DFD0AFF52FD74A87DFD0AFF7DFD74A87DFD0AFF52FD74A8%7DFD0AFF7DFD74A87DFD0AFF52FD07A87DFD6DA8FD0AFF7DFD07A860FD6C%A87DFD0AFF52FD07A835FD6DA8FD0AFF7DFD07A8847DFD6BA87DFD0AFF52%FD07A8845AFD6BA87DFD0AFF7DFD08A859FD6BA87DFD0AFF52FD08A88459%FD6AA87DFD0AFF7DFD09A85AFD6AA87DFD0AFF52FD09A85984FD6AA8FD0A%FF7DFD0AA859FD69A87DFD05FF5227FFFFFF52FD0AA85A7DFD69A8FD05FF%5252FFFFFF7DFD0AA88460FD4EA87DFD13A852FD05A87DFD04FF7D5252FF%FFFF52FD0BA835FD4EA852277D27277D52277D2752527DFD045227525227%5252527DA87DFD05FF7D7DFFFFFF7DFD0CA859FD4DA8FD05527D27FD0452%277D52527D2752527D277D277DA8A87DFD05FF5252FFFFFF52FD0CA85A7D%FD66A87DFD05FF527DFFFFFF7DFD0DA85AFD4DA8FD047DFD15A87DFD0AFF%52FD0DA85984FD4BA852F8A8275252275252277D27277DFD0DA8FD04FFA8%527DFFFFFF7DFD0EA835FD4BA8527DA852527D2752527D5227277DFD0CA8%7DFD04FF527D52FFFFFF52FD0EA88459FD65A8FD05FF7D7DFFFFFF7DFD0F%A8607EFD63A87DFD05FF7D52FFFFFF52FD10A8357DFD48A852FD07A852FD%11A87DFD05FF7D7DFFFFFF7D7DA87DA87DA87DA87DA87DA87DA87DA87D59%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA8527D52522752525227A8277D527D5252277D27FD11A87DFD04FF5252%F8FFFFFF52FD11A85960FD3DA852275252FD042752A8FD0952FD11A87DFD%05FFA8FD04FF7DFD12A83584FD3EA852A852FD1FA87DFD05FF52F8FFFFFF%52FD13A83584FD60A8FD05FF5252FFFFFF7DFD14A835FD5FA87DFD05FF52%277DFFFF52FD15A83584FD5EA8FD05FF527D52FFFF7DFD16A835FD5DA87D%FD05FF7D52FFFFFF52FD17A83584FD5BA87DFD05FF5252FFFFFF7DFD18A8%5984FD5AA87DFD05FF7D52FFFFFF52FD19A8595AFD59A87DFD05FF27527D%FFFF7DFD1AA87E5AFD58A87DFD0AFF52FD1BA87D3659FD57A8FD0AFF7DFD%1DA88435FD55A87DFD0AFF52FD1FA83560FD54A8FD0AFF7DFD20A87E5A7E%FD51A87DFD0AFF52FD22A8843584FD2BA852A8A87D7D52A8A8A852FD08A8%52FD11A87DFD0AFF7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA8595959A87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD%0452277D52527D7D5252527DFD0552FD11A87DFD0AFF52FD26A884355A7D%FD26A85227522727522752A8FD0452275252522752FD11A87DFD0AFF7DFD%29A884358484FD47A87DFD0AFF52FD2BA87D5A355A7DFD2BA852FD13A852%FD05A8FD0AFF7DFD2EA88484595A59FD27A8527D527D527D7D527D2727A8%527D5252527D525227FD05527DFD0AFF52FD32A884595A355A7DFD22A852%52275252527D277D27277D277D525252275252522752277D52A8FD0AFF7D%FD36A88484596059607D84FD36A87DFD0AFF52FD3CA884595A355A355A59%847DFD15A8527D52FD16A87DFD0AFF7DFD44A87E845A6059605960596059%6084FD09A852277D52527D277D52527D5227FD0DA87DFD0AFF52FD5AA852%52A852527D27FD045227527DFD0CA87DFD0AFF7DFD74A87DFD0AFF52FD75%A8FFFF52A8FD06FF7D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D%7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D52%7D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D%7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D527D7D7D52%7D7D7D527D7DA8A85252FDBAFF7DFD07FF7DFF7DFD6FFF277D527DFD0752%FF525252A85252527D27527D7D7D52FD66FF7D7D52FD047D5252277DFF7D%527DFF7D7D52FD047D272752FDFCFFFDB5FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/exec_file	statusdict /currentfilenameextend known{		{			0 () /SubFileDecode filter cvx exec		}	}{				{cvx exec}	}ifelsedef/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		currentdict /lw_initializepage known not			{			/lw_initializepage /initializepage load def			/initializepage				{				lw_initializepage				/initializepage {} def				}def			}if		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: j.19.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -176.667 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 176.667 li343.882 176.667 li343.882 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"16.7818 12.0997 mo331.783 12.0997 li331.783 161.601 li16.7818 161.601 li16.7818 12.0997 lifalse sop0 0 0 0.2 cmykf0.5 lw0 lc0 lj3.8636 ml[] 0 dshtrue sadj16.7818 12.0997 mo331.783 12.0997 li331.783 161.601 li16.7818 161.601 li16.7818 12.0997 licptrue sop0 0 0 1 cmyks1.5 lw16.7818 87.6002 mo233.283 87.6002 lifalse sop0 0 0 0.4 cmyks16.7818 130.601 mo233.283 130.601 li0 0 0 0.4 cmyks1 lw341.283 161.601 mo16.7818 161.601 li16.7818 2.59961 litrue sop0 0 0 1 cmyks1.5 lw37.7818 31.5997 mo66.7818 125.601 135.782 147.601 233.783 152.601 cv1 0 0 0 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica Initial%!FontType115 dict begin/FontInfo 15 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/version (001.006) def/FullName (Helvetica) def/FamilyName (Helvetica) def/Weight (Medium) def/ItalicAngle 0 def/isFixedPitch false  def/UnderlinePosition -100 def/UnderlineThickness 50 defend def/FontName /Helvetica def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 0 /.notdef put def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0 ] def/FontBBox { -166 -225 1000 931 } def/StrokeWidth 0 defcurrentdict endcurrentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E44BE895991CB9C373C80EADFEAEF5EFA5F4286FAA013099BA2C44005FAC039F852BB4225633818093683A68F63554A937F8BA07DBFD09D8B45EBF1FC7D45C73953C4A942AC8EA07942969C3740F8FDDED3036CA23DA6FF540CC45E537C59B9AA6D45C578CA641FE62A8116AD9878FA6246AE4B043A31FF7F04E1808C8B7DE9818C0B46A24A3EA7E4479EAE242A5914A7B158790E7FB54257EB78FAA10F66F92CDABABC598B896060ECCDA4141E5D7F2780D0FC9C7AE6EDCFA4D4CB33471B0CE177F5F34390262090144A3542F0F99FD6A431CF58BFC177B69B948734361FFCA09219D86239F3D603158FD8D113E5F4328092B78C352E8F793767B178BFF1CC48776F16EA790F7143CADE2D7427D75F1528DC1A6D3925E146DAC6D9CE4162708BB768CD9C96558C5E5E305F97CA4A30DB8104FB7B8AFDB4B3BC3F4FC7560BE408747CA74201D38F5AD74E96F883F9E9CFEAB6B1240A2366FE9803F147CEE19B03DCED2E62CE2CE096D2F2828721B3CCA9F3D814A2212382CE23F516B9CDEFDF7BC8FAA73111ACE136FE7B9D486E6C96BCD0CF9C52A89D2FA2D30D14D0FCC9A2470B53D39938A43623BC02445D0EBB8D650771CFFE76FCA30682AF10E2DA6E4D634673A475ABF141802F37C3FB9875155262D4A28FD6B5F85EE4176592A8D3A421D4381BD4843BE10AD07C3DE85AA61F8E2EA95EBE86A6374184D582D35050900C96FED7F4E5A582DA69EDDC1DAAD28DE08D3CE98B8F6D3F7DDA609F4A3E9901B1146E22277CB7720A22CA09505B145546BAE68E2B972838048211660ED496AAF92B5C46A76FF7A74EBE5A27F7E523118173D167D9F5F68DACF119B296C0FBC5DD039404A4CC7CA837CDCE5FD15542E9DBABC7C1D42D0B9F00AE034DE2240DC724251C6B6817662E8E974BA4B60DE327E244E6EAA28AC475203416E87776838447CB3C4981B0C4BD30CCD4907B9A91D904C8D0B77F79A317C0D2BF21184030130DCC39455B80EAB8E1B323EBE123A7F0B05143B8EDB7A35D123B78719E50346CD44E7FC542E1FE89EAFCFB73C93A0165B0AE9FCC0D1860B0823E43C2DFEBE994C841084096602A02C9F4810B6C0F010A183A2D9FBF33FED88B4E1BA952C31AF88CCA6D5C81E9FE1E91A4E507E02EAFAEAC79709296F1BE5CCECF57C3861ECB1C9BBBDD913A9CC3064630A099B443C3722E4AAEC929409A788D9E73E5FFFA85D784F123A683BECCDAC02C2A75DE277A2B5C700A5A9444E07159EA4012DFB1E8C07B86D8DBC32FB590ED23D14823C9254C625110E3366BD1D4657B1720DB4702BF71C0E31E1A1A95AF701DB2D05404C0879EACF1A124C0FA3157CE4105B883F56A372E0967E781BEC6992B7AC5E7DB719FBD0FA14C1B54DF375AE6BD34D2D2E874D88A7C51C8C63E23C007A9470EEB98FCE948808A51459277592104DC1A0CA46C7F09BA2F1D7185F1EBC99D3B3AA0AA06FD7F985ADF6D62117BC075B11E8C8021F735E9AD50FB3EA085ED501208253DC05C6C4F9C60B0144A5BDDAF0CA8212166519D665F34158411822B410140C45074E4811E080116A9AFA367A01C9E7FD8CC19B733A4C564EFB5945795AE8B77DB261867145BE890BB9F0C197EBEE9B5D7B4DF1E74DD13A3509C5B4A19BF0662A08CBA376A27058A38124AB59487B4FE2B1C7498103541180118DFD7BC33EEF764EFE2872498A08977491A0CFDC6AFB265C5ED6950E60685684863ADF0BE602EB40727CF4DD246AAA444E43D45ED690C92A4BD38234E436797C43B6C639ABAE310A02D83A57629339DF6CCB2A0FA3E591C47D9944418297957CB6CF2D24944811FA80A9561F4A1FFB0DF116FEF01EE9E55B4E8649C0D93B9DD101E868E1FFA2D403A60EAE9E73C78A70D31304DCCEBDF168A27EB2CD2E44076AF56B034FD9A40DA3AF55E62462233F3916576170E947F2C598C700447FC5F1CAD8C5F34AD03B1759E1B607589A1A85ABDFA72FAE7B768296D3359F6C1263DC509A3C363F8F57D1E696D7543B5A7951F0DF882AC17BE7720EA03BDD051DFEE58BD0EDB5523993EE33BAA3D0BB695C1DAA22160B9F41F3DF152FEFFD09AA52DAC3A830F0D50727A7D38913F7DF3E683A306C38F66DB3B47616ACB6BEED05D724275E95703AE657AB1432F851EE9221ED12955598E186F54CE9B34B7EACA2E73861D5DE1E716EB781674FFD8B3C6FF030E7113A29BC4415425B5244E1D15EBB49AC0C6F863B4BE0E441DFDEB5132BB2A14610B1BCD30363B60C39E8CC57D74CC80EE3C8FB52A7A2647A4CE1FACD0B172F85B2D7AF7776D85EC245016BB1C9B777A5298A8B4EF2DA5FE6F39806FB3D900D3D124635B6BA767F58CBBE590F782A7973295C39D50C50793090C45DB4891125403F5095D6A23B5C94F5BA7B335ECDBE9A4726742A9949B164AAFDB61EEECAFEFE5B5974E85ED73A2B3DE83EC83CE2C56B7D0C5F01A407A31F3F1BE8D9FB2CE139D8D855C622263C81C3F4D53E292EDB111C3AA5936FB4CCAD6DBCE2A63D2A4C5F54231FFEE751C6E42FB2A725731AF017D4E4A0D9B66C041B99E3F193E3E3EB6619ED21EF0B6ADDF0F93B120D4AD29638B924DD8EA63F5C7C48E0AD8798182A4695A8A3264E86559A8A3FC2FC2D4F4C4E1F85334CC7CC2E1B6A761D027ABEE227027823A23DB423F6741726183275E1B10CCBC804D331FE4D3B520A0AC74BF70C88CBA88E7259BB711543CA695837402D08A60BBA5209D678F09B4AC6AB27AA73956E3DD913D44AD6E3BCEDA9829984B777C90B5A90CCE8C7ACF841E95BCB9D3FD78DB3923E1CD57C1B519A5DDDFB9A65BE070588806B0BC80212D353292A837BC6F7DBD29260B0ECF74673115B26CAE0C855785F9CD862DA649999F66A90F6C68D10255904F1404F7862EE0A559A79B85668C175C67A3C0255E4233CFB646C38E905308DAE419D63B3554759F52575214C6DD270457CD825EBEA2F8A01175DB02DB571589A8DDD0D1D0F2FDA0DC066DC922B6E316958D9FA95DFDB8C82E337A998E72566A339BD1E89FECDB01B6028ED417C1804B4CC4A631FAD42877FF74193BC36E5C8616A8DE244FC3C8899E69D04888EA286B05279727F9B837EBCF06481B1C831ADBAA758A0F3D9C035494CC8C2A40D0E779D5F46B3FC225963D69B36B7C477D99988956B3CCD9566DB823840864AFFE5FAB5F715EBB16B298E30CF1821D4420FEA9BBFD2DA9FFC3940A1C8874EB092A36F154D49BCB99AA20A551AF920FBE61F432F94F6E599156F005AE7D2D9D4A4B2C14B7E723D8752FD325A49C45739FE402F96A3FCA40255CB2B5D6FF72D10A3485CB22AE5E3C2224C74871798FE2248486AE8F14C962C4173EAAD9C1FECE29801F6C2DC4F766D2C5BF5F03F2586B0946760ED5E5951CEFB16A3C49838DD48C362B992D370CA549428D300BF0930D2B5DD3D5450DBD220568AF49A2A28F1809AFDA0625996BA41B10996B6E37BFD7BF4D173303DF4DB36DB880555B52BF4DA2C10B41992A3AA439745496D9688D05941E65078E52CE310EE2EEEB65FA4156718C4113589EE3F5E38BCB55905A771ED129810DDABE6A242B0529A78981C1DBB6F9B3881ED27A2BE3826C995DFAA2899C3C4BD6262738C8706BF661ACEF47E5FB1545C7EA4058A6FF3AEE61E5279F350A2F02AC9AA5F9AD8CA471D4070D4983CD140F401DF72715FF1FF8ED1EC5E08CC7192B1E18D9B8DA63D54088A7FC4B928F52A829652AC5A2CDD2EE526B3DA35CA375890888D19F90F69DAB3D291BE689AF21F60C1BB9E5911AE4D009A8FE228D5A1C8418FC6C97AC96D407FCDC825CC57CC0AC2542CBC79FB3B530B033656D8501E248368EEC4506259A70FD21359D49DC2F7F1F92846E4EFAA08BE6327EF986CC6B431E6B1B547FED3D997B631E7C29DD3D5AC2B654E2E32EF4C2F81665B1FE6366B35B1C4404D5F840724FDE8CBBD89CCAB9002DD7A9231730D1BD2F279D9566FFD9E604087FEFF34169BD6C598784731B2F8709A0E8E750B23970B6C46C787925D4D090108D2C7B53CDAAAF6023E56771C7E020FA1C518C2E42324C0B3895CBCF61A1A9CA0640AFA4E35759DACC0CEB7C30F1B657A2FE5B56A211359158342B1C4A7DAA880E764D11D9F62F7A550B66C505951C89B8D7FAE8EED8E1C17105885C34DB3F82B5CD1BD09E36B17567785411646AF70E0FF6C9C13604ED42918889C78868395F6885ABC56BAA69F26A677583DC682182D7AB56444F3F2AADD4B94F73334C6980C2352A2CBC520A0C3B595694A1BD3F8DD191A9E6894150B82B7EDE36ABDFD9DD3C667F71D0D91D40FAFB750E16B2050AF7366666E64C68E6EDD51197AD8EE9FB808535EDA5BAAC4B318AF2540113E95592B3F7D8E7070D7B255F7922EA5B2FED3CC3C9E9AA8405681041E0430D013F48DF0E839CE9FE53734BBBB72F39080F2636B45E1DE7E20133BB3013C8E656BD4A0AC35AA5B52F9060A73D65DAF3E24CCCC244C5708D64A713634DDF93C886CF398E5C7D1F456194EEA8A5B41BF466D4E6C85D537FD3CE470EE6A80A4829DBE879B95E00D2619EB2D1BA80D31F0D28AD2FF15E63F892F902D668E9BA0D8D37007464D19D8C6A8C56A85DE92AA866C79B3E416CC1EE01BC0FCF6C34C3E1CAEF05E994F0B20A401C245FCBB0D6E0B85146695FE5B29DFBE4A709306DC32131E4BA015810BD22F48454D0F425B79E8DD56D092924E336F834953452D27D8876D118146E35997692D161F93682259474451E4ED176FE83F87FB07AC567D5CE8120DFC5015A2351CD8DD6E14DEBE989EA50E9A77D291E687183C469427445F7D01BD7F24BEF9B43C8CB422C5DEA234968C4345FFEF026DC114AB5FF2D14E0C3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 45 /hyphen putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen 51{/.notdef}repeat /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}repeat /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt139.108 174.641 mov0.0878906 0 117 -0.0878906 0 (num) awsh156.525 174.641 mov(ber of fr) sh187.451 174.641 mov(ames) sh259.931 67.3501 mov(increase n) sh301.36 67.3501 mov(umber) sh259.931 77.3501 mov-0.0878906 0 114 (of frames) wsh234.622 90.0103 mov(upper bound) sh234.622 134.033 mov-0.134033 0 111 (low) wsh247.9 134.033 mov(er bound) sh259.931 145.072 mov-0.0878906 0 110 (decrease number) wsh259.931 155.072 mov-0.0878906 0 114 (of frames) wsh/Helvetica*1 findfont [0 -9 -9 0 0 0 ]mfnt sfnt8.37891 115.688 mov0 0.268066 102 (page-fault r) wsh8.37891 70.5222 mov(ate) sh18.7188 4.58985 mo16.7818 3.76758 li14.8443 4.58985 li16.7818 0 li18.7188 4.58985 li0 0 0 1 cmykf339.292 163.538 mo340.115 161.601 li339.292 159.663 li343.882 161.601 li339.292 163.538 li0 0 0 1 cmykf%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (manoj) (TECHBOOKS)%%Title: (j.19.eps)%%CreationDate: 7/1/04 16:43%AI9_DataStream%Gb!9sCTf&+Fe8C:p4#'nT`GKF[PB&eP/2'b@G-<.M'+)`L1(@MOca0?eQ)":C5P0+rqefRAfXop99_!\^gKo]S]fm#o+J;\n%3&2%'q]pJjdY^F+"q"$p<,CEpt8TenL9e%PZiK-.6]rmlp&5^omHMo@m4fg(D$F+KGHPYI(n^2pdk1mDRo8IYMY<-^6u1^s6B!@1#K\A%lHQ@gDr:N[l)X:Ml_cCCp$m6u*:r17lhA'd+6T]^chB(_s5^<>I/!$;Y?oN7T-!RB0Cn#7Gkl*gGk:Wurr/mE^A-FY\(?oEk$A#S%jD+\^bOoe'nI;]"B"ic@@rNV%rp6[mrjVq"l0\"S+9)/ZJ,f3>mE9_BhtHdthn8q1J&]<3r1_uErltALhlh+0q]e>ac)7c.ftVn,%rk@ODa.rG&rLZ5mLB%/8YJ0[`GLqVme&%1Chu2GfMf4)miVC6\#64^JfT4q)?]@kI;n=UQX'^;B-/s>`=e8ORh>#rms7GpWq1%Bu%3e2]C^\RS'Im:-Y?C15.ITftLqo@SY*6I^-+qaaf/E*RGiI:7Ur6O98S:CRFVdK/fo(Dl=ms]Hkj0)dLHOdf8qu/N-ruWSgK_SMN%]O1X1GH^/`^Noe+8\\SHpW%aYk*W>9]QASq`N+I4k9nT!ID6<fli-Ueo0!`ak1+[9rQh(Djhk;Pq;""0\UQgYb&C_GYJ-R2s8'ui%\aHoGVd(#C/XGe'KnQg?o2D7/Vpk=tA:E#=5+f)8&\gZjrp&mohnFL:ZYOq@+^4p>=8gnLp=FAus4L2c2."nErUc0>s,pU#5P!86%s$F4apclE>H$kiamVoeQ?-iEDp;t)Cr9o(g`p!Buq>/!]f"_1LhgP7DrjojT+@FqUGef;sIu27]rjol55C6#!7<Io-:LASNI_L/V%[d^]-IP8\/XnhprYF]*,=+@BRn#i_[Y3Z&SM\gj=r_t<f<Jl9ki_cOs<%0J,4J/r;O(ljK)IIs)232LsU\rC**qe&b*qe&bIe'PC%I-7Q64QaTjhgP$h'L2QUL$ud$EI[,bj84;oqminT^[!8>hd>!UB7BS'T?6OCjYK%al2@2LjEH[TM>Zd_5EEb]=eEh)roFghh)!mI%FJ%56o"368:LEd_]]MAGp[p\lkOQ7*]QiCNch$1fhd_%pi]Tn_^H[!.q0i#3^#/R-?emenStkHnmOsXlq>BZKmMW[0qL7n)0n4M6%chBQ>pScl>p%eOR?U!:/s*h`OgfOFA;*LW0mod<"j;uqMqHi\p#/'P?q0AR<qu6"\pS`GoT#]rAo)%jgoD?8ileZ9'T!/$Ik:_nd%l(03MVt8C3;r@'?I"(gg>J>O"HVEkRqV>Y/]#SI0P5VIDpW2/l\>B(*L7`&==k^O[>>f?AGh.f93PEK3^:SaAn*Aijk++`_aRcao%p[1o)=23(1J,XosrjqRrf$%?emlA/'k!$\@lg'koO4o&4k4.-2[XQ`-kAg>HqmUZ3bPas,o@"dmkZQA!cLUQTJ"-c4k]nHPoZ,@(%^=VQFID5,thYWK[/D$4QDlX^=I)U?FoC;#BQ.#X*a.N+Xj0P9E=$HVr^M:I^rqQ*ag:$nID0s"jp>P=q0CF$Jrk-"[r:9jaj3RVg%n_)N$hlhG*H%5ejkP*jUJ)4PU+2;]?mbIX:T%El.kJ-GW4C:chV>T?=-,4]p`KoPBYNsMA]Vo2Xb&8q\mJ^8'If<KbraNM>iMO&E%J,NUOrVu!.Nkk5)M\k!tAH-+T^\BK,a^[M[s-(4teGG<QrhUj*HN.9bI_P7C0!CRp=22?8r.i=rq4B`t9@nI'r:G5Ul,.lDM]]ZW%rT%+&qse=efD1)Gr,qhp8"XLCk)1=qIXT5fgQq8OHsJnLO8*[Zp>H\<:W.QPjRlZ:pu8m^G'u:+P0/.'fCN.RjHua8hrb=3/\asX%E8KZ<pSY[tLN@rjO-cL0W_0k[T7?V1qpW:=?a8J>p@XJjX<)b02dbCePjV\q*ifM@S+D&XqYBLPQ#>:O3!.E%GMV@^cQf*\rUd$1%>kRE0lp"bJRdZ@<aaAU:4;6u&CP94_o98"fT?#kRp)Z5T]Hm11eUIL+jK>h6pHO$Tch-0I?embdTBUgnP@sdg/PXH,I\,@;NTLVV%Ub#WBYKQe,R"'FRY]rCHQaRD\?gjU'')uTWl<i.e8,`I'bB/ftoDJC4)=t9!f5Km\iM32Uo!@.mraC2+o<*hL?f//<*Q-;(G)^lr%540IB5Q*_EQRkQq=NO]!D>>ls00YZA(YeNrSSrZ?r^9n\kOs[W)q$<,q$1P0a6m*AY)o:%P(3K$/C1YPSY^]nb6O$F,6(U;W.-qQ%Q_.UM#Bt5l]Z4[:;."]5l:5KuCmg`X5I"@OUA+S%f7KXpq/t2n?@T25iO]"lPkeQK[F=*'mk%hkP(3,'(Z)puQd_k)M9C;f[0+Sd%Ie]lZn+6?Cn]Q:14MiK:[h"q5h>7)lm!nQ?VB6o[3FdR8?,ir$U\4*OoY:#oq:$VG)W;[k5<mffqu`@9*gLc,b-Oh8moq$D=nck/%R6T65+.qd9rUr?`>InWcrR$nE]WK9H[I-'Mkadsf+3`kY%CLue$frVaBDoUF4o]]?rp39A>(UC*oC3=AGh^hGmNLGqRcgj"TDiNs%T?$JW:O^(Tl(,\6bO`E5`IIRHb;PS,NkkMAVq:[8hWI?kCA%m,^3'/!O\I$nT8QD2Z[_i?f$Fe'Hnt.4J,:o4?iTUjeEHe?5PhC@%F8XEar<mj%J$D.HLMJH`XX2;7o<80n;ZCU+q"1JZp@%n>s4M2FG/FpfnrF(JqK`#lq0Ma1^2kO%>F+^'4l_4YZh'Rq,C+X3O+-K)%]sfrqo_hui?[Vf=hY6]0q.;:PrVZ=s/F<B'X#JoQbC'%(-2Z6I2m;*9p3uIk^L-I-B"n<5gH,I_rVc&Ka*db$hn=H]kJ-EEmp<a-%mF1sAhp&'CoD.k<cPkjC6&>F<qUKM5qShu:T>'pGnG2Xs]2*ClcXG;BZ/<hWd`h[8T0</Gn%O/FAUjRko$aoC/D$NUr"L9n*;Eli%q;!&-O(I/$e%/#D[@cuOq/j:ImE>8&eZ8/2k3MR"R)dZ7IJiNplhSKPO1rAt:N*sos2l,f`oZH4oChG'[r7;qL/7I6Sl8mlqYo5p%p+bGf]m;^$lZ\l^rL9_RhgG1jo%hc>oBl9j?iKbCms4RRj3P6;/Nj!pQ`o;Zk>P/`r.h3LqY1HDqss]tlX]IugY]\,?M:i]kI]'4%^3K>9l.:C\h:&Rj]D;0poD&6?Hfr?!*V%Uji245ZDr6'Eo]H'rDU8$oo7)((?fuFDJ)][ih']q/C`\**o\DUD+"uN"ql5/7YFb$K%2oj,5jbGe7X#E3hk@J-"lZ_N&ZB(ouJ,0(fN7`8Ko+0`mSaYDurVbK;#%F5$[p7kcrK[-@q*#gO5BW0^?UoR8Iic(G_..rChu;FB%T(YrEl/rRGl0F[SkBR$hmIu,#nT99TqT[p4reF9U3+'B`:(D_6^AIWg0E1,,bQ%Cor5I80Nr.dN^Rahc,*4!4c2YnlNo*"uKpPXP%Y4mOOF%?9*&)Y+sp?CqIhT^OtGtrfN4oXDGs8BSeiZJ3Zds$99f-:EQH8mu7b2YP]04(8hT#,N_mL=Shn+ZG@44dbenj,YBm#p9c%Y7^/3Sr^Y]b;VQ@I/:rdcdMS>Mtt]t?E`hbcS),?]%$352rDAs5JML<oF"XYmC.#jU1h]@')D6eaLBJ.q7f!W5JGlJmdgC.Sj"cH%r81E#a.F-oIo\oYs,/B'VoRlgDplrrTpq*mQZ@P$GQ5O4s*2suI.upV?hSCLZ9O5a5<5NhoCCH+s2mY-Fl"qSbB^bum[G<5q[;KC%jnRj.Djg4YId,t+(GGeBO'fSJNtPb+FMIf6YAlo:`NS.2H[2_cr\Q1LO5=B<`o"IQ..[>fACuBRfBD%5c^u&3l]%MeN(V`@hD7e&%mIA45Y.&o2?[f3abJt9%Its)7s0BChqsk7ns*[1K5HIaHs7S[+F<>uh4h',?j!h_?o$&9UiMWB6Vk:tbhck?H[YB;0_5BMBj3)?0%LsLRC0,_ejs"MKg*@92Reo[-dX^bMog:,EuSuJj4i/DH2WJmUkG_@;q<o[N'9I&(>NH3%\D(Tmu1WMYM[E^a)$ZupGN'4"X`*VJ/%netFGII7!3M%:WiN1liBLOG-_4B^Z`"?6onm9<b[ZS-*`HW\TWpNhkVNjJI9KY6I=*1VKMEc0u0N(bdDY@l]q$%-28gUa4ad/52\%oo/4BT:M<p=SjYGF7CK`&0D(!=EojNo&T13gCePaNc!j=O#BYfG]IfS5"=4;3L2`#,HX)Y$m?U%k&K`rmcWM*HHt9m[s>,LT;,CU%jui@IVQo7U3"-[Y&UGKCoC<06kJ>Rao2>/3qeSn8JK%lmDlMl?CC:6WjiP7;orYKP\A_^nauqL3V3Z7,;kD/e91l2FFY7Os@k:,V%8$A<%Yf(\Q-23]=Za4JA`42*n\+,8E?"2Ns)TppH9Pf'G7nI9'!6VU5Z?LbU1X,oVW7A^Fb$`L2#RXI+;NGHp:'RZihIgcmamBL3%(Y<pb+Upmr0t?m9#3-]Sd$Lu<9A]QnG3%ssW+)A".I!EKT;eW_`?d3!8$5AB)=r<[p#+>JkKg]W$Ebn;VbD`L.l,o@c@kYg+/O#"%>":2"+E5BL9'_>%=V1<`0'C'#O*$$iEGrnQR$>7eBkP_OEOM+WbS@R2mc_VPO1D/"bL)=k@V7b!iah/^+*1_SfG`2&bHW3Q-P(1a%a#Rn+A)ES806QW,X#]W1E3u\QFkL78FW"gCgIOm+ZI[TAl_qd'pU-THM*B(rD\:M*HeW26"&576%,O;*g>:PR%/TDQNIV(A":Zdh%l%ia(f`P."cLk:3*J)s0.g&daD(3[6ZF=fDb1qd46n2+!iS=-iPZ#d^a(1><VP'W`*S&7+dX?"YgBp9j_aahFn&/lbVDHg%4:@T4%f53)_V`%`hp"7k*I9tA<&df@PlBmI8XUWrgiad#[4rDJKD)9aSM4&uX6]-sGkIT3$E#6I^FLei"pDL)!q6)YJXA;(4E)(ZNO]jd2%\h#95CdRD+'!a5.eb,r`Xj1El#T1Rd:,J[bI,Du,[Q_5.lkrTNXRFop>`;ii^igjmBNC/l7#IC[FGmC5A*,[+,TG?@eBDd(Hg!db%Cr:(!a#L#WR"BXCV2r?oNFBlQS7-&6:/!6@_/_4mF`'l<F%fH0D.8TBeSb%)*=''fcP'7)OjhN6@ilSF\;aEu5C14BTHtJ\b[K9#%RWsq%Q^J=_Nf3?R6@:!Wg\0:N'K\6s-rg9c6jkss2_8uFB8`__g]rnb/?D?2@H,)dTNtd;^9;P>JIp)=2K._?7Tnb3fCMB46f;^Y%EBHFX=!es4R65!4QD??FFV<`Bp98@SA&JikKKCW.+8^UW@S4ru1IMKKDkNiGm<[?Gn1\P@gh$r<Eo)p#6ka'k8&.s(X`X31c-1TH%lpYC'!Wj7[M9'Yf\]b;^*@U`Dc?\f^11Jn(PIhgiQk)=tbSB.@4:]FWpP`B+q,gN]lYBf]%gR7s\ZC4M27B>9L1=S8ar8]R*lpdL%*A*a$YD:J8mr06]qg3@YKDDZT\Dq&/BMBKhL@!2'[VZE<R*3^`-u<KYe_:gG>o@2.D&B[OiEU^l#$)uoM_hf`D;l9[p)_,+IUOfX%7jG%Sc?7T6>AatQ0"6jdhg.[S\Q7(s@#U2B;&494`'opX?j9Lm2C,1R$Pt9M*Xfie.9A<P^jl&_&Jj6A9;XS;gK_n<0P<MjNmKB\%s3rD@*]n6t33`:c*$$II.bk5)=I?;*c*8$q/2&7"YZL0qjPuaDQ.'Y*+q#<VYW?F;.<1+fYPYo&\,i\eXprL_$uW2M(mSUVM*o'D%178D;4<C#B_p5!_=POW-O"NjJ!XlLjFe>$;Ca&Ahah-d\R"IE-Zh1A=`u0F[NIb"kOPPLdf5p->>/\G@otW2"3>`S56-jo3Y]:RV%m[T>`79kA!$=BFq6"qs=i4VP:"9sm5j'&RX;Wg.scl6^=Nj10,lE2EN>csD699L[^^7<=K[]ihT+X?NP/f!2E-<@'RY%p$rg)8dM%nq048#NCn&cjD47(^K)V'J:tIm!r2J`NA0J3sY1UCNMIE%WEk>2XL:U2ddVL`[p5E)(Bp_n82ELhm#81W_h)<bYTd%`dWR%jsZT$%cq'4l5/b*m"n.D'@DO2N2q1\`&Bd*(<fLg3kC"*-X7&#_OBYmRTKjcM$I?9DeB:*m)*>XbNrHFtSk(R_%DDC[9AGrA[:(MF#G)BA%XRR"nU2Y6FqJc$3IT*N`.Qlq",HRCU>fk2[m(`pp^m8C2O2t.<6aPpnmGS#PS?l_?gY$R)9Lo@@V@uk_H:-A2B"T*Y"+ps_=OE0m%*CF2AU"c=u""TPN)n;uLBC:@D#4B:\%?*r]h!0J0:Oj-5K/$^0JbR"S7@1LQeON7GJ5o@o%_IIX!F9+>7RsEO[I<;=$tVMe!t_/8%EZTU(A1U#C>K>?'KMTs=&Q*ZB[E%rr!t0h>At/tKElGuU(AB+0meF$s>_P#-Z_0+E$8YtTLi)]PX(g<*@75Q50pokAcp>ra\GK5M%%Ko;4SIHi#(?$Sm/:rG7$-""3['YC2.XT!9*`*RCh+=&;j`/jgBnu*k9\@WB.V)pp,S-XYOQIh`SUaj:qNAl*9KReQ+G)3:p_?F-%4Mp$Mf0%moGfN<4;ueVQh81-BTPC[ISeY1VFC>!5fsleS1$TEh9/0gFG"-=MFeV-5Cm]+\4_%L^el\*XfKr@6R_40&@7E?=b85%3%dfVjO"]r41('ZhIj:cnRE>^&L&2!UF=-"8]gUuTA+bMg-VlF_XC/s"%()JG(ps]>:"):aJ^@-'pBs)bK+b5=2g;(u7GgjG6K]P0C%dXE0/*[%R=",9@O!V=+LNYC#`CtKl-+=Jj(+rl.=JAV8@b9!m%'aWR;$Gt3X=,>bX)fmTu9k`n3O@9^94rb(H;;45dYRY=HC("8R%+@Dh6A&Wh.U_PTb@?(e$2A>\>SO%#ug_-?4al2)a9,Ym(O+IIg"mK2XFJ*la'obmk=WXMe44^YkiJ\k-;m3pc#WbE\d"He>e'JQ>%3Q;cZ!&u"sLJn4rnWMqhcc3@1nu+M.=([m+LBq;gQOQWmobB2AnN0kNoAo2`</g;VS?,g"#V['Hb/(0Ffe64@"(M?K>VrK'][Yk@%fP-H'e>NE/YUlHaVQ#;=A%Z4!'eap"<KB6E*c=8N(gs#?+Idq]4&DZQ8CmrCIPN\e-mTt=g_7J_WC(]'3md8c.ZacpeTibu(NWN6%4R@k;!-cI@+GB5s4:<nGU9$l3Bh;M@g]c/]IDnq2F(+:jW<bt*DIo7?2C'O1Hr,fWBE01EPm&:e0_\ZSJ7K`1^k%P!kWPU1$k%5g%K&O;"XFd`fMKnp$5g`)>bTAH\=Tj$5J]Fq7dDV\#jp6'ac2[s5p/nO7#:LOdSn'3n#4Oe4U)&49Ib,cP"'>R.-Q\]7S7TRSH"[A/%)5a1fCQB.2Om%DBB42c#9/%5A8!;I6QlkhmPW1uojq.S#ib"b`aF^;rD."."]'NfFBKLF((uB<gYQA"Ga5_(M+p:%o?<1</(^&'8%B>U"%%[K43f=cf-E?*/59U:Jf"A>G.prjJrLG^J`j8&a]Te?SSLB90ri)l'm#]dh66V#a&'@Xc=aT)A&"Bf6ud6$aU)NMQ"$dT_L%#nl)K+(/@!JJ"u7l%8/o>PO'H=?G^jNW=8cNscBT1Z:Qk=VrYK!8#72lRh&:d6uS4p)UrSaUS%Ii1e>lI?d`?2KD4F!9pHA^46ZC%+h`M'0Ie2uQ2=0ee1(AY$n70lfN%i%oV=&Lbg93'Qo4ZeP?4jW0gsH'`")(L=lO=L2bO--+"<G*1iiE/pgB1BjtgI4lA;:'$of=o%a?fe2p0$m;8&]Mk5bV('^h[DI,d=McJ8K-`#IrV3Z)E$[1l*\kdQ>>'2UNN=KM:fm2?&pU@7;n3n/Q'.3,k+NB`o-k3>m\&W1(q0%X$,F>Mnj+'L,gto>eTVdUO[2&5Y^[<6VH0r7iab.,\+MX#%9CIPqa*818m*U"X#]MfF1Esl\aN?Ue_:XL)2DN_2+FPU7Z)0T*Pf)%'`j]*:tUX'SR)05e]q@WpP06?Rq&*"]_'9L\/HCkoE5M8].pZ.&]GdE3EJls<0K=t8hJ%;-9$Q:mVnX)JHflL0NTA6Ve/iR(3CI;%?tu.n@^>9Em#N=O1%k['K-k^<D]%-fQMRV!6UX5fN'(M5@Y>s6Z8?HG8jak`9uKUR.*O1OWh>SYTbB.J9K(i`BS[7.\jjMR:9`DL%)&tV0`rY_S4\)V%F=L[&/+SBP(M;0Qf$TDgC#)Q3^B6gtF$Qj(iW=g!^B*(_)=iZo#SFY%I%\h*GE8-V;hd[Yq-1+00E?"V"?o#b%5SB49^b6u>T6N96*6F]*%n6\+l(maAaig,I/.>^<*Q<Rre!PFCDl.bR+s4]aQO!Zp$ijIbq:pPhSH%0X><cPmgj0_G@c%[Nn[ScW%4ugSJ)R>C0JYlr1,.JHO#^]u$%Nm01'MO?q7u"W#4Ump>>@Un<_q[B&LX3rV"#NjU3AjT^7E^4.#n2@2K7oQr+9b4=+p)4`XNi&C%j4BA#/En]!UUGCK`mZ&%49]j%=f)>sQlq\sNZHmch*#t0%Kh^N`53$A)X<-,XLN")$euE%f*oZ!b]majFu0uPceGsLW(Yj6d2fmI%_5!VN2:h?^$n!6g+ZZSXBl)O)^qq+X"'*0k[gYQdOqo_t"onmF'[\(/'%X7Zms%ed"9>Bu'E55[Ok*#C3(e`JF)aan=,cTn%%[^0%;iXuFejBX1K#:E#A@Xu[0]lI=+Su9OA))UG?lF,&d"5gtiOCsH$]GJ1c-.,o`q+annW5`Md`#r<m^[:CJ9Sj(ie:gL761Xh3t_;+%!-s@V,$HBKc5(K>Duk\Qf.n"5`1U&FeLu0m"#GjoK'SpdP[W8']LChNR<T,?PI*TS#/58+FQF:-5!%mIm"mk*RN!KiGlndWE/$b.%i=$nU>'GG4+i4@P0f8+GJQjc2Zs+)LGUoH`$JXL1Fk7$&E"#[lTFprR]NtYa6$f3#E.N.CkbN"=TH3l^pI)<&=MP:]j9cq_p:MO<%n1GiIa:)jeqI^T\%)F,,,Kqr0hpG&8=J$$,"Q.rY2ibBXUPcPq^n-[lKK!0Y,IlTl:EX%20b;o8_AU1WU"^E%@n$PQ3j:HVb&!G`%h-k-_1dm0Lk@kQ6D.XdTT(ih,+8IlMMLeO\&$Q2T+5"&oLae.HdGtd&ig?bM#UZFbj5B=0,`obF?C>$dOI$.\$&2/$2Jrs)79LK`%$t(tgZKNFWMN`Y<\IK/T^^71SMM/FR!=Pn=i7pk;?:<V.Fpp&n3(SF)Tn%(NA<FM*HfPaQ0eame/e8f8>/Dh8!J2)t1StB#\CM/[%$6lTmK$4W%!slNU4KD:r0T:Vp::5kTJ4O+6G#]53RZ/QCKkU_[LG5r*&T`sSX167b1BXr$\oEf,BV<ZT#.M[P_2^2]GZ)>O<T-+/%oJH9U"IE.)W90,4_sOX/^k`4LKQU$T26_C.^s;"u$3p#tp5(qO.8S!6`Qs<*a!1Qc:0`Z77Rr<m#>q.l#AaRQH/]YO(S7(XK#OZH%G%?g>Il\***&E85aZBbN=ssR`O$MWo%raPE!QlKG4;s]VR1EmH>Dut*;-]p6i(SlL#A:[JE,Zft+7/$@`qAWoq$KK3M#2a,5sBpf%jUY`,oF%M4<^:c,ES>]28ne1#a?b.f_acgp[Ac5G',cT#UUoY!ZNSQXo`lLub0pTG5V:bC(;uS%Fui$rrrjs8<QnFXSP$`LHL?;r%&C)3(>4-IfZ/XP%VY#g5.p[*AKfS&kLDT=qUJLe[Rgj$AF(;!R@M]Hb!Z2fQNI0XE%S23f+idEU@ONp$-P4K3(8s`G5m)ar^iAXu%AP$"qVX38&E*1M,1ecn;?jcd^"i0mmc?L!V%4J6N5;<!9FK?$C""028DJWU%G_/`d6nm=&/BKSSS1WY"@h%@g"7q4[@W\C28Rp\b%_r3-C"OuL$QCJ$NRp7T4gVe=`j;$haADrZ1\?67?PWT!MJ0I\[.'D01'kW1SSChOWGILa!\?8^G!#4iDK>ErU`aF[-'''Tt[Gd0t%8V_&3N0MAOAhYum3Pk[c]]_ot+AIT?d2hkh,.'TQgqXo-+k>Bc2rJ)_8-D<!-k)PF_4@F7X:=:PQ%W_d5CkZ]%U_C]/$E?60U$a)%cp:rsn4,4JiFm$E_oNCA-,F?D\3'=":Nlg1`R@(PZU8@0XDoW0d2oH/Cb6RK7(bo2&Cpu<$[>U78rJB>6aSn))C!&I1H%d#IY_2&%=tg(39GS*:M0&q]g'X9)#.ib'!7KdF&4'WI,o_odW62h@[L8$$0*/hV7UrbE!%)b>)tL<:rH;!nijDhb7%QruVUJ%Z)B9C"`!$..%^_7,4efT</WI'RbcRAO.Ba1qSoGo;9=$p0,dK*Um0k3a>7CWHVFF#YO@"jX9i^Dkb=PsBQ%5$i=$?Be3"]Y3RIAe7-QQa/(0ndod%e[=Hf@6sZ+@<<JF"!D<&`rKSfI92d6&&;kEr,HWW6['YfJG:un_mgFF_%>S1E.jVS"muE"8,)NKgYfd_'@;A)!<DT8QsQJf"1f5K%k+6^4$Y%[0h"XXo1:a[oA2b>8ZohSH_A=:#.(D)ZFNGI[Dt:X++3KTu!ICOJ%gQ%kL&8=G*U>U)i3,:oMu"2c;%Q(0L=CiqKu"1N%*7CB_@Y[(]rLeDOn0+QbJ0X=:EL/k@.q':A.qfsalPTDW8'2'e\_t&B^]AP^\k9:Q8e$Ir(EqM"Ga-sJ#Rh/0)mbj#MrH,$>S.$l%H&Hh(+lk2YG\BIo`de`l_MeKC;ee+_#=\qo/KuqU&:ajY%a>MdeI8fnQuT2uo<L%H",hogJTQDp3o11d+`Otso9lbK.,84noBF%.%!'e;EL^HC!VjJ;:S/s;$,#tTEd1_btcWtNJC!]st`l]7$WW!)PJjkql-WKWHLW]c*:GL5_nf?bOR]MHK\e`G`JaX$Uch-L"(;/sR%iqg.qcternkJ]lu.!QSU0)8rXkDEn%(PO]-$$S";!20J8$A\`Onj%j)`kZ"u%OD*gLf<1>6*;j60:p[D$+M]1**E7H$*/M%=7cp[%@?Df6#.FVTg,A."iX6/`b4goQ(tFJa``Zh/ES$#_KapeTbI^#?5QIa]#Gf/.b!%OF5co/IhNQ-[EEl(+^mJ%Sgc4m+i<F]a#KJM?%!kmL]:.P@40Mm-fk'*1M>(s&oLZ)G+JJ5hAUamhV_:U<Z#jF&$[%Oulk@t<=c\M6nQAepT80LmXD:_Q+Qc5$q\fR8"4Mn6qkL=k@%fMgKe%#kCRG*Zrh)h-Gi:Ah@)Vr9=!L)!4_gU6[qA0^5-M]!pfW/Mr34<D9=Dp2]l-s4BG,;cVkS3JtfMoQ\h<+Y"aZ%1&,j-4.,%@$j1]E%lsH,O1A<_$#Q9>)9^C@ekgV%%`\t15bDo-Br&3$f\^iSBUSZDoYs$!Da!H30!ej/1ZOFZ*$fWL#G0)8!O`e8HDb3*eqkS%86LV.#G[pacRoS^f,`&cUDO9]_*KdAa[M@]>gL7=)>)qL\YffG)+*N7*=-5D5]QjReu5K[Aed&a>Qh.B#+f4AUPm6&Y,<i+5[:PQ%"/$0t!?Nq8X6\^(_5M9k(;(bnL8O"'!dM2B?3DC(onSH#^qt@BF-G%&n[N2`GWai*\J3SQ#&I=]k8=9k!\>,'PEq0h`,rpX0ksoM%ho+k0TVrB^jZ[f7<uTWo:^.mp0*u,!q!J_1N&BKI<d6jh@?:WDXA[*knf2:rhmiMuZ4t+4=t=`=2T?Yn=dV<B&AA-S]=YRp;2Uos%a-n)+UNsu*&&[G\GVrS@D`fpn\oI5e<>mK->f9/mbS,A55k3K%q6TUPm'7a)I<%('V.>3A;^@3rGJst="Q1<?RZQ#>oF%n+-sS@G%.?6mVduj`F@#5R)6ko-HA89`sH[@Vc!!9JtYJ:/IhB"@0!#1C7_:("S3/B^a&#S32NgsMDi;[?3ZY_1(WXG9=UK(F46PDUjBu4\&%/Kt?1_/tXZ;'/=D!t^#hTZ@9i"Z8K2![Fjm4XRmu*<X)+&#a&XfJJ[j!t")s<X(hsrjmZ+/04">0"]Z..1?IaSAUEkE".ncY?nIP%WFm#ROXTSG`WX9R$DQ+p!d@j.JAGt#p-I+&;'c\W-n?66JGaCbr)5a``]*W'^GMFBD$2[BPF.F9=!Sm/='eK!<5A@8Cf%'b:B<Tm%L9.3R8R?[Y0JXb(\`+n$CYEJR!A?5bD$.S-ahU6AL1u3.]oQ0\T(Idt6QE1qJfP#aU-?sg5R%DFf5.0&=9,R]]GQrE4:;[^TGn>n%(GCf[iuSCmqb3i.7j&Zd=V=[J=51uQklt6-4'Xt4d]il+V^!>o!,4p"Tr^4^";L5cf*>'nFLpfA2q2dMq!:1i";HIW0_8@.!uTP1%(/'kn7Mf(9fUXCY^iTkV7*0WtSd^e+#`n"'UTl\@#q00MU]pLH#g[K&7ATs^fISj%(=tM9$29?1.Y+ol_V)nl7DXYJ0)K(A)!/YG%X9\I7oh)HKQNtMN<uS*t2tK?Yg)WNdj5A>EaT9P#)d$iW7`'h6e/lGR8.94QQKj)W_-i[Kb$$p4Cjn9WNhF.b.m_]:8@'?`A&6^Y%OLrnd?n4,8M@"SbUC@Hea#8g6/1bBsEbhm`B!B2P^aDh@LgV)jZ40h3lp/f%@tc@!";t)a'Hb^BEa1rJ))&Z]/@YG\8WKQa#k1(>%)Y^YB:tktMS9We6k/\5g/%0!=gI'G@U;^4I&&.]A3:O^fK'Vo=*/pR)CuQp?3B#BjML:L,>o"Ipgs#QO%!Wj8[P:/u1mHCX+?[Q-%[s1WH`XjlBJ"'ZX4ecfD!'=,?QQ=\P+GRJo>_<X@bja8D"`3LJ4[+Z7"5e-7gGSrO5VY_JM\gQ#A$Fua&aU)?NK85$Z's#Y#=\iJ%+b?)j_I+2lC&n]E/Dq%BBg0`Co%R`tFYi=g-_.I!JH7YcKX62_'T=ZKUmeW6JcU3((W+ikjX(s`*KgRe@H;uNpe=R5[frloHVU'2%Ik[g37d=TK$c3-V?TI/TB&bdW0N7(pe?nq[/t-U0&o28T?P=J\BG!dm)-umr4D]kf_/]SG=NN[o$.!rR>`4Xapum])gFuO<_2U04%Mt%VR$b#-UXM$c%07uUr"9q5'L7UtQk<tRnf1Y(Q!+=FhV#Q)L1@[HPKtEnV&YJ4>6,bfmAtnmIJ&8aHmQdQ*D4DiL^lX(,T,f%<%boAL1K&11.(;-ta4H7<k8l/o[i($7hB5@S$CE[gV%,$:g-KY>XJSGReL^+9#osS8A.qUl7W*<L_h@Yp&O^E>(:e(YAcD0ZFQO7nF%i&d6SJM#LP"=d.[B]8o7/lW5>$(+E:,j-Hk-IoRkr4ki']L@e7Kj0<5o)K7%KH>J0Nc>uR"``H=:MVpO+6EV.Sf(11rg<iFbS#qM%A_qu\)i.&]cRi1:P16:NPLoXd1\RV"nc1A=ec92bQ.b^\2ak.onf1n9>nN>8hX"Eph?q&_nHR+n3F,)+pDTF24hL%]Q,`B]F@F*5%b;h?eL7A\nesgnZZRW3U;#/(\+^-V\KY;raKiFNr3Gd'6Hbm8t.K0YNjtbOVT$1Oq<<=noN:sB,boFeFcc4b_*j`DQk&tSA1DCj/%NSEG2VXVBm!.ot]fRS-LRrd,T*d:4<-Dn;QKA.<Ae)>7@'*d1q$93tf!"TEA*OhIp):bQsY3?5doDmof8)$O=0[*W7BOs(JM30q2%6f8LmfGqQVgdj4ocS8+R#0.us1iT)A=n.dMJ5Kb16.+&bH/bID!1`n#W"Gra(gL#1bb9upK,9o1edh:'[^`IO016A+MR8k4b]q6f%R8Zf=$B-$SfrrIV_PlUJ/4))MHSM4:@fHf0$jk)DK["RVS/[Fqb`aIZ-\`.bO!8C54@%H?"6$PYA=:N*/%NLo-s%n,9@Yb<E<E1@%=*L.u',AD+XC"4u5bSW(A(H;`VT5utKOsNW8%tJd"tB`FmQJ0C#6u*#]++c*LSs4%+)p+d/fDtA:TC:81R(Q8c8_<N]>+mdq1FT5%cnLD*isXKA&M*<0YKfLcCpOETi5/2!%Yb%u=^!Qq1%)Di82P>i\qJJ6@m2RXB+N?gSj*S^1:%/DkS"2b2GlFl$5@!+2]l)Y+3\mk%+`Y"M:'>Oi1!gU,?<kq/8$?$t)5WH76X!/@_jE2rad(2,'3iYjkueGi70s\E6r&J&21sne-l$'^0%dC_E^JZ+n_?Af]?d;Bo2m/]%AR*p[k5>Sj7-Pqc7MZsS(WcC-0IrO8c?8UkKp=Se"SS)&dohE5!&RnJdp7ecIJ@"+!K^T0.dPO1P'EK.$toXJ)SPApP@SM/$AGl1%YD:+`j&&pS\[eA@nd?4V_)F'.)[mZojt7KfL)V@LJheYk$PiqO$#:#ZgQ)ZFKlaC$S4*;p@baXQ!e1nuAM_b5\2fAB<Ac?=I+ji@%g(4J?-B&kZ4<0b$NDomc_/<c?1!3UIOE`8.N1^0(a'10sYs6mu[#AT-N+b"k3NQU=YX6E8mnG)_+UN/CYc&F\I%#Ka=hV+/i\V9s%B(PlAM2,asPV#'h?8mPP(p,p1(i7Ji,7%"&-*M,g;h--DQf3IF1\:JJfs#4HgL.gu=@jl8D<Zcp1!pj,"n[+s;7^<](muB^6Bp#4%QllqZ9Mh#bcfLUH+iReON-`:UX`S%%q[$$4.YQA'=X.-=;`PS9dj5]!"_Mr33GhspP"[MioAhV6\q!%dlQD"g,*Q(e^?maeC:."a%j:T!s,gC"L\0A7Er<6O7DjE+3b)9jM,<&[<IRCj30\$Gm[<Wm]k>i3BfISSH$(-T/0co,S.h5C/%_eO_Ho/lTB:o=_V4T,)=eN!N%:Y4s=dsPj'3T3"A0kXW7]#B3c#hFr/0Fm7HR\66;jW/\,2V1=A=:D6uG`B.9JX,fg>0R)QY)'#&$)&DQ_`VFUZh\,$"F71cc<M3<%ZV(9n096R$'l8tn,/b)BiE@uRg,2)W^f?Yr?-FfI%$1[L![N>uN#nB*"hrD&)'D$'@a-!l*iRi;!9)=`IKH!mgppgMR04ElL..%I%+BQ)4`T;@>,dNF,G=f=mo=]pAj6\=Md7Q6R]iHg6e1+kV>;L!#,LSh3_k&qKf$'`.\ENA7+mad76)DG4Th-r:dh,j?!_fZcLdm&@%dj/nr=OH7<<N+7X%,Il')&@<t6Fga=SjeSj>S$ES5SK%V7'r8,"Ms]&L<VYYdZ3#m'Gi$QAP:u9WOVMXd+e1(U8I;"+C^BqT]qXN%JX99Z&N&\Ki(GSH%DjoblUoVp[#Oms_(7A.kbcgb5J9[q!%bo*$ZpQr%JXIk_@mCbqg&Sfg[7rS(rmqBe'"3H`7PitC^%#%Z!VVk%/fTEjbi,#C-GV\1"ZP*ZbQ-+BEAI,1@1fOUeW9oY&)W?Z_FPs))jDS_-6W]8NA2(X)lVd!10VnJZllcoM?X0<9`r)(mfmMm5u$9o%H&W(1E!Tg*75`7mT<nSqGPjpb%WC,i#L'A<O)>Dr),CeD<#J/1];`tMYd:n(Nn)-;,jU^^E>9+M>m:/^"HP>'S=Fbk^L8*#s6;qY%TtMK)]irsm=qA"f1`Vup0('E0XXRuiic;OMIor7"c<>c@-HLI7D^J>ioDgL'P,Ok<J;a+b9-7E)7?^s5:Y2l`&?$Zp>Dkp>Z`QdE%$@p"o10j-sRmSG\h!B24'B7\-kH$/sJO;Ycj,MlSfMKKmZXhXE_5t1`OPcga[LL3Hk.c)?^<F@t/+8r.;cF^PjZ(93<47>4-%j4^%i\fpR,^/!aG#8mch-@P8\-V$[ZpGt.Mo`8J$O=iU0+<o)$]bmA>G-m_,qGn;bCO@dE?DZR>i5^[*$(6,O=o-`0qKN4\-(raM4YV4%ggr<"^#G["`V<k<^ksB*VTK@P!$hdMM6=*lbkKr$;%VhCY.P$P(e/HrGbHaW$t-MXAZI\uZNJY]2d0&''ab3Q.*+O+D4c&lY.GVR%7hVK#J<mDXEENrem$ok3,N6bE&1kXX)"K`2q;>k(_mkSWBFa[<ACM)[Ra&?0HO:G!Ma4U;1:*@402E%_E5SUYI'$F0!.Q]\A(CLT%)/AT;$URku*/;j,Tn$!j^$OU?G:6=3fbfjORg<jJ-CqU9*6mh8W*-Kj(5:^QQrAe%F-\?>5#:BK\*O[tD'0:*\KVH@m;e#IZ`BT6%=(b:/[Aj>:2j"V^_nUIYO$h?IP:G@lCG3okaeZ_d2pE)9(F<IX$Kk^s)A!;?ru<"?NGp\CkeV:=AtS%ueln^`]@i<?jG(UB.FLp/%2n'Vobp?Gb]utb&\q&q2:Q#1hBpe/,Y[Y1*#.PN?74PC*fN^ST[,ZEjX+&=.ih-<a`J=NkE]u'@##(HY@PH#;Io+*]/bn.+13j3P%"=8g0J2JE^4U)qm^`NY)#-bms9\%0Cn3CTd(`hI""jC;tWJZTGHb/3a<a_G-3A4$FXh)Q!jj&J%O&NZ]XKCA2ni1UWJ0ji9%HbP[%7NO./DbMmU"$:,2-"erp<%NgL`T[ir&UY+Fh#U)lm)?b-`694:,Y/2:J-C.r(Rqm#,r)iN5ck0VY+q_h.7;jY/&:bhU0@m%pVA,M%RHA&?*j0&@JXSBMk(d15TEjGq0aO.'PNSC#SU&-]<+?\hY7XjY%4m60AQ1"$=>#3&"Y^JPC<U+YkS8mp[bS.PS57^])LP5]bSJm>%Wum^.mWWkT7,_Ffm$@NN1R&DcE#A:LYCn6]ncF4%%If;?[+nQ"fcAU,!P;a`,IK%Y;+.^nXqS=FOe>ZDI-d61m'='rAZI,Ek^Xro%bu2L)edZ;UM]K=FR^7^cMlWBW@P:hH(\ki_+l8!^Pc#B8^hAGS*/c>9!B?-Fn[(Oc!^HC9%j+jU!QGiCAD%<.1a-34/e,n5@T<G_%f=Fa3I:2@U@VZGYLc(W$%PUBGdtsDnL#iF7#9[LVLZMLi<aBmSW$0lRU,>DgS)E]k:[AaJoO3TH$aIrk.[+KSF/!Ue#['l+%5':7%CoWD=!?Hj76IAV*h12m6g]59%)-67El:r/^;+O7IY)gFH03ED(NJ057,9+T/D:;;kN3TcW7UNFM*"VR<JPZ_)o?C:U94QFn&Q!>o%`\`p*OVh!t^q$LKRcXZm:)@mQ\Tj-N"YK3i@aXKV4m2abL$&R&4N7.-ZWZQ"Qo+k'b,KV5l_T_RSD+?26n<GXeAB(=`:58?We8/$%(S!D/)*#=g<Mb"$=KI`E'o-tbXRHCS)[7EEj+<]9C!I:mb2X1?*F)J/)8O"G<5M^@%'4G(c=dA3m$*WK-?)6@3StQJT,$Wm/Y/)*%2>OB)gs[7VB\S)O^Bo6g^hkaVQU`ui%If&h2^)[X7.Y-NM+fHcF>:Lj5'!c9R+,0kN7KGR[#,2uEOqH^Pis=3j]f5B+8@\@:p5B`%-4_OEQKU$B\G159e0^Pq:"U9C=KH.6ORoK*>R]O2E%])RUA8WP@I=-*AL8pDiPTr6X8#2d(4O'[4Ys].]Ijtm=GI6b[)*Bg"F7fH%@2Zm"=AoDcD-)0i`'!B5XMPXQDgPlSEGUD2]"5,alaq9?dl^.eFuMQtZTei[Y$mVSn>AqXPIn\!ElF<)Rsj04VB_cmD.caD79GK0%.-mF\5LulT_:#GU`:6G,bonjN&]%o"Bua)=CE=&,'n9N#%5E`BV3o2Cj\A'jL92j6SeBcYlAqVXMk1-7;,%VIfrFrSqh/HJ6"Moo%;UZ1^6U@=[*0Atqn8$)Id%]MQWr@%ZE-3&JhKP/gi-+880;n23C+ROD\9H^U:Moo$^h4?uSi(DOX)g>!+qKVMFDnWh"t+kgY$.5e%YgLI8@PeMSHMPc9Y<7S5<1D+U[2Yec_n<l,16+</?;=R??2EonI04S$%p4q!(g+g.0[qMo^qK-tRi[+CrJDcXff-MHm'?.rg^K^k%m'#4A)*e[T'FF)//@OT!o7fcT,?A3r'f3d5c&1#^,!6B`S`por+:K%413tQq7Oq-$lYd`$-hOH)d:>+**nW_$bu^:UC;\kT@0l$W%nZ$jY'6jb:W*%kg"pJOP*Nlo&qJbK,h/%7=@@2^O+rKU.Eg,sBhi'3fJ?]5^bQ1Ua!>'L@N@SIu"CR>PmT#!!\Lfqf@B&0K9RE$V%aSR*FOJHAm@-1.m(`>0m>GT/">?Je<L+MK2p)^Ven%c[lP<ctUC.Vf5e7)r)?]A?"I*-R4Cj.Pr=H!9)AGr68LiT'2dBk/.(V,2-%Zb[nEo>WI*TFl!oMjS+a1m_=3#V9CU4.62>i@<BSj+]qba91")58X^R!^PRZ4]_esPWUfrXRa8oIdaWZR2]rF2DK"K@>^goV:GEa%cE]mf7j3:B*ZNT7ff,``JQT(.@5n>FI:&B4e$/oaY=9eJ]9]_s)g:+R.&7'.J?e*A9\=dq`[+Yt].OlE2Ah`ZTn.Jb$]^BMBSa"f%aq]kFXs?ehAWq=88G)Y:.@ZbZ/"cO7UV_PP(/5X[`<DVj335&F1rb^0rii=@qND[s6ZYs%.u+j(JmFqoAA!dko(pgebI@H[gKedP%&D9m`aOW@Vi(9aK+8i-@0^As!!kaHEr&PY6j-;JdVtDA!(&#L0JCqB4B^UWV.PV<=^d=f;)PpRDKL=R,e5rRh%i%?cq.`r_'`rY9%nHd>G&2U#n,!+AgZpPP(*TfE7Au,mQ+ZpCtS*r%tI=K$lQRa9t\'l91b/t2JTF8a$n*T<JZkMX2gH7'fiJ!(2CE;74_88>+"N;&j%S>`udp6H$#e[7>jn\k,gpjl;3d<VB"<%TkM"gDTf*D_b3-aR;e>)"o8`>*7N9E[J:ppOW/<f3ZYT>Q*d>i,,2,74u&$(M6Rb$:JK%C+k<3Kib.^13d3pQ!"To8lsL/[OjZ]W2p<0<u5rO@>5SMFMJB0laW%nM".b6iLC`X#(*a[X75qT?%'Nc+K\)]J1BPqE\WW(M'`RL%$/:-Lc'^8t>&D=e!1/'(K1s7k,3W##GOo80cB.&BMX*M0!m/e3lC336`ceI800>MO+=$I>_f=lM[DO8L,]/+(=kaNc%-A.cK5qk'%i_3M@JC8>I22-:sa6%,T2,_h-'5Lter@&SMCGO(lB//OuFL7&gSKJ5L+'Wm?Y6Ur?>_7\4:(+Z7#i&+cBoG`n/B@H\O<tcjqr-=R%"!($Se_`'N[9o4(,=Lk#NUR>WkK#G"k-Z3&)ur:#JZ$D:1-7SKG_3C`k,!!_bpsRpXjVQ_"CNsoob=NtL:V6qkJBVn2em&#'RcOf%J4F$7`\F;ogZF[-f`F,b?irkq%"L8f,,9"D"BQE#2d+WR&]WGT9_Yp"jh.m^?+(X+/8V-aT2WI%IpBs&Z9c2[^7_+3P+*Y/nMF`q%40tpdfU=")p5JbqUhVu+57VK$7U?m(f?;]K"d@)Nm5$"Z_6Os57"_TW9N@K2B"`&+%t<b4@^*Q/0!aKQ>fDg%58Ne[Ah4#C\lY]`%3&B]pD"bQqKQ;eWbom(W)OHn)Zs.DZ9o;DDcr_mu[>L<qi]t.Ra8s?<$>^,GC6q&Hg7oj!='7LXd52>P4_el?!J4T_=ttX=l+HMJ%\?0T`IUXA#S[*K'R^W=_K!JO0D;p'&$SH$IgLZokKUbeF0m5[B9-Xj'[bJ1rCcNnl1JP>B:h.ZNbZDVi!l\2EL;E]1d6"E@&6+Bf%N&Xnkqfu0k+E#Z.ZNO02%PtauPA7,*E#A#AMXYVG=iZEFQ#jo6j[G;fY#ogSUj["%ou-&_/$+e`$LJ%H/@ENJ!7DCYflFbR%b?MA%L<l8D]\=(AVFh\:KcM#eFos5U_R3&;L`:;DF"m*d*P<qEKV9tPfn'H\q-]A<!^?]Q=+i\PAeEdJ.iZLkoTD60\_X#=D33.7/rfh:%Gd0,BKjM9CF_jRbf@[sFUL2..Ill!DAqrdoO_66"22-t%U?n"UpQ'"FYp3N(e@XuL`9US[l^1E0JQ?e(r!@K!>Y^B=Ka4,+jXWF%%fhlKf=dHl<#V&2WWs3?A+C(2J"PZ<HlC0DA4g-a?8$m4:r.IUF96V_p(W'AC9n;aubu_N'27aX:,jU_tJls3GkAJ+o4@[bU'#R^$%8G!IhNM26\R2_1Mfqe>8dD70f<E!5.TTGAiY@uUrFIMNhCM5]SXBlcj46R'9Lpf`!g*GkpGLKp[)p+=bE"]Z<RLXUo9V^HF268br%HuDEUD$>0Y)k:Z2(mGbB@Ab_^Q`Mes!oQecWtsODO@66cHT1lX"kR-=G%b+so>";QeP>E<-%!aGF^)6]i@*=@OWKDkdY?gm+!F(g%"b=<9*oesQ`Z<.ElG>uUX/@28o$h$7g1j+s)sj\Q5E&AmV?S$I2X.H&!\=O_Ffbb,MP`oERVaa*i$+[Xij9abC`D%]E%&_u+eZa8%/6=;8QTqnui;;*one;(g+K['U>s;NYS1^Q;iU_*/>rX,7aW/rj=<Z'r$oL=Y[PiG<ZQ7[*(PIHBdo3>iGICcmbI6Inm&C7_mU-58%baJjR!(,%C_-UMU,d>C(Z&)F;];1[A0)-,ZDNM*jMGum1Ok=%RQ7J?28R/fQbDpdk/!&a87LQhB$J[B1<EJ4Uahi"B)-C$ROWXN)%edbnr!;hAu+9RsFJr2[/*./`9?<k/P<m"U@F-0*OfajiO!SN'e>HMet;g_K]c4<iYGV.UBB%,\tmqak$!gLS*j8t8sNl=IcG/(C;%)O>m7\^Ou^\O@oWSk^1-)q]ZB:"%+uiaH[g"D5!+$EJZ.q4K-]Z&fJFYql`Ipe6YP?oeP4f'Y]GR\"@b?!u<%HgK,gCW*gC/>JoS%?qXM@^!V8O(&DT%J.-UffPCb6Pp:-m:Nf#Ek&OQ=MrsEX&n-D"N,lCk#t&T_/SJKPTORUfZ[3"[\mn",o<g4iEsGCC*5o]E@#DQ#%)Se9"'CKFK*ek*\;AdQqja-6C@)=cFX/BYJ_rd>`,N0AtJQu0\/+kN<53:8ZM.f9@<!/?RXr]B2Fb7Y>[(N^1/E-m7?U=ZB;]O1G%+(4o-\nuj@>Kqm+W#'M]9k)!M(gYp&++eU%X(N'G@Loj*\[>-)J!dYi@ifHX="V.=rapg18h!KP1(Q-Ja?/8'Z;P([JKY1YZE58F%Z%5]*1D(DW4G<"BL:O-^;^:LL_RJ%I<dUUXp61m[CL.59<"1Zr9,m@-:eVgk4M''5)#[pT2A0gnX4<du:`I'7*Or=X9I9UTg><10%#'&/CKH.@0fMWF#J?f?r19`ERCZjtGi)t@b1kA[-!F3Q">H9MjF''#g$PRbsn)b']UO?*W)gL/U`N6sn2V2BaZk_;rR5p8BmktV:%lt(q'0jauchHeHLg!kaNp(t]pJ/X"$8`0[R3)DkA5<-R9>[oDhh8b9tR-oeg/]O1j:4'==2YLic@5<GP%Y8cWGDfbbBc-B2LVng$%#M+-/>+.VBFRK=d&%"CLe$mB#FTU4M3eOJ"@a0EWc3<C8ALo$c-C>,Bpb86OPe:,oLq"M+#M:LfNXJ=oDR=8gq%7Y+h1FWiTX*Tq%lb"u3PIW9q,U+06Np(o',Vptn6$,@t'e5BnPk:%hnV\iO*/#m+KG4Hr@%>d$!d*5Oa'o-YZWX%W4%jCM.Glfu!fO_Zp(fFGEm]N9%f5@pHDCQ)8&NJ.=j:BM6TQSm#1MVPS(f`H3!9"q:.MKPdku)/UW\J3:l@:rL)k[aI^">DTSsF1-`8NDFF>:0;7ke28F:fPbBYO.)%N@ar>3$H7%'3n;i'7L*mo"]gMc6bG&(OcTAc"SU(W`*hZ[^'C]!+5lWm'D3K_NS4fZ0h1B?cZh1B64"^ql!d2G81C"/!Pr^$<K[8%k$"Ab`fQq:XEV<-;W!/'fF4F"eQQ/rBUnBlpF>mUj&ro2\Dj%1qS#ZI6(GK;3-QMr6>p\o7F&h=RaYZ%hD/npAR6Xt[:T4\[*<n\%/,p`f@s^K0GYn-%[9N"]<fH&4N#dL+3j?NPmkqUmF5"^e!aBU_?4DJig[2W/H1GFYg@"6hPb:OqSa:m=S42eP#d"a_).D/LA.D5>%rWNX\MHnmN?"#SWqr33?(6=O41,GtE'B#XSb+<!U`Hd<'S>HhFd2Kpb1.S?&Aok3bGTWDRKg!3sY+U'P;kPF6RBYQ.&I`S#!7gSQ%9CX.[et=kK9QE7A&p%ccD4?.V]$).qpFuI"]*X).L&oN'@49,bA;u>.'8F*P7K`sodqK+jQb(;HfX#1:'-,b8/I>0['_ML]@Z(X#%nWo?=n4%u,Kam`\_l3\.E75rAG.;?u(NUNlC_$HU>$P]q%bnDZQCkuDm2D;8:si>:;uC03%>(u-%j!U?qBk2\i;cCUQGg3V%eIh8%iY'o3dOb#I7XGmg!`oe1NY`LO5^*NFh_>>a=?Bh'gM+^rAD`\n8A91m='&4WL`Pp.fX.o01a?!'AbS-I#d_o/fA/\r`KXcKEP_M&%ScOdcZaHQd!JlK<@cm;dbK,??@)1YHqg_V-2,e9a;-:(733EJD20^u6/eQG#3'e&WRL06LW&e*_c%UkHY>\[6O]W!)Am;?^O!]E3%q%tO*1-srin.igEm@/Ot$j:6#Z]-)j4W1m!Rc%#$)n*/E\g4E:Bu<ADiLM/?QcaqPA0BUVcMACtH8Sg^Ys;4l@BUR@_\EM`F5+rG%"9dG=hf_!iEl<1Tc-gJ9[d4(a%BF%pFf-0U)PQFs]c^mEC\A9p_&C+L==EAiQM-Qu*3L&/k+H&rhBeU7(Y39*13WgY3.hs:==(UF%"ULRbCk1kSY-t9<_K7Y[_0^d[0dLbnm0.:Ud+L.%\>(PdHaT-N-!mXcnrBcm,\P$\%K,>UZS**F@CTPkBuc`E?Y,ViB(h6rr&eb9%Fmg<Yq?7>!g_2l\i)8p@.geGC\;o[m<t-o]pIpXmqJUF(?i_%6/Z*9u15o0`VqhaMQkE*a&GND9jdF_fgSqM]oEdfhK$3tunVbf?%\]<5D_6ng:Tbqhk+tDVo2W94ogTQ.*[QpS>b&Y&hN+58P#0WsBkqddPEPFP^\MaUZfn$L28r@8C6YC:`7o9dYdGfJrLU>/LaNC:_%eJ=+Sln4j/<k5e=K?0jVXT%,Z(-N[>")6C"j9"4J+&n^dflD"R-":$Y;[mR0b:la&:>b\]2KnI7UTX<17>0!'a0dY'6j]AH\f&=n%lZ`ON)e"D$D7!B0!M@gBIok.eP@G4-ci=RCJnp!m5T)/N2!57IBV(j1`I+QM8mFY=@J4Yh>GX^Vd#5Mo[V]!Ke_+*,QP'E%WEig>%3HZIt#S4-H:'Qs+6]>dDh_'U;R!Ek/nh&B^d#I+$8#0k`C'(!HKK$DD(eChcj7\VUiZJb6Wrs]V\(+M!:`rcDPAmj8:iCQM#.2FY%(>HCF@W$bU$^3N\/Sm=YLl$_A9fJQ,!G\U)<ne>qJ5b+1`D.nc*M?L_i3iXLin\[(6)%)<NQZUL.V1\M\=83^8Z_RI*04[Kd7of-%&8auckB..4,@orS!*sFFD$1NTbUl<ed>'58\@p-bka^Fp@,Oe+2l.8LANCGL"]c#bZ?"i%FZ3%1V(mpp\KU0%n#In)*AA;=*shSi%iC$S_@C0An^n9+NLlktTghbiuUjI7hMK\2N,Bk["a17h3bn08LPXP"GTc:ZW?VEQ$k_J,3*Tts(Bmt_m#'."cRe5-D[<$X&4BDJS%4Ga:29EMW0_dZq#:;*'WDgct8//^21^E-,PSiK:g@eZG%DMpXo?$"%,mZ:7_R^3<LCU>dJTBBZu#;.1&j6@$V6KK-O=Y)eGWL:;_%e#[dZ>JmMmZJ!Qh3O9sE?+Q$>bgZPD4<1Y*%Tq:^Kb[?>qagU8d[6VPRPAJV/gG[+<2ec5:tAr?o.93Z7qC5KUM[7I-QBt]64r:9%*Zu$QhDYY3DLg%um#l53I7T$n+19dR3HFh#6YY>R*'.^K2+Q#r@b\;BPRZ._okLdYL%mWo2+8<02caGRZ#5CiZl@4!EO;f^=re]c%Bm#ds;t?`/mM9m26";"&-peb/pmKZLCmrUBI(3<Tco"(([YOODWRkpj^nC7Qn!h>X_UZWNr7[)]!g6#ss1$Wob$j0[3sDGF$N65#%f7j^j`b<Vam5EeiA6lC`75897EGaB-F'(k<%#[c]=O1_0)YfaU!,MM7ecafdMJ[-E6*;*%I*PKD/JNjLPDNG02K:<,cEt\#E3KfG%d4mi-Q,.OjAHF7&bm4kN]C)+La$=@Q6>MX$(bQlMFQ!;-S)WS=2!Nq'$u37)h-mVkgPBaMn[WDAN@P-3EP%/F?k8W;IAMat%4epC%28['?[W5.^;7@m/f(@^9S2%9S*qpK`6eG#?$EptZ&1sUaG+19re;bIB'np]0e=>t,@&M=bM_6R>$)$'bKY^9/"/q!Wm4'St\fuC.%g8G)b#(Ok<hnkU'93A7lKfnM9QX/>T=]KZJoa%_+Bg?cu!#n$:iTkdVbJHN[]'W:0+/!$19UmBjEk;:gL<2;JDP&Dj7(SX/VTp<+%0h#JGQtgk$ZZk,.b&/#OhSrgYHgKj+1FqcoCc[9"\CqHu/)4nV?fT$i*9CqlH6kqI.gLTYg/p7gr)[+]0AXbsA/DFQ$p#oW;Yau^%WWg=tr#VuB^`LjEe1]NuAK9p]^(0mZZ-=6SN4I!"8#oo<:h[7.pUl433ni`a;Ai)@@EF+k)2)WV`uXt48e3TYMo(E9A$h9C``\cG%-t@:Ea[-9')g&rElo:-#`Io]3V^FIQh%iDkp0+hU!RCh$b-#.)9%OpYlJ<0I9UFnqA.-S?6c[WjCkHT@!1^Y_'lCR@KVgf3r)h7b%\jssqZ[6P)j\#Q8%eK_p;(WDuDG9!68%A39>eUprhGZn)%F!c^Kg[9)!eX<#gRR]aTbEW4M?XOO?:Cr_/1]4)$^VhJ*(7XY"%#([%Fp!Y/4#U6mkc,[F+(BWO`+-A`(#:mjGfsN5&*,V8$O#9:`apt'+koH64_AX@mepXeLIp\V]"-#0l:qYO#_G6WU<]]s8$WSW*Hbh5%h\2?5g^@c"*_o<@eoJaQ2CNcC#6/2")C6&o/I'k10Ij@1DDT^KTuWmCXL9@3B%ES4N!IneM.m:iCk`9alSdOA?_WDIh%<5ok7^BG%lqqZ8$@n+q=Y0n7-eQ[rJ@2un(&>33P+:2H0Wm$68T4s=buBRO(:U_]"O)+qTqpp(<^[fuJeTpAb<pD(0j//,o5aDdYEISF=\FZZ%G#>/cVtA<DYK-?[mKmWoMlhue-<IF(;kNcod?1P4A&38ha4^45:1SlAUWuN:>GVWcmVu[u%qC$H`EldV3o$qGDhLLB&Ws&CDk#^;%PMi]2mptdt>n-u$W)oO^e^ZS4YTZF/>'@Lc2N$B%Sc]7-)<Y`V2S`B_jfWE_4[#TC__akb(Y7:uqhUMkg[S`j8:`6o_fo\D+KGc7%d373an=2J-:gKD)=+^t"+?%!S(P;TO2q%sEf(?StK)Mj&linrDp^u;1J:QE:0"Ht0F@Dj8LN\%B!JRZC*rBA5lY7(k&-TA^"U;=6%NuSqYPHuM!OruY/7+:mjXh2<7>W]m2_[VMc!an8oW-Ya.#.CeK,MRamErCeM>$N18?S#V-eu2<J#a1"FG$rXN8MrD=)?&X)Cs6G:%ZSee+'F2:M)e/.VLjb`fH#,C9%2322mD$f.Jq%e3\9"O!a"sMqJE*P;CH3fkf;4I4-K?Er_3B6>.H=)[*=b3sSI]7Hn7CPDm'(9V%Hf/))fbp5:0eBr1&Tk:I'TL*`(Ac\a.H^a4H<?H:gXR$/f1aVk)(1Ub.J#5O/>T?'h;++l4kM[)G75-+.St/q6CWDWdnl&I`k&/:%6h`PC;;f4Wk#,Bn]@nM!e,mE$Xr:HlQc?F4J%3ae'i]Ei1rNZN6mb0aC4<ss2@8)C*8$G1=p'k,h_ub[NLLnl4:tFP,aWqaT\3'E%VId;L"WjYriad6&OjuY+lt:V%Hc/9P,m!^6B\tO(#X4tZn3*-[)kYcc?o(G$*D:NbYN/T_NJ7*5<m>M%@d)Zh*LmXZ!S\$C^e<C=%_emc-7%>O5THhBo+ic/n9S$_JZ(b:I%ua94G-@D^Rq%V_o#);sGjQ8u=0S*(Zg?[*#p'm=gkTm]lG'Rk]1i^%Nga>fdFpKhVcXQT%Jmp"NZ(>(NR[;&grP[)dg)NrO]q&bd\`_(G%GZ]\,u9UcI[^?o8qOC(kXo=C\PPd@Zk,/5o=3d)!+#=dJ03MoYcjh61it=pcC(c@%]3=+[S&O_]8A<W"Rf;W)0j9NKh".)-eosc^Y0=f6ggml1.VX[Y)_8CPKN["?90:Uh$!,dHiYU1;XeZs;9afFQ]G;GR(^$jPAh6W_%H_d]q#!ZEf]/JFDcr6Kc:)"/,!,%hq_7,0C=puA&\s\AT2@WH5o*54'G7O\U(no*."&cfP[Oed9/llpXbZ?_Q0Jo\O#;-oL!d78\%/Fi<!)hE,CUGQA?k%_d&9\VDA_A-<LpXMWa^Kg%qVTUl5b,WuNk/3dn0!F[Zi9K7g,kfsYF+/>uMtRbA1)M_rF<5UOJL6hK2*mG2%m)'O&C^sps'"\\dId;A5fs/e/[T@+5f'D-`9MJmRZJjrW"(Hp@[ZsZO%QgkgO/EA+]DM+=Q>["T'>P=9f'SoJ7JTe%]7&G"_AN4!%A9r.KPsmZk%Lti5D?Luin&D0%0>ccs6;S%gBU\n)h&sS9S<]d,q9ilCKtDL9OQ=!jEcj?"e:'Mr?E,cSAOaQl2'%f:"U%JHD$P&;%7&!gX+ga%&l825^oI,GG@(;C6\ll,\4hB*W1U[fSZ>RL<J?h8]>^bMWH?\G%'DB&?Ur@(T7_d4n#/`I,/piU0rNJJ3[o4P-A\ogU%M\0Z@a0gb;Z)IeZJ:6h:dc%i*>U_5T2cq)(YDpp\?F^]!Tqc5-mSL3Xo)ma(n(nL.A2&ts"9nP`\lO-$Ipn4&Me:$^mY?Kl[n#s8%CfIa#bhJB4V66JZh5qj+VJ9Q7&L?BQ0%1NDK?(KQgJ$1c<n5#C@FXFP_.C--5$e$7\Z9@DSCgh\YBhG_ZA$4(TZmRk[W](1rKUJo%#p_(Lh:^/!V!3!i*r!j?JLM>VQl1nOGHbCBAb"aQ$9[pb>0SqmNOXphA"MIdBO8/aSs=YmjT<pj*[9ke=+npHgr7R[R^_+#e`LJT%Q9,P"[6.)>-uBne)nIba]5?&dh;/Y52k\?Ue_T69OO!f0>b&48O6+X;rtoVX4U4W<Ta')4nI[^gS`&GF$FF[PRaDss5)(IhT75M3%"q$<JEf=c^#&q1PDB.7\>[)Zes+$TYR8@_Urjc_#O9eiLfT<J.L:Gqte!,5Fq1<%a/u.!uK3lF0eg->6R31t!de\Pg!s1P<%9I#Q%X\%XW]G6hge*Zn:\=44VA/>ehf1GS@<niFM\i;SZgk[H3!"Ojj>f-ip/3Z"IZ4_Y%#0mQdl#$Q;F!T8M\X<]`#u9+VCY670T23JR%c1((,)jfYpR^=-\XU_m\[oa**%&Gt#$u9KLGU1o)*O_?kFTB@>TUJcb>=gej_/:ll=d2bt!,Mp-%m79P&^c762RP&:GX])lRZL']%)'aNKdn@&&XAn'C63pg"i@XiMCm56,d]P:(gRu*`VcujQp=<1s3-05Zbi.3i!Z'2p'5q1Jk%V-U91XN?;!b`Oen?Dleb]h^HVDMd%Ms$D<0@mbt]o*Z/*?-[K#%@#ggtaD,]/j>-W5-MF$l]+o/Rrk6me_mK03:e#_i[!oZqgK+g0TUTChLjug6<\3lF,'j$ea,U+S>sr%(2HsR%A.-d7r]ms'*k[PkY7g^$Pgj]&r_q"EMihWo3t.BW!Put)O+nnZ_kVON>]iJC0V5j,/EG0]Y1(MI(4:Z(01HAC;h<<36,`:%]K8(_X"bBEgB\Ou;,l`$36":t0d4?0CTM][N\2=<VU8oHOGdq8a0;']-+i!Cb8<XQgFPG=%h>"I"cRG*2)I=_]=tkec?'Z:^>O23%?/=)C\qMgZi@k=pTkQFM?#<0l?>ik-kR/+;7a#c&$s+>Yk'&6jY)Md';s/7d6ML>_o0n-;PHSW3p'l6#XjNg1k,J#kL!R05@C2Zi%]^#%C:<.clRp2.2;*q\&7J,+Js!WVY_"</Be$d@[7c5a,Z>pE#I"IfBMetAr0`+lRM<eBJrAHR*XWDF?A0)J]I,r2Q3N*bVj8ckf%J:Ni&%bq#%7Q`@K(aLWZ9Jlog]9b0E#%^No3)>;@Rp-EJBVp:(kp@)-FDh]a,3WFDHQA6ZCp(l367AU@`^\baYh7)$f/"ZS&0DkW%G"f@s22f"RgXSVXhR#U9lmS6\Ych\]Vc76\qCT0TZbAa7LV0[1m[oZN]6A_/.h).Z/3aYh20+mD5)cu,mDH)"6NR6$>(8*;b:\5Z%I"j6,LIKVrSC$X;%UaIaI#oe]@qBe<dSSQZHClI2T)Fe/Yr:O3.k&Nh)5l,Y3VLkDh4bj-ba!@,`IL$i&\F(?D65\"NN9Z">a_"=%Rl`_.hIc1s]ZO[JQ-WhNET+Ie1T'+cpuaAkQNVC&k2Do2X*"cu*U6MJ@6`h\mI"b(P=c3OFuP,_osE]Sm/F:;5=?(=b,"E)mntb$%mBJ!^[RT=T'o<bu#I!P>b`;.rl6q='TGp$(0\<@dXh.rUUeK?'AEW"@NhdR/GA'(oQc+WqFriGi/trA:gJbo;`aZ92dn7QcNk.+L%Y8cAQDFTea;bk4PmSJG'Z^r$/J1$2HQsmFpp>!s7Fs+(<-7g)V#2couhuORsH'[E1'Bk`u3\VW:!3Gd2_oA?'55XCZ;!?h?gBSng%al6X9qWaAMW[o:=LZ(^,9V6Q=f*&4G%]4m:etUo0b]D[F?0n;"\34k2p97ZSdF`"B2psB0Q)rQT-b-R[g]=,O[a;=^LYJHTO7oUM%0\F'F=]3>_B%M$=;4`,@Rc<&`Bem0b"LN.'p_rZ/pc+Vcda\?jC=cs'aZe;/SX""=Nn4D&?Mj+l@(mOVBpa!dP*^g\ioPKpjUa?(%k2_Xfe,o4Aat1GV<h&m=d:udY\6?db8qT+%"6C[Oe!75P0Lu:*EU@2uRSUq0#1KO;C;&BF!:`):RU@B#^0alTI"$(YY\gmQ*tT7N%.8k5ri7"O7eYE@afSc_eeL!9g4gf4^QJHPDiNsFK1uje8=7)+#hE:isS1JLTPT^EA@`R%biXOC\2iidG&t0%XZetAl'^t<2W1.$o%m-UO;4gRqC_g\3#Q0;b6N37diJ(42%#f"&<GU.&79WNls]3:hCbf]QM1u4+dcY=42oIL#f/:H;I^E4B0]"-J*fTjIiF:+de[i@.1%aJ<9`9O$G3^l#)7BfcupQur,u5?Fl:?%gmoeb.U5]#.eg/GA-=]ilS;Qnqj1)S:?<8BG0_k&R$gEL!$H-=L5MOh:KO!7p3t7q2qC%(=>$u`-?e4VF<CIZlbNp5E&tTKe-UT\3GS)m1dmXd1tdn9?Eme=I$1^_ku0"1-F?pE%qN>8p=3<li%:7cHUC7*G`H3T8,krd65(F%Vpc24$E3mW!ut*J56+?DU7KbL&rTE/'..bd0(1HJqS:YsQ>CEY4G-'PY$`GS.h6)R9Q`WErnmFpKh7:DbKg(hq&_*'+U@+2FTIn$%,bT-:U7\dIj[c[JH+;FC0T\gN=]TZH:N\N@Nl1nQk<np#%uHa1BBTfn`2Zs?=]q.!i8/N.mQG3eOW@%PU>\j;S"nI(W7C?fVL:\T%Q+-m9Ds1)FqMHl:hX&\.Z/ebiUA'u7gP#EdU,c>Wl0G)!3M=C=U(n9ueq)@A;.Vu=>U\?7HXuVLb(;*G3qPuH$FA`V[]88kZ!ch/%*]m%[.7%B0@hEqj<SIhZ^a.:-TJmQ%B(T'b(5X?SRSN<_IN*8^oTCDGI3Z*GJY9kf4K1d!:pKCNC>k6C',))iJ3/&r.h^5tKr@Ko%E=-^nONNcmlMBN*Q?O\m$k`IIlHP-%q+8"05uFO.*tAY`Ij/,nMB*if6SMW>`cXai!&N59p]G)!*KlJp%*^G<i'GuKUcea%N#ilb%>$EJkSD:+'No$NN/b;ML.m04rpn25u8kpn&.#J)c&0$>cSnaKj;%@1mU0P>1!BE0b-eW33_UPr)iA7>MSQ7-cC7`crR#teCB\=.B%9FC)oa!D<eX'S9+%=1klBkla(:D&*cK[>6HYb3d>dlno7;ask7Z>^h!8sQ5DhP&CcLIF[G.aob+_qHTp9W+fna&b7(]8'uAooZV$%D'uJjUD$'0"4S^i^b%kVJ`=lr+P=X;'r"=AB\:Yc=/C)I)-^4A+a@E675&aG+c0qR+ojE-*?pe8(3'be"/5gfk8G,1:s)NW)MiR4%S?`Wm?lfV5_Km83AbV8m:bX>_"TOhNT7RG+*:3=+Oa^NR#!!j64gPShnP!Rl%j</!V9)EaNhAF5Xh$3?Hb'oX>",4MHjWi:=ObZ1%.M&r_'!WhtDD&B#Ta*_J2QS&hhO?QE5:&_.jjd5\<#!m6bthbs=[IGQaIUFMALR7$SY%%>[W.%5T]"O.c#^op>S9(/'G?MJ*J4V$%!]?H<"h1e=]qQ+;Z"=7nB,R+.Jn78_4:"Qr&VQp?:e[S06;U<Rj@EE)9QL8m4;;8<XLQCY]"gN@%n,56MSQJ_#Y,AclkES<B6ppf%'G!+oTkE1bTs7fUC_Vu'E6qF%$PUV!9uL&;p/LBEoVYQ*n@>8/g$'Y1H8:_3agkS8C#L4kHF8W`&-Z.rK`d"'eGG7`aTD]`,d5t?%"ega+#!&@mFLVu8L$U!^/M^7M!+?&E2?m\_%_;b(_GKZ7bnoH+[A(`4:k@D*M*3\"RU@-F(bfGsPXR;K9P9WiZ3U3J[5S9+IDoa:%%V_",7*8BH4Mt%_41#l0Q`?3AJmM+9(MHDSZpLEOF,MEhI^L.(Q10%\&Ii2m99=q(pBbs_\I2Q+9KBR5*dZgk6>B4R`Uf'@gXR"e%6edVhGZ:&gT>ET:>"2d6.Z6n#_5=A9ot\#,:7u7U_K,j(TN4_k>AHY%MgQ)Ea&b1oUlifB&SK7K"LB%MU!@&L#K-NVr-Ff3YsZDl%[7H]dV0\h$p5k$Gmd*J'Q'Qqhdusi!@?h`,/f@'JNc^+_Y.S\mEB(>?C4Tnq/#\.lIB>8e+4XPj=JA'+M0tT?2*:b*F+^2N+nmuF%8=*mBoq!1g`JX\+OQ?0.5^EU#*R(VSQO4BQ<6R15XG%0A,as6s8gRcub&"GBH&*.!dqp;'`^5_`IRkdoM(be5j9\Y>X$sa/f/gh6%:\CS(@3]/mW386"LaGun43<6@Vp-=mJ35ul?PC7u$Hp\IhC>@p0G;d`WNh2I@R*40.LOS7[HL8QRQ4la6236]q'')n*8e>Q#M\fK%)>GcK#[%^5.O0$a&4cW1Q>,e-*U.Y"U.pZ"l3o7si*^Jd*e^":m$(=ekUacP`=X8.CEZtA<.F,27f?kj8..QeiL8>4"m:^O?@af`%8REDk:_WRo:/sRs\.7K0mRSVtj>eUYN.OYXI63[V;:pM%S9)biTi<1S/C[8YDHgZP!liJ.X/P9]1HE^/)9IG1Il(/=_grU/g0@Dm%RXru5'Qg4P33Rr7G)2Tg!l%^-6S9bHNprRC1Z]:=O)q*pVjS5`d)P,U,abl<Rcp06c\Se1HSb:_%T$k7kZh"rl_YplYODbu-47TJ%AKc=c%h.]%'1gJb-HT21)Ja"@`dRD?dj4,]Fp&gQ`YL^_I^Ib0*<(aX;.X&&HA!>+_a;GIi6f?t63;S$$-n?<#:*H6H%M?oV_CcK%BTEY3b:W(M\CrA<6_VKT.T"\lbH5A3T@AoZH)>[(821?1VKAe9:P1'k;/@%7O=gf/Db*sol6uAXFHR5$`ACJ2(VH&TK!:POb!]8^%[5P@f7M2arogBBF'?sVYAMSC-@r3;Rp2A<fdClGbR9Pj>IR;em6iV6F$Y>ES)Qco*/RTOL>!q4'K6)bi?bd.6Pme#`"F+>Im@[7M%pP_7R+\:DsS?d\<@B00Q[R$At22?b@=::0"(u!FHnZX^H76DW#CGs%;7+<"do_pU2eAG$0$M9cIe9@'OSnkHtRol/+*`]4-Tb3Zn%aCiVHp6r+WZCRc*,=FL&r`G%-H=S[!7!0-5JP`#_]?mHESbZOKNZ%p<18A7Gb\"eD&lR7f5Zh@=4k7gjZGVo;3=dTm(7N[G624^1%c5+X6D'0MVffZ%5>\9^lCikBL*0^dcO[8a_+rD73SG1O43qVfmfEJ9`_Uc;U1aWT*8&5t9i"-;\iOB7PCG^JUE$PU-e>O!243Dt^%L5AV+F_D$dO,?Qkq.4kV;n5VV#ncEd1M7cNYYfjA<A_Yc&JJW[,B54e/h^3^d;65]!@-&$4@T&'l%mj5Jl^-[F(<NMN_MY?gGGZP%.h/C19N\D;eh3VE$EuYD.P(AUjeW[V_]3:AGUC$V#u(g_i=Q0VT`\=g?<n?RGpM*G$N"@>>/Xc_D*XMOO;I,8JWjA&<,/`j5a\VG%KHBYWb$Fe&TLJogD@KKcj2pW8Tb%?Hl1H!o)7F(FC0;_!Fjr!dRT+`dT3K4qkQ7R:<C;fEQQp.AE3*uVm*MqOAo$f_-DILN.t[>*%LL(_+C)Ag>$2KJ<'9j5E8D;gu,>M1"6;38[TN\#DCD)m"+E!76(knssZ(N-Y.Kt8h$uG@i6PdW(BN6sP!&JWu4](t$q@=rT$]1u1%'La":PBRka<qpGu(UZ\cbd68b8@;.)^mL'fYMchu4aAETT_/oL#u89,2]dY(&>7Lmko5LEB\EU"a<sC]E>cCJj<lhHI#?C;2=ksS%PtTqqoo``lZUV2qUs+RnT&-ra+?1=)9W/8h8TbI4#Et^@&9$eD6jn+`W\PS(h""@3!&CH=Es;8l61J9`%%^unI:q6%d*UM+iKt%P%e^L-=9J"N=,2FD,etN5Fn/nM9r>gU\;\'>&(,;Vi#RaIp?A)JS.'s,o0P]$]=ai$a,/]p%*$JkRi$p31T2X'%1a11>PtIaS:IlL_%AjUQZl/MoUNUPi5:kYkQ(G.o]jS4jkU<@$GOP24dT9aB!)(&aiOL,c-WYac0$gQQMJ4?`-<"!.M.a`tOl`epXP4+iQQRim^=N);b%TZ_UJq(0,^O^BNl1Q4fu-pc"7Q%5K2O%%V@VC%"3e4V*99h%0&)1Ctt:/gHNCT'je,6>`lPM("-#=sF\Jb[q-7J7VL(L!ePeK7U'%5i)_,.5K&.:3f(!faN9;ME[VHkS?ID&T%g`F9Y>ckb;So%UqZ=4@@L"C2=eE`AY$?4UI/T$OcO0UrER0crYd/M3d;B#gdMS.OD7b%B]@"^#rRq%8,fgZ"AH&L_#QAi4'09iIqUX)aiJSFImGH_YY>=sl?Wa6d?9/&;Nfk1Y!W5+VY:GjoRL8K#*Y#ucaBKDLAWs!\!5C[%?oq8c<%%q""aEM$?>7:]lr8,Ja^N?u_To$(WnH=O7X.Fi4X<4D/=T#mS6h[^.fk&?),![4Ep^`D",0:K?n5m\O.&KNF_qIk6VCdJ%1Kkgi0nu8cf-X&2C;[]laZ!g`63^I"!me\-m5b"]>p:uD6S40+k(lpu+?W7t7'A9O&kNP5gj;]W9[o5&BLLY3"hGs:ht.2T22%@@%TsX7HK<]j(U]lj:3&Z!rV'GLYW"!kO*C_7[DAl?uRFNu's!PaEi?3sGg-XR-d:r!9I(@_D5erJQ^)8AN5g:eVN)P8e5Sqgo))=5A%Su)u&`VM:C##,*$kDofq$+)rf[a,"BqF/4#RY:pD&<;oTENT?DkS.Dol%R3Z!.&Q>4\$0nC2F`BWhd-)5;MP.j\u8h"7`U)\.M#=%o!ibC9naup\=B]AoI+Ehf7GPeXk6/H(,\Q:'cDR#fe"AVT!Gg;&XLL5DC8NhKs<(eJYb@\>Brt0D'?*Ql(U]#!Q$!$7$sVV<"RiX%T-mEm@(jjA[Lf5?V397<5!pj[A)/0&8ZJu:UHN]^m"sm6`Lrf-@UYurK$2VE3qt\8gHfRE7`B)i@qB([%b1D#$)24cFI=JO"uR2G%!g/%eCJXZ(ng!kX@OM"$.=;LW*t;gK2NjjIXgmr"$Ch5'E2k.PkW4.b\5`&sI2NdI,Io)#>hRJ:7+JS>@B\'+':`hsdJtR;AMLEu%cig*/*97gHWI_15W1JX9-.qX`JTCc?TKVGGPZm//_7W/6-"dpT&>Pms!M:fq($Z*`1?$l[*Ppl.Un<rJ#WVA5Dq9PW_)HGk=kAO0%gn(0IRL/_73<D^;32Icu8"bf?VohSG7D^-AWeA&ERbT;>TAW0^T@*KRNp)[[YuA<23RS=d0R9cA7#/8R+@30&";*jcG.o=mOT_9/%K!DW"1mnZj<]R`'#t)NT3c_?@FYt(-^"3,4rNh]kB81/B+F?WWUE5l<8sN@KAHS&9Tb.u!\ma5GfYuDsY!!M#7sAq'.CSYWbu<;=%4!cnd9PmJ!G'ICkM>SO0OjVZg<@gKF&DG'f_EeH#nUNoO"0HWfn(SPG$,.bI%<Z07!`U&tNbEso+?^%BRpcVmU*YL>Rr+j#&C?[s%KCfo:MW.H*,=W48:10,a6!9q"=L1JZE[m=p*aKfB*jQlPnn&0WN3"!+#!HFA>3M'/;,9PV@Y]iA<YWLuQ;-WN+s#jAlp"slRc)&h%Jlo<>oG!9!#XQG&X5Bft@:dtM9MhH+gcHeF.ZbdKm4UAL8:o2sL2nC=1[088h^D`kj<]nN-%>:8'bT:F%1uFY@)F0#IO_!joZW=r%7Y_%#/qmhfZ?(V'g(S17JSQlu1A8XQe@Fl1A!(PYb]]^PDON-O@hq<\BQ_U6)t0&-,!FY9H-C@C6REuZK;:L/b2a<_`?g@Y^rdtD%`eK1h#9j.i^&ea-.(NpS+co5q.#o!f6\1Yq\I:2s:.Dqu:A[3fS*24L$+I,D$aP:4B2UH)Ha]@PPeT4h6$3t>p#T,F;&X(1ha)-7%JW43,+EXOhcmUA1p/@?OL!?rTI:.p:6T<WJ9SefS\;#GJ\TE]4CCs]?K%"sA$hkD_S!l'gVIiV;gdA^Vj&H>P6(#ekd%);+/W>K8%$N*X#A>fjX+EU"j%D1XS57Goj;$)\reWi1+D6m8&m"[oCReBjaNiF<ATL&Yl2>U<+Y."V$U^2Zi%hBJNd88apjNLHDTab>Ui?Y<]%<,Daki#Moo@4f#\c"lJDotst90]&Hn%^0iMeu`O'AsDl?Stml27Hd#%,&7W:3JsQc*8/WZm,WN%`8P$V&9=rW/0A19VqLB9KVG-b%2-jpK65A^PB8Y1B*af./<Vd[eAr&*S_[MAO"!Q4C(-">W-C#(jR3\Uqm+g%oe+[B:k#QJqXreN#_$\kh#qbS%\0&O]q.kQq3C2I7%,"`k$jA6*I@?S/1<FjsPWmOiq>7<["LSmdbVPoa1&2<I00qE(5EA4OF_Ju3pWs^OSn3>B&.-jM1:7(&W5&95+\Z8l30+lnEBg<jg%X?fY1<4UYS>>h7X_ORUp7n:&XH5JUcGZlMK#9G9R?_O!]h.l_F89fYk4Z#5ULk7mk;Y&=7JqXkPf`@Q.W!K+oZ9-NNUKCR%?**.=%Ck+dt#N2"HHLE$'WDsO"o+T#8If^Y;1-0(k=q,PTo0\rt$"::f^!ghpS^p[RVP^5ucnaM`\m/,8lTdO3G+Ct:6f%n$]:<YQM&GZB%*Ahh,N%IpZ2Sake"@Jp?O`3pQ.]Pbtc]n_?(e0+bC>=f"g9V`E>QuLZ?%hDMI:iVs$Gh\OQP#dQ&">'1[@XLZkL9lI:p)'r+9:<l%A9b*uO,(tSra#j4!b+pIg5?#:>+LNh41<9#.K]"&8&.EJ9lEjFATEHPYp"OpE%U6&aefW8/\+DTNoJ#!EWl4'>W(>2Se7!:kaM>s%cdo=qCo]IQ^mqK]lsS0aCFP$jbbsq]e.]()3GKVt5\C/rr:GA5V@hbl:uiuSdd,q]RMO58V'>"edsK5;\M)AZ<sfWJ[[(LNi.qFF%KeU!u;M"2VQ)]0PP35WB>.c]2OYbS@-dRsQJ3iKPNi#[0bGLE"%'C73XEmStN<GFK\2<Rj+W:b,$Y4PZ=up+`].2NcbqU.?cUOl"%E[s*tZ`=`_-SMgE^8$7rT/J-D;FLr'Xd+A;++t!f7V`pL;/ma_N<2dq:!m!-/ac0t;6Cm5j&R3pb>>>nNgAJ1^0759cnfL#kfqMO%Y0[H'Kg`d_^()u/l'mkkn-F<6M4lF+\^@7uZ:%Us.+S#IAuVuml(CRE`d%i/CX/?*!sO^VZtrC,7I-Fo-VS<hn;W"GD]1*`R)0W7%YK6[KiL5i0C/N/_)pHc,#I-mUkSnhkLJD;K1:Cd,7uE+!)Pgi$1_\)C&0pqN368dDdPGQc-;R=P%GD2i:>#W2947?;(Xs=KJJ%0P%Bq?!NN?hmpR2*d99JaPiUQH/DShWCl`j3LR32L0o#)-44a^YsfcD<j+Pat:2!T]@lpT+ZL[dVkXOcu&u2j&8@Xk!dP;k]^NMhK;;%(%-%]Bi#LjBh_Cmr`8!Gfp'o/Bk:hl!X5-8mTkAFPYQ0dlQ)73OZ\];P:!7U2PoGV>>['GbSB&$5nlgm"ZdRH1Z_UW4PgQM']kQ!%23K+@=ocp'(m(#C=+iW@YF2'M`Mj6hNZ^4\/K'W_&Z89&W*e.F9gXsMJ^XsDF:',;:6^*`KQ\RT1PK[Ek@*F?h9iTk;qYlbj><+D%(.ZB&E`ocp$nA`;g*bNoKO$/=^2+O78a.@lVe_B`dtNi=bS;#`Dak0:ZX*o*Z(3V2Z$%lC<Ehe_)r@h*nKV=_i&Q\-)MA6)E2f(U%rc^1VpF?1FT-<_6g)utVRXoSFJG)HhZkYr2YZITp3=6_bC'=s7r?K2NA:=Yifokgg@0op]R6#K8+l,\Ir,t`jQ2DiB!SZ[XTPC]=%k1@k&'N1ub-q'GIm?rEY.!4%8l0Y/;L<L#q;:W!L(>H<>cslATrWIJE-qL$K],-A'">d)tj4&0]X96p<;7dA&Zhd]g0P#*^Xu'E#%AN`sfGXjoiVenilS5<$PcHrdMdBOYB%bNC)5hR3Dad2Z/kURe2LPcFlJ9'\d$MO5d&lD4LPWNi0Ei0[9oU$de(WaUWFmqZ&]du9[%:jZW7]2\1l[^+\IahtFk%9oVCT6bD1L-aLC:p=He6AU@/L-?&L.#Xh`d@cfY<73J>E4pmr7qUN+MElaWO[:6A!Jo8sM$SosK.J1q%+nNKE4*Cl%.iPK'aMI.IfXr*M)!-unFWDb%o\u$eP$u>TlA'%fTKt>3pH]fsYfJLl1g%S0b[rl[pYDX';33=g2cLjb5R:!nW19+j%=rQELF4F`q7T?5h@QL;TjcmeL^s4pKJdF8o611:`s(n;F,iFE3#^.g=F%&m];;5iedq,@R8YXT6Vlq,O#=:r5!b#X3R3X8&>`):0%XC3O,]gbm=K#!Usl.^<cF:+&8Qr.6HZC3&M=stDMU'[rO\-mr+k6QX-,Bl).L+e,;gAq%h@]Qs\Ih2nFMQe&"`sGF;<=GRuGD6P1%g4!QK"A1QMI&>"jNhQpn)6u]`N^>Q_df.E]Fo*0_Ob#YFRb[)7+qHt%W1?92+T\XdZusSW7F\L.A7j:g,R5bMA\cuRRIWC@`C:65%"^M%?G#1'DNGp"*kLhAcZtOal1?k3@i91OYFT\`blGf6EJVg+&PWEAKT]BP9'q;>(Y:-R&P<c@5/Wnb;+RiS^Tofc(&m@LE<t8rq%9S.Hu!>8$YT0kIQWZ-%(_)BY*r1YL7[7fEc#nleo#ULqV%%=fH\0ID+P$R.I/DZ?9O4U1bf$T-iO>dI]]<6@2&0dZA"jT%m0P[Be%o`V@qcOZ6D5ncLQ_oq.MQnb"NOUtMdOJ0i7Z\"<Uo8<4J!pNS#Gg!6!F?^".?F9/:n.7uQW'\aF_BGs+>[(rW4rc<`<l,n\@?[Jb%8jc'0"+1G^_&8E[FQ@_c5+s="^"C2`egcc4;h.a9!nS%_l]*GBL_t9Z!rf-!)MMWI%BcgE)iEf$03>ZcLGDg.+q0L3@35nUUhgnp%H&98Dn]e#U\=1(+S#q<,&K0trA_5@><V6P-3puZsD;>[CaTj9sXa!+9-(PhdmgGK2;*YfY5lI6S3fsF'n[)4.=i*XuKl.f_ehH+1%+"4`oZEq>I"2gt4%#(PrT"S+0k(Q3+Y7nGVG4qpp-HAa5`=R`:.$i:k-tra2e/DXkelDZNMn"kYYIimJnN&=ZJRNOO_,7@MFOHRf%4ge%2FqN"2e:d%0RcRdWFi*(A1@nG$,>=@r@K3p9Lif[)eN*b@1&sb7JRJmR^6XF%h,4G/'a21I7WBL.F]ETUSq,E"7*GOTJOqol%&.&oLEG3-_jL#-$"c)<eLl+E[+jmIn)p,dlR+,,*TZV-rR+9).S9,K'LG5Dd(JA?,kpK!s<edNZYfE#LAYb:%FRUHr7(EFpBM1'B%$:2`g1E\OJd5=[K+g&YB4Y990T['IK%U;gj,\G663#0/@W`d.J\e/.@@Fl["BW1@G*R_-*!_#Ka`-IML1i66B:%D0dJ/)cR1po!K%KbIKS*,*`pT9m1t'N4!l&MqmWE:f_2e6YF43DnF)q(gWjL^"-b'=<=$"hG_c/o\L,`1#Y;km$\cn.<`8Ad%5jJ,+W2:[m<70tUt-%rs],LV5I:J`p]lqfs@N!:d[iUGG58D&dUf88hYDVkogY3e>$nZD+^41F`dd+Cac1,0]T^d3N8F-r2B?i0t6jnUg/2_.!Djll>'WE%l=Hbp4e!T%$W*Y?Ur49bQu(F%=-!dA9_Y0`%cX@S%5G)e?sl:</CH[%.4jiY/4O&pde=N*2&QjVRtb'CKQ$npn'k#:f,IF!as4S2%=e#/kk--L:N&/78Si+.B%\XEXSdb"FV?uWXTg8m:3WWc+,"c^.gDF?V3+$c#1sZF]V`@]=O`7ofo7_:uTpbu$idaX&%pPasounHs%a>m"7n5SCUKn>m?:Yed?PSWDN6M?#j5j6UAHCRME9L@Zh1L8/[C1(Q\.C1Sd8!#)4`.I"O:4s50>e('X$cjpB50tf'V^.m:V*g'9%.`dq;,%W'YLN0ACo+Rssc3O/nKmPT&$I$%l/XoqkOfCt^=pbrGUWkhdoeRdQTd;jrpJ&gI%K>oQe4sf(!i'mpQ*$OIWPK8qWfZ+o%N)C/kXQKF+CX+ghV3FALjM'9!mp/@6""9p^!Heq_aKoVL3&B:+#i*l3666,)&R6<$'rJ&Ve%c+:S0nt%pd]Kt&^!)_"<ql_8^!E1%VP8PDJIUC(M71_2rZ%UoQFYNO:^G@(UX]a_7>1is#t>4(KoV\2_LJ]WBqk#a=0"WXT^@V-JJ[r-c-6FrEJ^LpQA3g'EKiGXGJN8^%BkZ_tSP]cIjGWjHlq`@t0*F'AQ>UtOZNP=1.9`sc66qGH/LA-a<&Ii-C+GiX9<h#1ToJ'CS-RJWW-G)`e=oYBcb<I7l5Fpd\k'F2%Ib!Wn!A=!cbD6\7L*S,-:DGn]#_]L<+J`2O9n]NfD-]Gi32&F7_49bIUI_Djmg;OJP@HLa%T&?%l0h&N>r,(_(A1Zl$@L(ef8doW%;b`)k,N<mN7MU>QL6N\?!98M]a2d`r/5ZsDB/j_K;!*;!qQ?irOJnr1K.ULrU])sgiLu!2GCF0"2gs2KjXk7V"Xc/Tj[<e./lcK,%_Z;VmE<RLh>Lb%,_WYa1X',$i+]-<T3g(Y.1pGhPrsJj]VZk[$VG_Y/'2XAGRuj<3&<PMOZiUf9Vh(q?Oc6"Z>Lp>"DM/P;"Y:Z.%^6YRS-@df^f`hkC6UYLY9j/.E9_E6fcu>Wn4QDr+Up*(!/7<7iF0i"FSV`mmG#9""1kS8^3a7ia^$liG%?rDiCcd#lFNeI'*=YFk%4OCfMPGpkYk\(*OPQiiXg[+"GaVj,B4Z*lK+D667:UYi&[[oU<:)<NTFI92s;?lr5X.Wb)\u3d[\oRri4N/^bD,P6eC-C/O%1C*c%-?a&T^qgL4(:j$iGSgm%Y]7"ug-NEHgB2j?JbS@CQB>H^h8Z.f,pZf,4S`0CWsM.;NZKCnTqcKQ\#FN"U-Sd:,!\)%'$E*'$F#@V%-g9">BMf2@rJ^<68>2%4piI1_$Eha8;-R_],,&QL*uc>s'PqmXTMSufD0V_uRQ=:[Ap_MkRT&Pn$kpbikh><DOK_X=WHD_8UEI8%%::4G&[LT$_^+-/e.)>)-7-Ou";^`*W9Sl1QZ-gWe<l76r)MUD7/FC>\V6CkW8fb`p=/1EM?aV2XenaZ7cP<%2p]eR$=[#:eU8A6&%>;?7j#]rU'-mJ^STrKtL"ch(jTn7m)#TQ385>\m6T0/j$k,:.g!`S&;3l[D0O(e12jEVs?jb7Ga@;gi1!?.i.3FrJG%4U9hFqcCK%<?ZBC%d4tNoqGh$5r=I5L`.1#\:IgJKs+?@jb`T1?n?'#UZ2=5!@XDZ"^n74ct6EnKJU"7+DjTf5t7gd)9dZSA79hG-nH9A1]2<i%D$33.j@Yss)16=f.LV-g,Pm/6&l![B*M"5fQ'rJP7G/fqi<oDAoFj]hG(f-h-h>q8XfF=/$(iNos)Lhr<`&W'9VkQRfUWK'&RK%$%khcrYO<*;0@ja*S]V>pAG0)4_VE0a-#7X>i*HLCSe[mH19(Wj%G'ug_<^5sTQ/Jc"Eb!`+rK[Fg#K`,MC/i,;\UK4ORoP6LV/305%3AAt+\']XlB:n=KXAI$'R*<poN\Ym#MfQnT)bNQ!f`r\,TrtrJb`[Mk*&g]-F_kU_cu'6/%<Q`:F>Q]YOU.(2aJ"]f%gp,F=G.G.%"h=sW@=i=Y1'F8>-LK_R,k2RLf?Si09GP,'WP^A>e>21-MKT9*#bfQ5SJOWSJ6l6Rk:r?q!a!A!Lio")j-KEW]FKNhR0]hVnX@NW%Yn1NG)(B[&[X0?)K"PFBbK?[qqaBq>TMLW./c39(?n9]#Z4Y)_(^q+Y/,8I-S85*JmGVt^3)VU>?u0hIoMGc6)CU*BPUAMc,$H5\%bXTanfn.UG9m&K_OYt2h-jF5"*L[nrRL6m(X@22g$S8n(D:)Ju1fU#4iXX]a.4lmu8i'Jk[>LZ^'.\]#SU7Hn[8;k(b>\"HBQ6OL%L!AkNjos[OYR(14cde0td5Pd%l/`8)"t%133C@uUXWf&[!fEq09]R#n0"[6$l&#@7KX)b\D[(6=QEu@LQ$^_cAnh<81bYUDThbto%"1&/7fokH2fKjE08s)Tk'E4O7h$1DPKo7i>VCtaIatG259XC3s\o'%?)aS=A>Tg*3*1B\L$EN`.=#!c%Q.K#s,=!sm$4[egAW39*%!2F?WFTff2E2(DZP9?<Vh9\RpW*KOu[!:p9r.K9eJdKl'8^E9/;9E:"P+!.)Kg8p6(.ai_q?H.`.$+a4]S4q?k))*_T+m;1W]_Bi%E:Q9TmgqAaFcT)>J:2ZNlWL_Gl+\IN4hVhBh/9>mmg6/8/lJrbl+)m7mMs"g.lbudPRl%8G4$!n#&n4jA4**J5o:)7[>U;g2,Vs:%,+GR/;mZc+En1j1OK0g2VATU2m@#'>Crc1ZPZ[$(kc^S5L8Gh5%o(dm`MPEpHpM/<(,#qA[5?$gK%AE!_aMR=5+kk)b"c@`adio]%?F&2(jVZfCRM97YfQcSp%R4JqoJ8Sfh]WVtOq=#FeBg\m@pi\doTE(K7H=]kRUq8],n0&"YL.0]@on28);^)`N^l6"!HAA2Ttb>m%c#JDF5k]g?LJjsIK]+a07VJYI6_.'$L3BCbYlZX-1oQ5!F=-hBcGR)B/-]Y=WC,__F.I@-,_4W?;$iJBkR88Z?JW#ZSn>*),]9S&%mgp!e&V3;o3;QhV.pSk^OG1^76/E_oYAp!F^Hr&iRF5?:2BbW_Q)Cct+"\_R6cr<uUPC4=WqFLG*uTkl.=fk%SgZmoBoY-!`PP15%,flQ\<k<[c67:tqjXdKKn6A*@RDLcaUdFF:`%>4VLfrt?qo\*Z$Tr295i)Z=@`?rV&>8i0=3F:&Y?$ac[SRHil;!T/A#qdJLGFgI%(kmmn@9ITpe2Y<@J=_Fpg#7L!GrZu*@$hp<iMt*['`7.B,FH>chh:!"O32K/Y*4;>PhtL(oKZ[3lB\F:l\lYc4!:VAka!9X:*^Vf%da3V\Am-$.h)4(n[#\s[/qriB$jCm_?'!'l6>S[FN8etL>^brG,%5M9$3ha:jYOgU;"SCo4eZ<'5Jh^:abX,qdQm[D3nt';W)E@(%lm=t;6C+)$3PuV-8M&\.E[Z%EG/DlgP\EiA(A>#"$):=[L-d@VB3O!oG00m*?4)A5MB=:sTpCVR([*/80CN>W(hH`B/'B.nio8TY%:KuK<aa>:cUVMGHnYDR>6#]V[*mS:JmmP-L0VI#i;ZNtWM6&kR"mEp"K4e]"\!>$2W2G:C7TW$^M>l2UE^5PDDA0`^4VnI_h1Q1n%PC&NYdBo<iQ2%@?3&\-2eQij"CGhUY*j:N[VMp]c$MFF0Z;Jf-H'0]IFJ-G'4U^t*a@RoWXR)UNk%mNjWaG8'b:;8pb`Gfu1ZI>3%7T5C&d;C'p.P.6(Uku!OA7f^?>&n5NfN=l1</&[%_CQ?WL3fe;]@)J&FQ7D'6Ho[r"gn1U\'Jl+.fb7I[\1*%6%@HqLGNSC/0IM*%'l>YIh.Z^!n@(,=]i]"Cd=+Ye0X%-\+^\f6dB'49`_%"DG`)Vn6!8`"]Tuu95lnG9K-K*-St:u??AHgDhi,ZRn#BaD/]%P:(GG[n%l#S6!%YI0"?3deu;q0$g<*M^D[KZkeqZ,"E`57=*d,Y<MS48O5i>/,$"V!pr#_Bl]pC5YgYS\5Re%jpn<"b*1P:!fgCR%/p2PNC\%-<F`RTqg.oBQ`$SU6Ao!Pj2fb>ushNj!:k)F^R9*.-4K_!'Q#ZZ@FCc1A$$uSH:\*Uh6]j[t6ZGp*[bVdUI/PnRP086m4<qEob=:%P4N/k^IQmO84Gg9YI;ZcY8T\@6YU#j[[;W[M[nhc@<YkA+H,XKmO?M;;CB7t-#hL7G3F`:ZrSbE+Z9!oCDL5k5_c?Hq_dt=^LRl:%@m]NCcI@m!d!(P8$c,#8/R`%SjbS[a2b/6G';IWY##hB<C.=UBOCo3CM0$Q^np>dX19AM*Bs?!e);*ECjD629d%J"&!8(:?AQ0NM%@q]bOC%*#H'ObZo_XK6;+Hp3?@"f8hlj,"E[m2B&26tTK_GX2Z6\Ip,99Dc"#C!!&1fFr^l-\R9Ar:[RpZU:b;p8sknOTe*RV8EF%L4X'h_7DnU5WYj-.2H5,;7=UQ/]^XRjAVOi'C&>VOk!0c!5OhAX7.=+omoMHJ>sjVW[ApY!\Z^$*H%a_P;X;Hr;l2<<g[MF,.9jG%S;^[-1eWF9V!?Rc<7B^'K,oNM"e4*lOl?ri%ednRUW?cc[5l@OH1EpDU!R%5plQPWT\)LsYehk<F'5[X6G_2AOe"`cp(1E'!`t(<%gSib%X$2^=C>g/.Y7S2lo.*IABpG%F1L<k?k_;!SSt5U@WChbn6YKL4#;mMWP-YD+aJI%IF4VG,>NdkWr+P3?MUY#VXu.M%f+s#p%Hd,4>JL2>h(JE6QYh(GkBt2Wo:B=oc)+2i3@tJM%g5&Yu`/Z+V'pP<W,XYBT=M/5!5tlo_s*9.F@:jj-73tam%bjo;_8t9OH_\G/%+IOBDf8+/_OtkHo$>LMSIRLH=!H<ZZ]ZdGWi<[sb(%c<cCKs=IFo!R9BpemUodY'k9MfI*b$^V`RS`@!dEGpqiRX7C]uu/G@O:IU%]&[l+ntVR&ph>g*-4eaP1TG0d9Te+W+cWWZO*_1QFPDY7$t15W[Bd;GE-,ZO7PGlj`/YGt(;UDMV^jPX<I,fX,\8.WUE3?WS)MlI%jT`;E6e5&63O0H/"loX"s(hW6$3"5#+KnGlmPa6Bqa9ti[cM85fp;ZOR[`HGcV?-jZd$Il\LP57P^ce@]PKbnI,)E^qqnQRZ>I<o%]"%[Uok%:.o\mA4U0kXiVUoB&5I*DA<^eB@>qHSrqKR:UbHtHVe+,?WlWmYB[9Kc2ZMaRmY\*^eh)Ed]OAsQ79R4%jfB;b:r3T/l%a6^R5lH/Yba\2SEZRl!WQ3UbKG@+YC:VYU*Z[-T7lL($tHMV6afcRiZ+1lf;m,m`gc2LVDpP3)D&&#\AZrp_m*BU*a0?\N!klOL\%k&R_2?L>mYc!=S>]N]5*QK.Xa?$=E7[,hU!^09e@kNQFof6U'DnoD].b-]B^b;\2+b?)=;DO[N?+>3E?E;+DY(Rs5[k2kRdo'<?!%\pDo^]lgm"^,fV,>i-WFqtEgq=Irm7qf_SfEOUEVgM&9$e`rmun+1XdYLgFs4Ws"fRpZ35[3h;ZEn^G9Yq/-$FZQ`+>]3rOEa%c:%GMek@)\)64QgsWM6X@tr]60NcpTO9dU9)tI9CD^MPI<"QpOdI11YH[FS1ZbEOc)etZn1D5:S#RQ`:]q80D=S1YO:<*^H&E&YF$GV%&+/eQs3'65k&&h5kiqb`;m3R2Pe67aYNkA@jh0"Nhb4RZo(#\nZ^I1'Ffb&`fpJqbh$)@G3ct+2F+'l6dOYnN9[V;os$#5aN75Cs%45E,ia8>TQ5Fem;mgaZV5NqG36!li9hsGiA]g(Mgr=RpM4O&*IO![?]l>!_SnEp0>S>X#2^2M3o0SQ&KM#ELnYNTTolMBLOg0UDT%e+HK%E-"m*=QZFJ2:#%&8:CM60:lHTT9h2I?g5JAOZLo?\N%:D>,2rf^KeGHa0L/"G+)it]72]q0CRe)hB-.t5J)165OPW/m:d>k%dq1/WhHZB/Hbm%X28$.\\(%`4J%/6h^$s4q`N6JOHh1X!EW>\3)9@sX;-l'd\63KKkdshu:TJbIl:0&tSMQVec#fLf#$*eF%YLY-%LUd9Y]Y$pr`l<J,<R7CBfJkG2V7uHJbuM]d4=TT%=pSNkbZ(^K5F.4oAK_>s_/%<O(JiqYO.5g#jo023F`VWirVd\KcnkVi"1#iD%Is'Gs`R2YWO+5>!B["1q4SnL*,+Y'7nabhEL&J[[d$slcG&]@\IJfGom-O*2m,[O.m-*g*/=qR%iQRqeBC;i_CX;@83B]Ge4Zteg%5!:qi4H68tF?&rkrM_mG:>8]oC/3&L:/=V[N_b[1%Su(UBMO9qJ'st!PO>50Yp\]/m.g5JjS8NFkkOX,*f&e7fH9k.m^P>rO6s24%3]fAc3]T5b3]];aMFZW=3:]T<OZVigg*:rTR_uJLe&.Bej27Y0_o$^9%YmE$fH7]Bm]\j]LF/V3ds)Ldj&%pt0a?]?X%m#Wb"jkQ%/=_HYE#anT+hH)r(kSY-,-[8DK,Mshe)=gs*fbum!FbA(+GoN@DJ08:(k:[DrJ<c48,eSj26Zf1UKN9pMY3k2chc,iUd+:.qEp(r%(&\F+.tSG_8,LW'\Pm_3NnogZFR24#d"")$=/l-Vh-"sUSTMp.;0UY!au5dllE9U6?>>VnD9pqbp7sihO4qK0edc4db6MS,X_j%\%Z`!N8*nqod#l@I.?I4hui*<TT.2kaPYqS[;&'Vih"`$&;?;r#7k.`fdn_&gF+9`F_f)df%SYs_F0-7cIFJ\e7?ep-VpKF10Sa:!d%f'Me:]R/\t4T=>u?^Tc$c55L>PJceUl0aP^HF*P4$TYWk@e"%$kkc#Zna#l9h`bBu^X@F1r'Rf<\iSF]]KO1a^2D0>qYNSYqY'':%?2Sc]J+p.<^X7shdQd`/hYM6N(;F($s)2L(l.tO[lI"8'F*W:SOtLYBRq<f_0^EYj5i'idjaHbB^I\JL_GU6p2e,!,s*OD:[hX=-%X+gC/QLaXJk.PuRaiub7G<^+pY!;"S51/U95.:4RTcW^d%$`^IO7j?Me,4uj[rnEhhY`R5*aX6#^91LVF+*lZ@brr&Wm=dpPOo!d%(LQLEmTqK*[b"Ta(=+n.p#h7B&%MFKIhk6'mN*GJMnbrqJ,]B?-i10prA<-lqp:bgroie:+8Ei/rk`XfE3!YrPs=ms+8Gd%[smbW%^\EFola/8<kGU'&rr2K+W3^#WFaj?!*kZRomuP^!%FePuo]kj$qj7'/oORXkp<?r.RF]JlHi@Ddlas&2YKM65q;<Ugh@WXjr'"sN%J*s[KSNr..]Z&@ceZR[<_rgl;F00@FI?cF1qn45(@H#umnro&0TPX3kg*Knkjm?iO6!gZCA5:l<qq'/DpZ/C"<9fB3s)GV1<eg82%%\1%Ro[C@FL8fR:IfLF[bIW/rikqD':@%58"6*ec=MO[_a1F9s2kMR5h51]g_0O_18JhAm?\&+H0&X,]hDEArPhjlfE"RToC\V*t%L#:Z-P@#blfp7PcA)<W^%h=gEgoa*M7p#RTJ$]0lg\::#<<<Z7,lYdcql=Z"m47<\+2?#is68P.7D?LiD9dY&1C$.Sk4W^T%(H!#%rc$?t^3onFDGTlnl;PAVmbo7:c#ik>B7]JVe+Kd<5X+nC7X5;gDEkg)p$aTjT+($[rh3"-^V>]O`Qp]$^Z3#`?N'oK=n!fkJkpZs%r5sfep:XhX5Q9J$i73.=s'<.LH6Z3Ef@sPj5aS,(4hZ9cDa&K(XmZdnS6mh^/SY1*9_C=dFEen@)r%h,ETm?KFuMX6k\biS9tOIK%]q`kq#9hahM;?S(`P6n(Y6l3P+!7Gt+-7ZD`,=o7lJK@[EO-<@HrB+_f@s;b;a5G\Mrg)<qbQA*hS4V;`7`9lrBK^cs*>1<YB9:F%&eM\X]j$!Xr!jgh7G@1L:"i@#]NK0]$bP'J@]th6a^3E7Y<7!@)a)R<iTC_gmk<Uo7m=G5NugBsk@`[:m-WKFkIYTB\@P@[o_FJq%DDa#K<e%bBO1AQG*-dl(b>o^V?a"6?q8Qe]F)08bkj.Qjjn3N]D.5GOouDC:inJL]=^U'9a7aG"kBH%QeOR@DmX2Mb#i3tS/If2`%1gR6ohRWKi?<t89ep4k'iT:@4]]WjpmP4Orj2L!MDKC#-[ni=E]m4eP/ESereI+O,D*@<Ff-TlB(h6aIMu<QQI-W;PlQ$r8Md?-m%pZmjPg2/c5geN7o1C*+9l;E7/k2N9BKaF6,GOPO%Dd72'<S>)=Mp:Rn]d,[ap#3sj[bZ44f)M+\-_($EPLGskmAbX7+WGQJlsmKL%+.kYXo&7X8807<%[i]=#nn'tKl2:un/AKp*hYPkgS?E`uqtjNt0'X\7>h-LO]5-I[fr9f!qGK-JU9*f9i8#Kchn+.qB1d#9rVhH:%LaVF]g"u,Gm.ZOa@Yb`Y/D@gFm'k?cilTh8WX#jHqrD5dr,s1O3Sut`d@K`eIA(/#ZQIF.3a*VRIX?c%)RDD6#O9?b]3#=*iWic6%8,':46,327+XH3X3o8`=o'p,OLMl))Gi43]S2W&[h?nIF4h6'C%H[WlFM2nmbn%L3s4-YU5+=QO\jFTZg`P8CDZBD$V@3A'+l3%i%Shs4b*,4g;8)Cs]O*p7b=T+,8DL^Ht7@o"i_Rlc@r6=L"-bI"OBPn<cVB0j9[.`qAr;Kr<#WHCW2tt+qhE8H\IjaRCB(9]dgeOQG%*H!LY%gUZGk0^M.Nd9GCqkj1`;iidphIP91D'-t&>A$4WVBfWOqm=]L>P"NQ@M'F8T[OnZU-12ID\p`3:3+l=;u-H+J)p:*g$]""%^AIj)[dN1blSk06SmIIZ].Xups/$38Tq?dW\GtCJ:H6P4n=Ta;BU\1VZ$CfJI'I#mMeC()]K*SVn_*B#[U2/omEJp!>B-N>B5ajN%`OL0dMGsJIBq>79eAZI\ReJT;q6>2j?h3P2(8>.7coem'+#0nh@c"it!J]t'Sc'N-aoTg)c*R@9Hp0E:n`]S`oA@;G.aBL^1L>\q%\-)#lh]A$n%#!R\*j%'c[\Tt0ps93Dlh9;64T!ILUVGe'G@<Jpj"P-If`RJ75C1;0XtN'A,7/q9lkdp>=l./Zs5J?GHaA/!V'"U/%pV5d(mRF:;>'%.L'j!2V^\)")_d@Aap%CY:Y-6t?^,Ng@BZ!,Dh>[>XB=;*CQfX/$joW,`9=eHu(@PQVNq1(hq*F3984JZsG5i\p%3BB4FEfo6sFq5/ENH]^37_)?tg;+gqs":o5_\W.=d/LU/*#KX]@]fBZK4&3!5ApGX32ak<HI$s,ST!?.5BHdo/?/#HpT(IS`V)R:%f.Yi$*41alFKmn]+[5B9lN`3!p;"+BIEN^c?Inq)LY\KfkHFI=.1a2Y.\GK4HrRnsNpgW<BEC<NVU\kkjQ.,A_<Ks2mhVc)&P"E4%?<k1tr5^trb3e0)3+&:8rs)/.?)I~>%AI9_PrivateDataEnd