%!PS-Adobe-3.1 EPSF-3.0%%Title: j.16.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: manoj%%CreationDate: 7/1/04%%BoundingBox: 0 0 275 159%%HiResBoundingBox: 0 0 274.4791 158.6138%%CropBox: 0 0 274.4791 158.6138%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %AI7_Thumbnail: 128 76 8%%BeginData: 4674 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD06FF52A8FD7EFFF87DFD7DFFA87DA8FD7EFF52FD7FFF7DFD7FFF%27A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D%7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DFD0BFF%52FD74A8FD0BFF27FD73A87DFD0BFF52FD74A8FD0BFF27FD73A87DFD0BFF%52FD74A8FD0BFF27FD73A87DFD0BFF52FD74A8FD0BFF27FD73A87DFD0BFF%52FD74A8FD0BFF27FD73A87DFD0BFF52FD74A8FD0BFF27FD73A87DFD0BFF%52FD52A87DFD21A8FD0BFF27FD52A87DFD1AA87DFD05A87DFD0BFF52FD52%A827FD1A52F827FD05A8FD0BFF27FD52A87DA8A8A87DFD16A827FD05A87D%FD0BFF52FD52A87DA8A8A8F852527DFD04527D52525227527D7D52FD0DA8%FD06FF52527DFFFF27FD52A87DA8A8A852A85252A8275227FD0752A852FD%0CA87DFD06FF527D7DFFFF52FD56A8F8A8527DFD07527D52527D7D52FD0D%A8FD06FF7D5252FFFF27FD64A87D527DFD0CA87DFD06FF527D7DFFFF52FD%74A8FD06FF7D527DFFFF27FD73A87DFD05FFA8527D7DFFFF52FD74A8FD0B%FF27FD73A87DFD06FF525252FFFF52FD3EA884845960353635363536355A%5984FD28A8FD06FF525252FFFF27FD38A884595A0D35355A59847DFD07A8%7D84353559FD25A87DFD06FF277D7DFFFF52FD34A884843536358484FD12%A88413FD25A8FD06FF7D7D27FFFF27FD31A8595A135959FD18A8840D84FD%22A87DFD06FF527D7DFFFF52FD2EA87E60135A7DFD1DA835FD23A8FD06FF%7D527DFFFF27FD2BA87D840D3559FD20A85A59FD21A87DFD06FF7D7D7DFF%FF52FD2AA8593659FD23A8845AFD22A8FD05FF7D52527DFFFF27FD27A87D%5A0D7EFD26A813FD21A87DFD06FF7D7D27FFFF52FD26A8353559FD28A860%84FD21A8FD06FF7D5252FFFF27FD23A8845A0D84FD2AA8595AFD20A87DFD%0BFF52FD22A85A3659FD2CA88459FD21A8FD06FF7D527DFFFF27FD20A884%0D5A84FD2EA836FD20A87DFD08FF52FFFF52FD1EA8845A35FD31A80DFD21%A8FD06FF7D52A8FFFF27FD1DA8593559FD32A835FD20A87DFD06FF7D7DFF%FFFF52FD1CA8355AFD34A835FD21A8FD06FF7D52FFFFFF27FD1AA8840D84%FD35A85A7DFD1FA87DFD06FF7D7D52FFFF52FD18A8845A35FD37A88460FD%20A8FD06FF52FFA8FFFF27FD17A87D3559FD38A88435FD1FA87DFD06FF7D%FF7DFFFF52FD16A85A3684FD3AA836FD20A8FD06FF7D527DFFFF27FD15A8%355A84FD3BA813FD1FA87DFD0BFF52FD14A83584FD3DA836FD20A8FD0BFF%27FD12A8840D84FD3EA85984FD1EA87DFD0BFF52FD11A88435FD40A88459%FD1FA8FD0BFF27FD10A85A35FD41A87D36FD1EA87DFD0BFF52FD0FA83659%FD43A80DFD1FA8FD0BFF27FD0DA87D3559FD44A8357DFD1DA87DFD0BFF52%FD0CA8843684FD45A85984FD1EA8FD0BFF27FD0BA859357DFD47A80DFD1D%A87DFD0BFF52FD0AA85936FD49A85A84FD1DA8FD0BFF27FD09A835597DFD%49A85959FD1CA87DFD0BFF52FD08A8355AFD4CA813FD1DA8FD0BFF27FD07%A8355AFD4DA87E35FD1BA87DFD0BFF52FD06A83584FD4FA8367DFD1BA8FD%0BFF27FD05A80D84FD50A884357DFD19A87DFD0BFF52FD04A83584FD52A8%84367EFD19A8FD0BFF27A8A8841384FD54A87E363584FD16A87DFD0BFF52%A8A80DFD59A8593635FD15A8FFFFA852A8FD06FF7D52527D525227522752%275227522752275227522752275227522752275227522752275227522752%275227522752275227522752275227522752275227522752275227522752%275227522752275227522752275227522752275227522752275227522752%27522752275227522752275227522752527D5252F852FDC0FF7DFD65FFA8%527D7D7D52527D7D527D7D7DFFA87DA852A87D52527D7D7D527D525252FF%527D527D52FF277D5252527D7D7D527D525252A87D7DFD4BFF52FF525227%7D527DFF52275227FF52FF527DFF7D52FF527D527D527D527DFF7D527D52%7DFF7D5252527DFF7DFF7D527D527D52FF52FD4BFFA87D7D527D52527DFF%527D527DFFA87DA87DFF7D7DFF7D52527D7D7D527DFF7D7D527D52FF7D52%527D7DFF7DFFFD057DA87D7DFD50FF5252FD15FF52FD05FF527DFD0EFF7D%7D7DFDFCFFFD28FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/exec_file	statusdict /currentfilenameextend known{		{			0 () /SubFileDecode filter cvx exec		}	}{				{cvx exec}	}ifelsedef/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		currentdict /lw_initializepage known not			{			/lw_initializepage /initializepage load def			/initializepage				{				lw_initializepage				/initializepage {} def				}def			}if		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: j.16.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -158.614 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 158.614 li274.48 158.614 li274.48 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"14.379 12.0997 mo262.38 12.0997 li262.38 144.101 li14.379 144.101 li14.379 12.0997 lifalse sop0 0 0 0.2 cmykf0.5 lw0 lc0 lj3.8636 ml[] 0 dshtrue sadj14.379 12.0997 mo262.38 12.0997 li262.38 144.101 li14.379 144.101 li14.379 12.0997 licptrue sop0 0 0 1 cmyks1.5 lw18.879 144.101 mo55.379 109.601 102.879 65.5997 166.88 65.5997 cv191.13 65.5997 190.13 81.1002 192.38 94.6002 cv194.752 108.835 196.88 142.601 218.88 142.601 cv1 0 0 0 cmyks0.5 lw1 lj190.88 51.5997 mo190.88 37.5997 li0 0 0 1 cmyks1 lw0 lj190.88 44.5997 mo250.38 44.5997 li0 0 0 1 cmyks16.379 143.851 mo23.379 143.851 li23.379 146.851 li16.379 146.851 li16.379 143.851 lifalse sop0 0 0 0 cmykf271.88 144.101 mo14.379 144.101 li14.379 2.59961 litrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica Initial%!FontType115 dict begin/FontInfo 15 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/version (001.006) def/FullName (Helvetica) def/FamilyName (Helvetica) def/Weight (Medium) def/ItalicAngle 0 def/isFixedPitch false  def/UnderlinePosition -100 def/UnderlineThickness 50 defend def/FontName /Helvetica def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 0 /.notdef put def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0 ] def/FontBBox { -166 -225 1000 931 } def/StrokeWidth 0 defcurrentdict endcurrentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E44BE895991CB9C373C80EADFEAEF5EFA5F4286FAA013099BA2C44005FAC039F852BB4225633818093683A68F63554A937F8BA07DBFD09D8B45EBF1FC7D45C73953C4A942AC8EA07942969C3740F8FDDED3036CA23DA6FF540CC45E537C59B9AA6D45C578CA641FE62A8116AD9878FA6246AE4B043A31FF7F04E1808C8B7DE9818C0B46A24A3EA7E4479EAE242A5914A7B158790E7FB54257EB78FAA10F66F92CDABABC598B896060ECCDA4141E5D7F2780D0FC9C7AE6EDCFA4D4CB33471B0CE177F5F34390262090144A3542F0F99FD6A431CF58BFC177B69B948734361FFCA09219D86239F3D603158FD8D113E5F4328092B78C352E8F793767B178BFF1CC48776F16EA790F7143CADE2D7427D75F1528DC1A6D3925E146DAC6D9CE4162708BB768CD9C96558C5E5E305F97CA4A30DB8104FB7B8AFDB4B3BC3F4FC7560BE408747CA74201D38F5AD74E96F883F9E9CFEAB6B1240A2366FE9803F147CEE19B03DCED2E62CE2CE096D2F2828721B3CCA9F3D814A2212382CE23F516B9CDEFDF7BC8FAA73111ACE136FE7B9D486E6C96BCD0CF9C52A89D2FA2D30D14D0FCC9A2470B53D39938A43623BC02445D0EBB8D650771CFFE76FCA30682AF10E2DA6E4D634673A475ABF141802F37C3FB9875155262D4A28FD6B5F85EE4176592A8D3A421D4381BD4843BE10AD07C3DE85AA61F8E2EA95EBE86A6374184D582D35050900C96FED7F4E5A582DA69EDDC1DAAD28DE08D3CE98B8F6D3F7DDA609F4A3E9901B1146E22277CB7720A22CA09505B145546BAE68E2B972838048211660ED496AAF92B5C46A76FF7A74EBE5A27F7E523118173D167D9F5F68DACF119B296C0FBC5DD039404A4CC7CA837CDCE5FD15542E9DBABC7C1D42D0B9F00AE034DE2240DC724251C6B6817662E8E974BA4B60DE327E244E6EAA28AC475203416E87776838447CB3C4981B0C4BD30CCD4907B9A91D904C8D0B77F79A317C0D2BF21184030130DCC39455B80EAB8E1B323EBE123A7F0B05143B8EDB7A35D123B78719E50346CD44E7FC542E1FE89EAFCFB73C93A0165B0AE9FCC0D1860B0823E43C2DFEBE994C841084096602A02C9F4810B6C0F010A183A2D9FBF33FED88B4E1BA952C31AF88CCA6D5C81E9FE1E91A4E507E02EAFAEAC79709296F1BE5CCECF57C3861ECB1C9BBBDD913A9CC3064630A099B443C3722E4AAEC929409A788D9E73E5FFFA85D784F123A683BECCDAC02C2A75DE277A2B5C700A5A9444E07159EA4012DFB1E8C07B86D8DBC32FB590ED23D14823C9254C625110E3366BD1D4657B1720DB4702BF71C0E31E1A1A95AF701DB2D05404C0879EACF1A124C0FA3157CE4105B883F56A372E0967E781BEC6992B7AC5E7DB719FBD0FA14C1B54DF375AE6BD34D2D2E874D88A7C51C8C63E23C007A9470EEB98FCE948808A51459277592104DC1A0CA46C7F09BA2F1D7185F1EBC99D3B3AA0AA04421E1AB525415621FAAC7F3A3F45A440955F9652513DF97A3E6A31C1C73C0ECC9BF407BD9DA1BD3E92B1BC4ACF925C75989CE8BDAD7024B6BC3929FE80E9E37F0864472F962921D62A918457A65B69002D7191CD5AC8127C8270938F38D90D59D7CD43771C3348BE31225FA8F749ED433FB54E17B95FED79BEA559F880D0FDD4898F3FDA9153E66024A77A92F0E3BE71BEB6B7B68AE513A8B600AE070C6CF3A8F470B15DCBB3C3B20DF41CB94D9E2AE89BA652D4E3013968A5840746B9F389DA9DC7FB78865324412E79E8F05F9B0374F2373A1B95C6DDDA6F53E5A1AE41087179B198BFE69798BA40169CDE52CC4A8EAD1DA4F9AF16FF46E7909FB7CB212CF0B80ABC7B16AF5433E497E687C6ABBDADF1762022CC2D46FBDEB9142DE6D7F6B768273EF603E352971B3E125D094967533BFAC1386F7E98DFBCBADCEB7014A25C49687ECF0E9779C96EFC6BA8B001E7667DBE7FCD2CF11C85F9D06394EAE68D6C328C85252290202EF68E519EA0228383E30209DAB94BDB2BCBC5FF182EF42C003AAB3DDB87933E78BCE94B46602816E947458A0736A803E28A349EC363E57F4C03123B3CB8565CD327B54560842502703F2DB674EF4244C20B0CBCE7144482B3AAA66058071EB637203702A6CD76B694F8AD897D6F3700170DC281728E2FAEF55C641687FAE05A6D0B77E75D0059252DD53176871F1159BD2EE6C332E29E9F059BD61572D85FC3766E7220EA4A3343816043E73E312D52F545B4F5F65A6236FE28881A47BBCE1D8134F6294EE0600848D7DEF4C3549E4324FA638E19B508B8CDAF1A07E9EB748A831BBC8667852A48F923BBF84DED85664227ACB696E3A65DDDBD086D366AA21FC988CFCEC1DA0CA2504CD3C3C9F48DFDE56C91ADFD6937D5C2503BC787B94A4C8432F269B496422742A52C35B2B7FF3DC2E6DFBB50DCD42E6ED0E77C47DCF7CA426175325BF1DC044528E7175199DF3712D488335C43A37061380E96469784722DE03A51083613EB7499635453829AFF10C2FBD7466F3A1DA6EAB12099F7AF424AD300940FF61B55204E389D5E1813CFCA5D0B52E2552F43DBC7F24A2D01C9F7D487F38D3CC401AEC4A3BD5223B530397A76239DEE5722AC9DCCDB52EDAC1EF585F04497053324B8734B2248F7BAC7AF81BCE53E989D97D0F7477AA52CDE4260FEE769910F7FE9E89E8CF2939F47AB0ABDD76F6A938FD935A57771309531410A3FF55CC7BDD796D76968E2FBEE7385438998458258C5672C39C7575AA9730B970B786AEEE32D19F1366B2DC748FE6AE9E49081E6999D03F2FB02E82751919F7FCA031A4B94C7B05AC3104F3535D04F608090073ED88035050D69C2565454870F2A585430A6A2DD74BE4F01A86C988ACCBBA698E60761DF8E97490A04504270FB423748824DC14B7F6A91F508F0577B4C3E2CA75CB6C50982425A3FFE4D93456062AAB1877859FDC24C08D6669D0D2C484A1A4A2C52753D06AA0C8CEEED834EE38EC0DCFF5F23B091FE8CA0FDCFEB1F7CDB1C1093BDD8E0A2589283F60BE35882D5DB05988E00EA051DCDB08771EE196BA5264841DCF1FA87F65C13D526FC5D950B7ACD97BE2FAB5480085AE088A14B9D26A44F4C162CA40900D64075614F639B435CA3DF3AEE9A5D193A96963EACDC181986746573731724639A58960289B1DB661B9666D7242D2D3118CBFD1928BFE1F06F126DF403C84EBC945738FCBB01D3B02AE5B8A45D2E2BC670B7AC1B5AC9D83ED6A0451E0788CA38B5317C39953E7ED55B900C7E150922A77FF03B088240AD19EFBFF20BF4FD48FF4B5796F57E7A4C9928FA49AA1432A188F58210B572A4FC31BECAF3C82119AC41EB64E5D8AAB4137C81CF47A57B42656E88FA60670A009ADD5A034DC2EBD5EDE399C26BEE88D6D278E1F1409B420D3898CBC8F1E9AED088A5AA2A4F13C39F0653A88A6948A33F038E8C308104042F0FE6E7009718288EDB8E906F314844B50AA7E2FE1A4C4C79B8DDA00D94C7D17E44BA82E83F27AEC5FD527DAE3ED717F0024C011839680696A9508E6016136D4C0E236275843A212AFDA966FD93D889E54C007C9DD4E4F164ADA8428617D4DADBCC1010E12DC6E84D0185750F1E6C0C23F55A3F27E97A98066BBCA3FB7F4EE04F6DAF29F93C8CF2BB5A1BF65D18EC3738D74A2EC88513692E8BA22E897A1709879348DD99BE0A6F1103387F7BD3514E12D469CD26E795B114C5EBCAA804847B1B241472DB337BF8D40C66F9A5D8DDE402A8AEFF26CB8E2CD8136D44BFC4119E13495278DAF88B72B82C75FFF34083A3170EFA5F69FBF76891F370D100E050833EEAB092A4E54D658756C285A46FDCEF595D2C52B32BD4301F598E604D6A76347A0154E923E216593B7B10243995303B2EB78C2824E7D8F8C1CB1D750A8CF031C1DD161A6A75FAE4DFC959FD829491327A8F226FD7D4C323F38DA709204D980CB100BE0FAA55EE3EF648E5ED15537C0EA1157B1A70810303832B1E9ACE9AEAA2881A41C51E0A89355DA2A1B16A93F96F5B19D476ABA066D8C5C4D7351FA2F017EB03B315304A519E0332DF47F750339EADF9AECA79A93EDC7C863FB22F653E3BAE9EC9B54F6998D745FA570F77C91066DC90A4D62D17E5EE23DD91C3EB24A2C0F05526C255A8C3FC7D4722F20B997F48B87E5BCF83005064B3D4EE8775CAAFCB1C57AC7A6218A525A77F466EAD8002EED1CE4B4A78DF9575529FB1CEB33394D5018C25379A8F43E8F0259375845E25FD5A6DC11C1644813C9C7300EE39FF30E904CE009872780E4D174894B785EE731189F85CAE521B0099A86675077CD4E21BA446919F3DC894DAB3EF9EF9FBCCA127B5549CB016F8795CABEF5777C45663D0829F689980AE42CEE04F53BF131D985E7152C8754C6323F99565C77C6E19E16ADE8D617839E32E587BDB66FCBF4E27769E76EBA306C8565F24D226FCEA026C89256C92479953A99F941862C3B317CDE8EBD1FCF30673935F4686DDF42439F89ED00C05E5E9AFF4125F9769037226561BF32B7062C8311F74E4CFA9ED4EEE1C23D95592E9B4E934E071D31461590CCB3ECCF3554E2EE54CA9293B8148223E80B4E074DD9BC108FB77502DD37E2FBD5CFCBE8059172752E03DAF224D6FE11CDB49E626BDA76601560E104BC1006A4ED31904DE20203B1016BBDFE6986E8A1C2CA64BE6576089F4F5AC3E1CD0DA36A0FF33DDE48A9FE47F30166FD8F0E955AEC13A527F9687DCAA454CF33F79FADE2065FCCF38737721CC0F734497F514D493D075176E33A3D54F31F3DDBF4F872C7121CB8190354991836CC8777DB8C9CDEEBDF8740CEE6CE6524E8925F5DC0194F5B06391600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 67 /C putdup 80 /P putdup 85 /U putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 122 /z putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 34{/.notdef}repeat /C 12{/.notdef}repeat /P 4{/.notdef}repeat /U 11{/.notdef}repeat /a 2{/.notdef}repeat /d /e /f /g /h /i 2{/.notdef}repeat /l /m /n /o /p /.notdef /r /s /t /u 4{/.notdef}repeat /z 133{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt198.232 54.2119 mov-0.0878906 0 114 (thrashing) wsh82.2876 156.588 mov-0.0878906 0 103 (degree of m) wsh130.136 156.588 mov-0.0878906 0 103 (ultiprogr) wsh162.467 156.588 mov(amming) sh/Helvetica*1 findfont [0 -9 -9 0 0 0 ]mfnt sfnt8.37891 107.606 mov(CPU utilization) sh16.316 4.58985 mo14.379 3.76758 li12.4415 4.58985 li14.379 0 li16.316 4.58985 li0 0 0 1 cmykf248.39 46.5372 mo249.212 44.5997 li248.39 42.6622 li252.98 44.5997 li248.39 46.5372 li0 0 0 1 cmykf269.89 146.038 mo270.712 144.101 li269.89 142.163 li274.48 144.101 li269.89 146.038 li0 0 0 1 cmykf%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (manoj) (TECHBOOKS)%%Title: (j.16.eps)%%CreationDate: 7/1/04 16:44%AI9_DataStream%Gb!!kmB.bWFe3j^q]=&\BL'G%Xbb'naQ1,$DO+#LZj9S#?sjg<A7Qrg:j#dMW`ikmTR3<oafNrkh%Dk\HS@8+jS@MVB1>@lO7uqb%equ,pq!.8@DiRn;rp\Im5Q1.%k5)I'p68L%b,mkApu:2EqV?Q!oCmXCDV+d"$t3@cF8U&mKb'D$CK_(;qW@2?rnI82_f+GG*V97,%YM['CqsOD9T>(;u^No\@FWZ,5fm@&>IIi$ArnVu#&+d]>d6E!BpYUJph<S/6pm5oEna#ai042Da0AjM@[XWP%?O$P=r7uLn^O>#>%0Y*Z;qrdZs^]'P6r-j+i^dE&ahYb@E^\QderTD)Y_*7km(]X;To+/%]IsBR0]R'J;^\fBrIdu`M?i'Ng]70dNX5+ln$XS5WAtJtu%f,sF-5(._n5CWCN-a)sR55k.uro*hKU&#JuG5qUAn)M[E+91j.h_1`(qt.=h^OH2?4Y9J*]$5/Cqi/'UpH*/8b(WpGa%u]Xcem@S%$O>o!rltB7]@[#!]U!jMoulp5CrNTMIfB+;VZ.Efkl5CR:Ml*cCS01-rkkf4O2$)=9cpRqI!GPfO7tL1p=6\)nAW!M^OPp+YZNc[%Vm`H!YJ9u6omHMCDdL!<f:TMKA&!;9bh!s:FFElEl[Gu!B?taL^#/<<rS8RX#NYXHlgLDA?TtUNj%KFBqeuL%s'[CAn\2hHIlH9_%c.i8?NV4/^>:j*<-]Y1/:Ku%=WEr4sTCV.qp@3HXg<Vri[':C]7HXUGh5`cQHLo<qMCpnmrpI8o]D:l=F+!cE0B+j#f@9cYa4GgY%W:,fFioC&K]VYD\^3b!M'&o4Kf)*Y`aBu*BrI91ns8?b-dt\J*c,XI6J+kmOr;PIL9n1,e`l(=2e&oqM6L*HUdm*J353:KRlLq-R%YC?7#h`ng\r*'rOf':k(oBY"85Q>k/r4X_r\h(S,/GH1u?i'$a;mlJ)>5bR(hc6`GWqGJskA+t)n(BVVZgl@;Dk$4L2W*UlIe?uR%J*jk^rn:.srO&hVrO)*>q9i>O^9#j\^O5;3043S.\OV%.pE%Y/a88k$q>C)p4ML<cn+)nElFVG@k9mrMo83D1H[I$PqV9CQEIZPP%nuKP$7"4f$pH785p5/_4F8Oe.qFoc;T$@03^<>^1X7(?0d_@rKO!DF&pn#HOQMc&Ynp^.Vo_7#,Z/'VJjNhW6r/UZHn+-;PlBUcP%]V#%Lm9VN^q_"N0H%k]i\NfEOq:4AM\pODSHB6jrpsjTaI"&b1nWo>b?LRc<a(H9/jNmDg]Opp5mTK9ipUiZ8bPgMrkT0I^Y5>s-%Q(Q[oI`M%EhrE0K9;YMJVsgOt?hO6mlFUs0pA+,:\NfC]hrE0K^3Gt1BAL+2m_6Rjh9RkS/1]&pk/_I4\Rj`&0:pefT(dSRpT39H%^$!Y&5Hi0"Ze]-c?-d`0YC;!#If97iO8RSQ>FP"<^ZXan_TV9&/\dpbrVk%$Me?o*Ufl%8oL\apl$erq:\*\H5KV9YVLMe2k?7ek%%Z]au-N3S7fm"S(o6?nrHXHOHA;oLDkP*^\`fL-t\mP:*rVi/TrVNM]pV4`bV;-Rro_nd@gAUoHn+XS>]mjD@kBjBSs1NYs^[gXd%rU6ejmb^6W^]-I2pu\(C0;#u9s*jXAqtEnDmsj<:J%%RbmJM:6li$_PDteII0BKBYH210B#"s9I^AOl,MAOk;%6o:4o&U7.HN%\O%I-8K7[?$sRFoV@-s8MfQJ+SqRp!`s0hj\ofl@*V_+?M7USf5?q0@o=<s4aaVJ,eb[eR!]giofcWrbHoOnbqRI="OKbeT]"L-)Ka"%^?=Z\Gd7,&FesE!s1T+lr7SJA^%:>h;G#K2ZJYW*lhe$'nb6h<Sn7P?n&p3+7t:54n*0"\J%PaSP'_tf5<d>7NGC+QIN2"'%)21V%]fhG8e(oH?qigb)cZcSGCOZ3:T=mFoQ9YEIVpYOS1.=A'l)1-);![k>pO8WbHPF28q:1CGc"eq9%80jhVuN)"XS9/8<dK08_5GV*%eReE[ALfFN2gg?Uq#5U]DCo#_p%OG]PYWMpmIRS8q&[A#=+=]H054R1>jbBO5C`PW[3+jtr-@b@n<H)RCGauh5QCL&V*?o6M'm2U%!fo"r`?f.f^k*"gbO^-%q<'Q)^@GH6qr>!cmel)@.=SkO7id*DS6u#9iV8^b]l1Gnl30CX<mijPQBNEZdV_'h2R/V+,UD]%rh&$,%Sq62;eWG>$'2N!*):s2RIpM'*7rcl&4hb]*iP#D7r_^QQAU3fclsJYNr:B6'2Y,cfq"-Kr<PE*jWLp=4f'B=X7id)%O2<o$%DuaM%I]=^lr:/LD%^UCCj,uU/<;>^:giNJbl<jE0T1ZZ*hYiX8hk'/B6dP=tF[-epO7Mf2VcWn7jQgG'DuO"Z-#;J'I]//hhVhYcO(5pg%lR.1.I7O9.2RRhU]<f#[pb[p/g8r>hNqod.]>(qRji=EO>fh68_Y&q-IWE-FSmU)@TCbTgE9k0;oTSUZkOI_SbCd.`h*,!2Gj33?%SkE\/gX!&:?93u@ds8K*s//p)hgCm#I#\,.90Z_FZKIQZhK+t*kMuR.>$p+6j!SpFGdkj?s("eF23moP5/DB4Dgl_tm?4L:ero?)%\'=aFB3/9/V([>sEBSbsS`[UM^;D>peKkf7rTl$,H-Pn;>M&Irj`PGMIJ/QmR[%iqbk8.+B34qLp!kLn"'>BMrP%Gl]i]2GHbCq:%A#f99PfD&4gikf3A\7-k)LK$VrUunV>FkZWm7mQOo2#B2s8W,nVk9USjb4Ja%QDD0QX:Lah4ER=.X:Y$2u:$]aRcJ,ld(%Rrq-0h%gMbrPr;<*E_F._uFan\_r$O`&4P&[srS)bF:Y1)Fn+4kSqKXZb?hs?Zo;D&(hY7&'I6JbKo5ic\rcHC\cgYa`mq^eSIeMH]]gLMG%;7,nC5G,7U;9I)&BDNtQlF*\d4($/$n;K;-q;PIo%O5?T:LCm8f&5ZekEsn?hn=I:p(-n55Q6&Do)&7AqsWs7kOn`@?6/Xn@sn=E%*M<A7O2$2;jpt60hL.V\hTtBBT0I*fq^4,cs5g`)s2BoVm65s[(\,]<frIn&bqJ&$#-Qk./%!NFk:`J,k)\CarMI>VMWH:g^F\c=%V*%1[0Q6kb^\Rj=KVuD_gXEGR_m<_>Onj+3qST?ErUoIuT&uO4p6`nL[se2EeXQBQeW7GZSkj:>s7"`,*6cUTq=`XnGOOB0h[c@C%kl[9^0(m,+oB]u$IsV'.bW#"$cA/l)5J6sol.,[/nb0R:hS&d'+$]8H^DMIBYh&UA+'uX+qghO+^%f'4rQXk6>kcd(pXdC@J%raJ%FhI#.?Hr4O5.u4>qWW3QqYen3k54uB+6N+T'4^4Bf804i-lCHXoA,0DT&-'2Y3jbgHMu0nmGE3E+.d`Oe*[n,:H"8`oCW!.^E0T8%J+pPSi/_40gUG5(o@:kt`p:)t-J)g;qj[?CA?h2nIsgqJO3H66VYR.YhTbf`TDnB:/&SMcrB"od&,inGoQm.U_4M\-Qe+;`XZqm$%^#:]\mI1&R-VsX&TCg<^U@c^2GB8.VqsK6SqK09_J+N@Uhu(r9IlLfK3DSH/FF=,EdpN(@RofX_qt]Pr5/-K`J,@.]n<@l4l"U,u%Sosu$l*%aZZ>dJmrAu8#kC<?rm<;?=J,Oiqo;cs'mHO.:n,#>n9-aH3T0@bdVnYB(A?(EcK;(K2bQ%F`q=Z7lqsP$Yj(nZKhn=6/%jY&f4aBr6dr:USoIE_<Q=9%eBcSqKqip15kI$VbBDuA=lYM6h&Pih4.^SfuhnG^?'pANID;2oeW]mY[1.=4\J]3?K:4\Ol9liR-5%[%E?KrrG92>iPNCV50/:0;/?FL-GTTWp$(IPK/0>If:5@I/FL(kNAW;D`mg@([^>YY@%=Mr[gJ1UH&10\+FTG^&I!ji_BI-]N>(k%o6Bs,[m,B8f>te/n`%e8=S$M3l.,ZtYPpA>hnJr;&mboes8?lni._r'hnFO=lIq!j71A-fYH^j_n)$)>jaLo!m6;OIH?YAE1IH/q%n102i$2aZ+AuWO,If.+Vno+E+O7j]D]$U+sr:Kl)qM09urq,iT"'YSA>OqTfs73L9r+LCoZh*3'^A@-^TDn'kZ.>g[UkIV54QNrh%J,[Qf5C2A5DX`J.^Rq]sa#X/Va(%2GCb7:8W5m=U=OPXL\;`98[N'oM/hQ0GN\.(P*]\*im5<0OEa/.6B:95ZZnQ,aHTGB#C"=lE%-#RA\3S,MKQ=_O<b1l,QmmkQKkW!44mE@`]98^9URZ8VMT9%CY?/b-Yg#a?BF"b4tUMn3+q\^X&r]CFP+2+7]4YegWlJ1,seu_D*%Z.B`C4tE'Do%D<qK`198WQ1j]>!"Z-dMC:6XBo=-,FpsmG31[#daqtL-'i&1[B)L$W+mELY-T1Cc2E/E*,3D0O#kHDp,Mefn0ku7%p#t^(QdFpJ)DcFUHWouBbAnSWd,KkpN)BBALjS=$nsN+KAaFh_Tu>#;6ge/rj]o:1"KuD-rs1W$WQ)<Bd`0-@=dIe,&scd73+gDq%De5>F>Pf8r.*Lf`1DrP`p0LDL8nN4_)J_r<ST>g4FL7/#^:%/<NSC7G:\1Nq/keM>9<ER(V_n"(JbqARl_oFn&!/$3T]Vik/Y#M]%epF$;>>Bo/\6N5").FZ2A7fl:E=Cti0!U0KQ;I:(Cch310NG*uLm3"b;9iEffM[OLc;E<#nVh$DQZd?4^@UY!WIaAMn</'9F[_$N%mO\.IoqOE_g"Ii370N#a>MXU;AHLk?VJmUSpW,j0&GPRZ.uR=!-1@qg1!VB6ZZ([WSND-PcXZB'VL!&KO/]IU4h+UjmDiItOL>U4%.eQmUSs'C=pZ!6qbd"?[0;4B=XK@_8#EI@]UFpoYZ%[1p\rM^pLS\ilgH')S[XDk&AYG0rmqY6IikFf$CBI;#3=]@]gpVXck%)na%(N2\UW$#bEC!9'Ko?JD>MX=Z/:tpd7s(kA.Rr->g5*3In`>`S7Nt\M6[E!@ECK='<arHU6*ghNg?1"R[_3aS2/aHRP=rojNY]qO-%,I<o>mH7X"N4HaMA'*K\8o2P^XQ]8=f9fF6P]OlESD1=mRitKQGNjajXQqoG$R$8AgmM&nlo:?>22&RcL8UNI)l#'"%Ea1f87I#D%\\rQ$hOV-%[O$SH,;p_>'a\#GMrsG,@]8m#2ZsQLfHqM6&&.JlaD7CV!dhqN+RAp9DJhUk/RgdQH8M[uINl`^5.\_g`\GXp1aFUG%%;P#dd62TF+guB.A&gR-NL5<@N6k)PQ]5_"cCAle=\_XBGJS=(4Dh5P^uh/];!Z%B\#/!H7m7E;^<[Hkd?2np4C]J$M6r:AAO$$G%SNogT@Th^%mk+,R9<U,nW#RbR:PAL2rn$hJ/ie%YFsp?&)+4jW6eS]b4eGqF^#qS(CfXt)$4;t$7L/<a,PHOW3tI!XQ=Y+kk:u7b%cFKGm)Aj]Cb8]oj#P?$1UH+NNXD>mL"'-d*?V?GgSLZL>THK2hQ@8*)&rA&#f>84F!5*i>,.GbK7`N?=WH4V7A<k>ur#hFFHTV@a%EnP1t5IO]38&8MB<\,GVBq0tfUFp[QptL@_n*$;9*XacYSN.SL?sl1jA24s['C[t*O,Osg:s0Gk7dF8]0FnD3)nBd5R4W8a@h-O#%GfgfnGok$qD&k3t*Nt7F'Lt-CLAa7Qk[;(C2t"1XDVB-OLEX9N`cYSI11lmW(PU+MVg>u5WuI7]]8`S&B0;NPNe%ooaPonJA=.Uq%L:tX3TjLo[`k)i5A*:Qd[&n-TX=cl\]WXIATA1r3@k^BndAR(O3,oOQ4]m8?NYT\#+`O41dLd%.9t?_G,Q>$9L9U.k?8=20>\C!d%BeFXp*MEoEs3rDPSiUaI3jF#;7n:^V$F^'N!pd74F"C</.q+YXpP+)hI%4uHEr$5W,bT]+X)iHS&gJB-fpCg=%:JRHD+MKS0XS8r%</rsd%KQ[R@NlZRG]<Tr4,_BnE>MkB\s-;&/Dq/p4u"_C6KF,aGEY<H#BQtZm;$:O"bEcp';p.!]+q/[kK_On#oerW"1t@J0JNQZ%?M;$@jY39bS<%qc>_%V;?XN:gGm6t3?5%8Z"39'(f2bbJF.O64't'%A=9F_tCIn`>lZL72P_lo*;jkE:p4b16,_!,Id#B`a66#'u%eMHBZq+\7ZR&"sL/u8QMOE.4<0RlW%fF#V.Lc#t'3mP5+`Z8iSc5+V)/u?f%]0>]n(rr1-b9^mmlJ=@F.lZ7-ljfmB2RF,RPj;JV%hdEuT.]*5'dZ^U?0s;h[SWPTWGf'Bu2VJLI3@EZuA(e?_^'j8WG8rK]/I)h8&.+uGF,#j)*G@$G#M@bX^FdYC.E80WQejBkSMaV0%/EQE;Z_<@1S`3ohY3eb%DB?XOPUqIp%smRJ.ousWZLS;`DuqAjA_=dC0pN/\[ZVL<ra3i/48+"_43iQa.H&0m6Ai7dU$Olt?4Nla%_$'ijkf99UTs%YImEo'f"j,[+>ZT<0G<mMgG@9eB`[*Ks)GoH#O90#Ja%JYd51i&<+m9F9[cIh2W[DP:?,Oa6XtU!R,LlV=p[`CE%\t7j\7&ZJX#N(`49+]V,nMM0B'D,R!'HMVhBfXVW6D:jlkCBmD0QFVA4_3[q5LtCdO9TeBFG<_&V(2qY:0uRV?<:_UO^Conf!&b.%OR#t;T3K0`i$d2u"3HKEgr+mm0G$"U]]5Es2K2H7YB\4mMLrRS8/&$dcF/Jpd(P#;[rY7N)&O44_^GV_\HmX3@MZ;ajDb7M::C`H%mZPV/=@1pX"qSE0nQ*Fe5&s!o!41B2bjb\5p*T-/0JuB+[Z?\JHV=a@51-g/,)0W@eok%@$"V&5l#tnk<Y]P4-#(RToE:i/+&FZ8%BP2eiLRZ9T!"cVs.pVZ]#<K-3-hntH12=rS>3n1t4^(6k9.6i-#'C9NWc9(pe[B*A/lW2IW<5<he>?f)hrD#kh"?=e!"I>`JXlo4%k(+,#iA_b(IN5$iOB.k`6_r@bH!k4(M/,(OC_05N'pfpQ:;?rsiI7T,7r2?2_Y1QkE-1sdi]#''=pnpu)ETZa$&"6Ja291PG#&.i%!=_;2JP-Sc-kp-n=RUjK+snGVZ!tmgAmMYtBMF1b68UAVN"*3pTIfjd3+*.cf+O8\`KMleA9K=;2;aF*X=Q@&LYpU^Y:Y<c&HXe_%*9]5$")s8T`A7Kh#QNa^5[F<0H10q9]p\Ge2rmJ0RKnTR@0"1P-<U.sR%3pl/H0p8GA&HqGR$u%/-Q0D)aWRn<ak\p'_/t@!%&N,%l3Dgmi)eQFOPSEb!T^I9TYaE%%?&5N_5J;Zp8j/nGt'o$5[TmdTW]K-M.o%JU+T!g"&s`T1'&)P&QcsTE+A-o>a,_?]B9AD_+o-E%$d6NC<$Mo8iWR'QE=E0sr#*h4N.<>2&Tq:*<Wk?hg9@cjWHJKC%\APc'\6<^=^aZQEioYtfFSJl"MV/C,SB11g&R6$K*aO,d1s>"%FIk3p2^TBEbK(SM46;-N*s%6_b/X;:@RC^fSHg4J+\*2uJs[e0*BF92%,3"7/IkT87Qnpin-n6%]LAlK_u22f_?R4G$r/o?dlH`I%L%EXuGShd"iG4JfXc_h!c=^]0SP(XS2Fiq>*AB_9nL8I2I`s#<'ZA6Y"crm`'=WNq*)"r#3m`%>QC6Sc(g$g@iT'I;#SDY0+YO3U%.?4FA_)(&nCBmM(R-WTpUc=BR)3^0OKjZ>d%\L:>q61''CYTu(/+fY^p.tad*?5Hm"[T:NE9QMkC196V,9%bUS02T@4aO#S>iO.t%4n,OmPp##pb5oWE)Ap:+=Y?'o\qQb9O/7I]dYMk_o=2RI4qmntRYA"u")r[iZ/,PRS4m]-WUBhQ<GolB!%s_!g,D#<AtpUs%Zl]#%mK%,(%-\dSJl)Ol/;u*S;5a3X0VgN<@b:+]d$$%D0LJ><0Pg0S(N3F=@u-r.L`P!!Zc(Z"DaFR`+$%o'1iiK9r*YUfeh^`#g52Sl%9K4+Za?fe2p0$p<8&KAi5bV('^h[DI,d=McLi(s?M/^-k@8Zh?BFn=`Uj%KA>=EUl$(9S:C]#h%_MVfEi&RmoESr6&dg.@`F#"E,%;)Oc@<dV\ZK>;7tVE(tfgqE8<UOm>(5YX_o>O/^BO#hT;8\o_6!lEZA=2nL(bFmSI'nFr(?o'>gIoku3(4Ag%0t^o1'h00DM11lg%INg<C<!6UC5[c&6GBWKqG<9#]h]FmE#00+LGj1'OE&B``kQqs/mDdM]KIH98cFI<aTpi&C<%8a*Qja1=gu1.A!Y*Z!@4jf!0$U,`%/a,%V^s[%*MoBGoYs3u-a4Lb:%[tc7^N!YF\(hdB)^5WHB''+m(F'ngOJQsOEulN>Ca)VX6"+&=:_fhF$Cutj@^6>r5srirb;Cbm%F+VY'@rgK]*='M=pQDnTd&Dh<D9*OI>ZjoK>">deVI_tpr!j"kf)`9GM(98Ar<@)1AqU?#782&[j9(*B)*MH/:DjdZjDVkX_#P>'%$%.,NJKuFf"2E>6I,`hHF!PZZ*fLB5dRDt\PF".r=;\CV4,O,oVQo]nhot=g6p??LXpG:8(]^oMo,3,ISH"nmTqAPeL0fOcfXCs,%I"j&h#Nlpp6e668cu^gC!r'PO@5"_"!<e+8Jgo+6`,p4!B*7>VesI8h0S;mln@;YGJ0l`gVrm6IBGkbBK)lO0ODoFE;IF#X+s8e`%l9#D5IYjo<P0Q*CC;C93T*@m8.A4T)Z6[6+%'d`km,3?Vm^_A!QtRHe(4Mq(:e0k^_c=TWi1?=Lc!XeoN#*7J7q3>Kni#8_e0XRQ%d2fmI_5!VN2:h?^9ID#g+?>?7Bl)O-_874Y"'*0kDZt_>-*:QI$igdk.&'WW1=iY'ms%ed"9>C`'E/R*aNL=f*2UH6[5]Gn$c_p'%#1!D)WCNt*mBM0c_-s9"ZFiIW0]lI=+Su9OA))UG?lF,&d"5gti>A,a"i^`)B&sIqj7tsHGXrfam:%p]pC(:Ci*GldG[ZtVQ&\0"%:.5(85i/3DL_^>f9e,F%(LW&7Kpc?n#+[6H52\F3bUbLVY&iPuL9SO?X2MWSn/)-@.6sj:^,A*bEf3X6*HVeb`#\p'N=k0_JVkg7%6_]ca"pkpE4$V[8EIssQ)YE@2Xk*p6XU$Vn'i9=4D/dh4CSh(kL+1cJ&bn)n?3YX?HD%*RJRr9TUhcGc47ijJM.F(4^^D"?"s,Mm%*0>Di(Q_4!L,E'2Mjk*/@$-E\kF&%4BI,X>cOC']hqJeH7pLgH79g1-ccB2-RkBa6h/=\h&?qmr#OEo"N*slVD%*m.UB)/O=;kRY%1!I,n0Xc$@U;W;f1`<GS$]]DVr!0N'HlO!B6tbuo=9@Imls!6''ZA121'3OsjsgAI`&)]Y]KMP`o!a0Ok1VoXAV5_*_^6$9\&=)s%/5-ocYS\_o3lnYdUu6=^"2k4Z_Q/;5Te16!MCM"R2c<h2W12I8&Z,g=8Im?dn-ts?OuHd0*9&m]VI[R*!@(]>Qj%tiTI!(IdXW4%%efe?sUfC3PH,Y75@2G;D'?Uc]EU^fDp@&b-.BLt#MF'djEPrVp<WIW."1sdOkP2<:RliD]+A8dT@k>Y)q@#'f+JT-&_F3<R&W>4n%pUJ]$fR&ElXTYTbNh=5V03>rF#;CgR:-^\@H<7o-m#DDWnPT%;4`DoIa+)(SLI&s*!Wl,%MDdpoM;JP8TVi$2"h/d:(_8Qs2BrCA%W&Ag0e,t1]%mV*bKU!uJ#U!7c"q49mi11Bt42:m>T/o(QRoic'<Z#&"@),XpUr)%`VKW8X]Dlhh*rmDLj+PGFk3M+96Zn4^JQb?'%UUT>$?jlT7V8?7uFII4'H([cCrMmq)HPOFg3o.2X4#R`i?d4NteR8R"lkfUda.r4t&KoFMUW%g%F2q%r,kf!'"gX#RMRZS6f[A%c%n-m0:,'PPc/j!+(d:5ep'Xc@(G>_QGhVe%#4_+,@?eOQG["l1HdhT-GL0Xh=bgX^:pp_!C6&Uh7W)>Je(o7lOAd8^NUUd(L_*m4k%FMY7nXSJa[iAtp[a`'(1iaH4%qgepdpc-TE'/0kDWhDX2quLnU&4QaLOKi\>?$:IE:\[=7g']G\0O^J'huR<si1C,CKkOq;PP[p]%i3VJ&?hOf).7'8i,NI$d(\Vu\4>ZPco)uAga@9DN-<3[0!!5CtQ?lO)l`^`&5T!8_[(EqcCCj`pW@IrUG>Q*5/-'`F74fBt#c:eq%a2"K<[6R4HA'$MFRDGEOrcqiBUdpLndiWZ:4Y6pk:^/j4a(\(e2oZ:d=>1B8:b`<0VDW=*m;?],3Vc=fZJhE@RWo&k*hJY3@"^4t%G]qG">E&&!0u)[\C`(XB'S@^JC<<tIoGCAJ!;"1Y5ZKW=B*#(gP3cuqpG^YT)9YF\6m3,m%#'Ua;j9n4Kbm+`3e/+m_UC;"85OSf%>5/mf"E$n6%K;3+7QB*'RPP/ZiXPt:i#E:o$2gV:O!psL^-K+WN!_3=^R@W%M];^DF+tG*=b(r_W#>,/)LeDSUhSBDUH9D7'"Gjh%!1:P8$o?HVI7:,^8ik9DpMt$RZt&_K-SuW,>/8Pe>fJL.83fVR"($(p0b.TFNqhU%jPO(t%?)47XP^)"SRE=2fn7nMIMcFh!&qn3%6LtueP+.+.iFdnmEQeiAAA^Ju&1d1\\a=kH7Z6>gYmh,tJZ&V/QRiSU."$Uq_IMO11%PG6!ObMmnG2BX>g*N<_6!]fGMH;,Tr\p=%<ikFiFDV%5gE>;H:=M&2ZNXku(_3o8gb6M\*uQID2C(,D'q7.-?1\Y=a-Ziinq;dN.Ib3&?2'A%)\;Gi*l19nNMn62+_!gm_7[Wm%#!rgac>KmS*oMKD]P.)%fgW]=FRZeE+46W5%-SG5Nq.<$I)dIs"2J/]>s$sE]%Gf7=V.D=Kc_*S>$6*7gRSTY%9&aRQCOH(-fSAB%!iC6;/as<l(0E]++_bH%$$]lj!9pJ"1SP+D#>YL8)$C5\JL?688$$G+g+^c2<hqbB@=M\4E''-kcpbu:@6"HCQYSeV'bc9?m!Lu=%3!8(d(_9IEW0Nl.dt6&dj\;O#G9D3d1AeU4XsOSr9.O+i@l;N'?q%;uHK^##550#C!9'm]Rbb\fr_\l5fuho9Gr"m&@c:Hr4\EN%%L(i1Z3'aZ95$ro2Ce=+Mp/9)Q"O71s<%eSm+;=0JQO#n]OAuhohW9:mpQ^TQef79^ck*+h)M25LljmFPJ-i_?+2"o]%Ph)`bjO[4%_S[QFr!dNGkd7M>&&]8$MNmQMBeZQNOH$ThB[X$qK*r]e:q(Y"XFL:I;3+8!6'Zk-J:LhH1qY3&c/Z<sOFT'`@!L_S#D=&g_&=<2%HjK@na#bFF>eiVp+dq4ren>f("s8S8_$<^8f9*8,TEfNONY1kk^aYqf44i1Aet*E@V^r^j`/m<]T\Jn,5VB)\)g"6JEd37CS'Il)%_L#'mpFnE::"fomn2C3KX.B#q2brCAN!q4s?uOZJ-]<tO,;!N#i1UL<4S!^s#J;dPfq;^lAfRLq(#o/-M+'PPKV9jtf8g)G%6#nR%`WCl$1]RbJa?$%*aVRX$pn<D/$R:su"NB:j=XKoRmVbE`Q5L7[J9%s@/&!$6Gsjb<39)j`bHrfCC?E*E67`Q6EB("(TLfJmU@U'D%%RqolN&%JZcp,,oYds4)f:KoGBFYN(C!U[["E?SC`m14n-dOs3GUO+a\*cL0_ZZ,)n?XB'`F`-_PKln<l:^1E"p5;]LUj#i(dJF1%nH$uAci=TD\]'!dnR0pL3"'%(/OS"W:D(7OR9g"=K_<BD:;F_l,]f1?JFU-^\FFgVl?4VVR1._!<b=)fjos\X&tZHG/17;>c&#;%%S,"CC7fc&,GV&Tg41WeD<e)s`OEJY^Hbai$\6uE6Nj6Iu)%V?F\7_'g`g5dI)uR_3?^%;d#1m1\X0XS5=NnqI6%\S0(u*lkV2J7<%]Ql'i0ajG:c297X?Aqs<Q1;k([=T>&TA6:%k/KiKKYopg-O(9GooqZ[s!VamK%)/,6XFL^fJ>sZ=F,28J3j7m@B9c,h*JdUl\<9a%RU+o`'L%9R5Qa[?=<XDh7jM$N#2%\"=T]5&+M@g]0R8#`g]1/).L/`g$?-Q'KH<h#q&C]ufYRU@R-1oXR(3AWQUbhqJqk\!^s[nh%fNLZM,(f%rQ_Qa+.OH8=]0MJZ0*O3s=99_MGWchV`uP8t,nHqchlpf;XUQOX)H[j[.JW35k-9$,qmc"DQ:t^P(uQBg,_0Z\9RQMb%e]>G6nVT_CVcFQ]/QWLk>o's)YQ50`,-VT8erM.t3'^WcL]ZXuMrLA_iASE\L\R^V);.JE;`9I=BlHT5JUE_Z,G5+hO(Er1D>4gl%6Y4EKHm$N=Nt"P_jCNP*KRK>5)G@l<=da+1^r=F66E#WQJO[>67@9\>LH%X@XI4Y\"e25Md69f""kf5OU)mD:Y_]q/Q=E*/&!<P)%)[J*&*-K:b%#FVFC[KD42D>b!<"rEgc%P<c=ID6U5*F@!!naCq,7OWeAnFD5EP_u0g3G:]S<W8[`<G*p_Zeu)qrA&[#f=L'?h"P4%crSatP8#^]WRAcR4OF;/6b"L9^)QTQP%7%,*:K;SXeAERq2-Q%\1^6pNf,;0rC=b;T`M.(^JRb9?ZK'GX9B4hDOpt7'6Y;f_^I7^%LWNX.m",&!?la.rN'"1!<5WY:Kg<",L(MA@USX/5.'q[D;St7F-9UGX&^?*LOEPH>4r=qAQKb9JV%_&7B9VH`qKodeeBEM$lVTDQ%h0k<[)m'@R@KW9jTJn[\E56^7UWCMC0_:F#_/<Dl%f6@#Yc&dtAXpkZW8_FpC/,Tr9Go%qPd6tWLs7Bh-"NNck\\4XRkL8m3;S@8%s$Nr/?crMYNDRTN\"./'/5]NR-&^V$RLU%6`fbT9[6MHX#Mp(uLHjhD(coJ[Y4@fe6iEIp#O0WIiA&0nbR`!LfAU-g;hRJ))9iK)%1TY.^f90kW&Ms?o\HRp(D/0@.=aIaI\2FLFe90pqbeRtJa(d/5?.S?36'N5]X_ca</UoZTN"O+i`SKSllo7lGHc/;3A)2-@-M40d%&V4=\TVd]%Qj/4I^]G:0pk,\d50O-"gL\KD2<tJp>d3+J#rXVnZ[da/N%V?1RBq*h!IKbA_V%6:-60*-Op*mTk(.+=9i*7UK%?I*%jON'N(fWC<FZ%8Ei<-;;>]F&,E>pU!WH(OE?M[oY-6&Ysg7$I!$'-"3#UIBH#(8KB>>sEe\H$lUA/UjCc[.QTMiSqSk`rVp_as;)%2obImj"KC.CrsY!qt>!D$k=-e(^uBAH7#nf'3/5l080K0J71O$rY#X[_XBT'mWL3PHoC^/)TE@FP?\@j'@$c'#9!baiuC>gL'5`r%li?Qik)f*IoL?_4nBR3e4G)=PTYMhh:Ws$h\,g-DNRZK4j<fg?0b<a]<""L+*[mc5CVY6Tb]Z$E\$Qj^,:!F;^[1*VNW]WY8(6RS%#'OJ84-i+HQJ6ii'rMAFn:!J9WWhqr9]frMF3')-okb7)0G4@=Llo;glS)]f_*NUu@kYnX:*[=n%UA%.%;2$F>bK.o@nFm/;rBU@%KMu2ZG@956,*Mp]`!/u"R^?u'=q@rI:Du#"!&J@!0ZI+\/amjMJu^'@d='OK;*!U[mcBeC!_f##O:7`0?%dWEOgWr%gE'1*/:YoG%1b;nWR;"A9D!8+Z`,hAIJ^oOu#6T]o`Cps=#"BD,XiBG+6$qi2lPcVp-g[>W>RPh_IaM+$`"Y#]f,@_3+EopeCFa`_k)u1f[0"QK%FAOi4MgLi."+((T*m3CFZs1""(Hq&'VmKrCWk1=%X^O72%d,ZWE*GU/LG8qi6%uB"<f8<"\J<@PS`-.^@%?oBp5oE2)9W)`/>a[I%Zc?J[*!-53K,:!rBkHTiL<7j$QjeoXmPC@:?eGo+'uh7.%5"%srYZ0\W@ruEEU"L,CJ(0YPUUhG!pd(-L\V^$=r)o1+p^P)g<E*!%^?!87.40$87ZSVa.l*,=Wd,_F=AAQ#-F?P7?Y.HCTX(,mH,dk3dC@7YR8S!5pd"U&_A^i'WX]PmbCYm2OY:p!U\RdT<32FdA*22H%;JkjiDPg2d%"#@1!HeEsDSR*q-JU==_B(M![:^KTDV?&.%)fdPipId+?l8;ipobd2P&%eJIJXlhSeI^F9^QFA=U(C90u#Z_%M&;e%RpaSsN$e-(fE2^9ml7Mr6\'!2#n#V-<=]Ro!kh`?1)2N5g3H=HEWit,d4Som0G%lXcr?T$$3(@5"le_Z#Er4d3&V*X@u.T6<lZ;`%Fupje\2GrBE8!%n'D2iQl0>#[/D!SDaH\3VVOCpe=gm\BkCsXSlFH1_%/;+T'c'24L-[\Lib0_T?D.O=fS4E5hf\GtTU=PJ;YYMg%OM!WWm!84%"9YCj;+r3mcA*?Lr+q`8b\!J.pklr2M^&7LC?+P06SJLD/>DCs7%$5dmI:1tXu_goFL3;6-NjMi!3J_/3mJuiS%h9u%>Em`,j.Poj/CM2ATj[F!(,k(iR)]qrNA*-qAt/&)LmaopM8k.d!E[.,6eM*B!c6hcMZG2&s,%Y3VC-pZWjHe&dSh#'7+80)XUKU2%Pqooo%.6h,21g*51F!d:!5O3B`kGrIZ2>a7>`0Ic&I=H,%#_ATf\a&pArk1"B's\E^fFis=Ou=fQ,J>$`,3Jf(<l;_q>k."aq@:p%8GH?3l`2BS@WS:qp`*jJ&cQOPo&+,a3@g(31u4D/\nXq?OoSgc!s6cjmjhqdWZ?i1KNYRC:RkVPL)_qq)".HN4iAc)1(]DgNXR)R%C,8NpL^b]0Tu1r^B4OX)<tD&IE,[=uR.Yo[e#s+Pj\")P(==rkL#$hY"]Bo>Sb>XE(;=>.Mp=)'b_e"qO:3-40c"<jlFjZuAkXeB%.`=)?GDfufg)dH=/5SRh/)e`.#%fl/VD3+46/bo+CCX:&0NkGpjRs!.@tMtB!h+Y=GS/uPJDG3q,'<>IPie`$DE@q8n1OZ%1!0QO%"amlq\"2YK]?^YI!JrgPOQ]^IXs7++2Sh@X#AA^8!gRurh,rJD3E%f:B&Y]%D?X&nX*Z]/`4@+dQ6aClS/^T.gKVlD9..f-;0->W%$I17)35%I50K$(#7Z%aI>N2di=,2-OG^uhE9=n:A:`(;a&-YT+=W'@X2%"`-1GV4=b[A[;VB2\JR/t1"=8`7[$b:>r'Jg%PHjkoM%CIG=E`PLqdpa!/)qfb]DBCiflOlQ*aL!`M/(4.W@9W1t0Wc+@uUE,I$MAc-C);&Qp<5D"IpC:UB$jW&TVhHJFTMA!rE=4J&`ZlB6%g.ddHTjpMMGGnu'Sm^bO6dDp/dh9g:_"B6fFQ7\77ff%a"q]0c`X%1Z5n0<em\Ck?6VuR"XHkHW_kc;31I?$O6\q1h4+i>PqLGG=%4p537XX)8`l[pj-kVWXl9Wfm?(XY/'!sc0RYbR[?,Q@<bblY*LF"G\k_)C58.14B\+RJDCB\[d?Wk^T3M47h[a\Ie3n]@om[5%B5%0#MO9n:Wf,'AEXla1^CXH\*,C)DFouIUk!=e"RbD!:SmY;*l+V"FGiC7+`b1_7243!b)7SHpC0%=cX>oG$*."iim-iGP']V/LY9G%G[atm63&"BQXNb9o%#/l+R5!E.+$q<0m(5/,4t*MYaP"a!C2oY`3#N?$jA^O2r1amR##Rl;QT:Q@^;JR^RO.Y8"5^c:@gE'6fVP0%W&D#l"2#GNH5>h?QAgQ.F3MUo@\tG!m6D#6qsfHlC#a"=pgJcEDsNlaPZrS:(S"(HbtPpG]e@e=[q3tJXm`07=U5;_&!:_Z,,;\#%8C%?f_Z2Gt9>Jdq'"m&eFsn$`\TuHQ<6t`&IV.a^]:6$uL_FCBX;-@j1TZ\q@fpQeMEB(4m8eY'JIbf<<s,=u2M0-LQsWeF,''"Z%)K-Cp6&-Vgb?BdmP3D;uen)Zd!,nbM''TfKe#ch6=:]XbI+2&>N2YJ4>mr5d\RZ!OVVT1=geN$F&!1gR9MS'ggeYn6Ji(pdT\iH@%`&Q^.PH!dUrraso%tap!*-jJCDL_m53=&/rNt#U5n*Z0e.#2g(+IHRU_6r3T(,-WACt$NBCN*nkV@Nl7;9f=P#RRHN4PXeGG]<)_%)Z`GATX'*6\/93g11omC1H-Q;fr>T7_)[nR2XC0H0XtOr77K*=qH"&>#:(m5gn?lr"l;\@`?L^Q:!/g#7Tm60<!0j8WuQXS)"=eD%rpu)No[=6m.g$:!kb(bf.)9/4Dot/+W46]'8@;HN2@PdE)g@=elp.LPZB>uWiDl7DLZNTB/*FW?k[(ab&G'`]%;r^!%*WQJ7*<JS%c@W)QVq"u$J_HU7LU,mr*7!T+[,@`0"*X-e<BOCuf_;DV!qi8j/5tZa+ef":K)X*4H`%Hn<YIV%7q;4[*c.q^MQ*'ca[3.$]U9u"%UiCI6ER`ca&_ak1f;&dfT)#2W0:[cbSkLZ3]46Al&RV?NHAU2."&(eJGI?_fr%$V\^oS@b?sb@\--1Tcdp<H;\a9p-31:#cqj'sJ%!XV07@00i]#?m0Sa#`_55`#LmE$80Q0b-=-fd]IHf@U)0=&Z!]B#L:E31gp&k6U6^.BZtNe?7S0OSNm2\$NL8X$n'7mN&NB6c*M#%>VP_^iVUV-_`=r2(0kkp'1p/`fNas'O<274JCkm(KZ=Q,*YN)I!%'uuGQKG+>J8\%"Y,A6D$+N!^iUY54j=/a[^cK&cRZSLi-uh"%17DoP2X]NrefLbMCM81,71X\U#*)!bUmX?SC"ZWZ]Ke8b;>-;pV$nI`5*]!5i*j/%RMN_%W2hY.IA0dcHJ!8YVK4n'k@sE?]/*Z&%fC")q;AnrkY)'s,JCuOKZ"BpSf&/7L>ItN:0ZjFkc3rPHdqK[tG2"%f4or9'bTh%-&u17n?ed#J=!L)3NqCsYEQ)d39?S)D0[Tno%.Q0p3='IVV8T&_0%U1@t%L72>RD`F:H>`5k2*nkcCFN%8/qD=VYrNS$1]q]g\Dq:S$j;%G%3Id:#Qfr6ilR&mhIo6d&mR=;l[i+?%'OLZ#dI`!t2i+Rr*$EgC<]Rr4g!;$P@M+n:n/m1>#oo70X_W"4aeFN#1Q$$Zf%15rcL\t<5tE)`aLMnp=\WJuXC4j<D?:uNBrfYK%-%J^21G>JT&6UD"lDY`,2Lkfn/AeWC+'*Ts@?3`AJp2VW2E>0ubr-?gN.PkF/$r#<3AAJ($5n92;Y,?nT*g6T=IF*13aN_oY)@gF%UGf!Cb_sE,$38@WbgJ<aQts9i,KRiF'J!jJ0+!QnY37mtcYbie8EVGQJ!eL/:;Eq3^emnH4'O@t*95gLcllStZ_S?P(*ei0buYo"%QFPq]ER)Aa'sB+;_nffYXJn1d_e+T-4Dl-hi.;>K$)]dR9IPs#D09ed[:]XB1/f&tD)&97aZ-%1XKYW8E\i7KP0`g(JGO(Y^Ll`#%XD3sV>0T4Td7^ng8G8OWG6QdqEd_M@F4^J"QuNcpejhKf#+ioQ!^q\2IIrYKA](<%en2?c+f/1<!/o=>e>"?L3A04+R!di@840uj%;OBSBCfmFL*96%f/#"r<4A3].+NIqSRt@/3-"J][GJLa#2iHgV6&2uQi53]=fYWEe5ZdK:==sH$aa7WCXa",&5d_(:=D<I4HjT@o%dDI_k26`rOG$_BM["N_W9j!)s>2T%h,3.;cX`SVoM8/N1"\eM-Z.n+,T[j#mR(Eg6[":NulCX"B&'5h.5&U)m[UD3PC:!:Y.]Nbi%YoI>c1\&M+2(f0jH:/aVUsL)*@iG^o`gV&jQ+?#h@9i<R[G)7fMH-ZJ9NUWboOlg6inu8j*MEBG]<UR6!#a;iiLF,9hdE'qX=1$K%7S[\:JpSp0PPoanhLJs#*e5"8J'mnT4,0fZT_?*hj8ueHa$-$%2ef7G2)9@1-VnUT9Z1RCD4WV&QE,'eQD+eH)0Bf+<X'q#R]b@H%9X)peHt"o@jEg^?.PEo>>?%ZIbe4sh-.BNE*"%]b_Hou]Dr(9VZ@)gs@uj`R)@W]W'pra#A`2Ego1]b2o7"Xina*=4!d<7A1N!Cl%@eCPWIR]EO*C\tn</^,\EEVhQGf0fF\RL;\X4`S<GD,.1Y;>!D<eS9j>%Z*_c=CMNk5O*Bj,*^a:c);aOp<mA8BVb1ZJ'7V?PpYj%9Y>,.a9:@N.B6GCR6^kA>)#*kTK_0+DE"'@<Z!0Wec^`=Utk#mi&C68'jrWp(NY++h#IRa(#t1=,68W,\U0ZO:$rc=k--[]+/Z`n%(?Bn*8k@Ab0/.HZ>`9(0o.AC!bSJe!W3M.=M]J(80F.Wp8cf1BX!N<s;8L=+^)FW#r7($:f^<(nZ'6I#aSJ?/OQ8I'ZY;uL/i(?H%Zb[o(k)Ee35U4ng2_iQlg"^%F+g?VWmq;oAL:]:ON].qE7inleqnYsV('*WCla\J^PN6Ga`2YrTl$&r*b1pALY_ccr#ZD^;.rEk8%F-SVN4ppQ/n^sL(aM'*o)8pPA%)W\HmX&?`:ZhpE]GQcAFBcT@YLn9(To^0T!lg*VA&@pQ0J9UcgGN(m]>:_I$6,B,[,<?:Kn_Qk%YM?oQk">3?=#P=?Kd;09R'N^eZLV_%3[tQjC!hUm>?l]hK>W#qTJ;b>p4l)ud%;:c%@_\G=?3JX&aek:-KA*"P1Q=,>e]lLf^=XG%L<.AX7CLM###DC+oYI_g"g`Y#,J^ojbcc(t4C)+]F';pk?=>Jq"Gi%7-$)9Z:l/<T!u;fGdjRqh&.WiL=^RhF4B)G,QE+-t<X@d.%_BU`B5g4oTL?N%6nd\N]G*qUN2Ci(#%cNNehgC1spAG$P$s,nPDPqDL-n@BpJ8Q'j^UKsscq^5eD"G$4L-Hplg",+&&1l$]:Jabo%_24VMBlBCF>[@3G1nN?K#X:"X2*)8TJuU+DY6*;!YN#qHiad6!QG]q=[CW,mS;DcO&`7FB^QmgBm,tSp"1L3PpdbHSB*.5sTe][s%`n%3L;;mdSY"Tn(HXW27WRB%5]6-i/%90bBYST6>p0i[lJond<G3cZ"_M%Haki&$K9.#"j=KD#g;VZ]9q]N"@dsrq-D+Z[H4sUeq%\:ne:i8uSX?*./g"G"\Jr#eWeXU$u<rS;i<]//NTDq09/!J+cr&G=R;1Ln+AQG_!b+NTAOq/EuhLY?1"7[CJJc`HM)-jK!na[*HG%HZ>mVF[0Zmh3p[CjC<>A[i)1/mYPdg&H+$pQ[?$\b\&fqIrr&X24YirA05#ufWPOW^fl>E,>JWY!=2q)]@iR>Am(/]Tcd'Ip@cD3%m05U<Fk>M)S@)^i"sZOZY)VoX&a.4k*TjaLp)F&ujFO5HJ[.<uep)eU=4X4OQd)QHl7LG2[fg(n\FlAnRteMVp?0:\?3@Sl-AfH3%@)/PC+QJj;X`\bZgM?n\(9dh7-jII+<ftcj9nI-]q99[t8;-Lj*bTFqflCD%a_oiA"q+XL^unt*e/ro)=DX)&N%aI/YN2P`>!1&3%>gHmE5IRGHS@p+q$E73ierR]e]ht)'l$C$hX'eh.Y'n;@.0uuZ9f1L;_;(9cC=_-spY^gE,R3"MmNO/&bZtXfs!*>d=(;gRf=`?p%`gJPGFg^\_.[2`2BFY($e@=!bUYTsCA5Y84K#VQiY?eeM('iiY64Q!K>%(o[;S2"Xe=IBM[`H=*MPbBDlVV_e%1qmgeqt>]8EY\f%`,47Di@!d8g*qs3PBe+?/h!1mfI$Ul^#EL%ZX&l26-/9l<b'/p]/@H9A%UQd^m9W$=4;9G"#[ML^jHkJ-;\N`AJgrp*505s!C::5%eVJ:!]q8B&!oc,?3m/YbE1#UlQrMP9Ku7jW<J6G)Sn0J:>Wim><!eFMElY0^,OJE>XsZ[l=^c_X<+n5[A#VWj"-@t6buWQ3E3NBu%147B;iSBer2H@UB/*t(@D)\+c03l[%J@GVM2?s?Qg;1rf7i5E#fbQ[]bQj%G(&/(P\g$3T22g)k>fAB\Q^>q4cg;d]C4hI'Ebk$>%`J`K*Xj@GoE>e))nMRaom-%NZqVTS>]@e?aH/ok/H7`R0=-Pi\mJ`774*JQCRX/&KJ9YAcAKA,A4O?\QJj4f]S')+YZ1*:ek&P%r%DK_85<gFIS"bOnHg8_t-('muO1;PljJGQ:h>0^p0rfJb%!'_XTf$^,BmY.lGHP9fb:\3,>?B&jBL2=Q/<A4HJEpa^UaC?Kd-o"uW%JjeLJZnYS&3ci1N]pR;51cj7l]P9&"$OSmcrJHn89;f<B\qYqAc.\GV[tDCKM.g+&ThU-ABfGuZ^6),=#:G(,PNe/Fa>E1!<PsE0%_tPM=g/`_O]"t5[`1S[V$9NC`\n#f]&HHb/?*ib7L*Ue6gUlG-0";+\Ys[OabQH0o=$*N;PjDtNeZI(KKVMkG7sZ^Ma=EF7I=r:8%(BF</G`9Q4)p]HZWs]_HYF^c)b#<e$C9&@lCp:D4r@gFcQl9qjg8)V5$Et@pe[5oM)O_iNfPH2n,<+Qo&uXiq@G<2bJR^S:$iqA,%B=Up6\G`[u#iE+?Q_shV6to(Yn&jTikB%XP#[bF`GN"]%,]d?4@YI4R.CKY9=gudA(rVklD?pPcVPdP\mV9?c<c#m%fMrBHgqaD:%Qu+/M!sh2V'mkLWOhbS(`?nKjig*IH]&6L\\O"*D4&Qf-7Ui,]=RKSN-?3JdQ6#G`<Z]@WN%OIp.555NeJ@2?ftq]R)-C$R;',Z=%edbnr!;iM@+9RsFJr2[/*./`9?JW;R<m"U@F-0*OfajiO&_Vbu>HMet;g_K[c4<iYpfk0oc)SV!hq;c("=V:sa9<Dp*35'pm!`YU%1bA[DF6CG1F$V3bSk^=A)n5nP2G#,,Mhe_=&=C^G.]iUUk(BCm?m-Ui@V6ApnX2<WJE7af>J'WGf(?$Ol2nl[f#OB+YXY]QS7OGi%(i?5Z\Mq*<\O%C-%3VG%-!$K9?0+WChQpKaLUeC*`M.Xi[7&Z?$DZDDAAXSc?jk\T&#blodd19AX6pf9l[8)X`nCG,/-iHL$CKfj%JHi@'qh0<!Rti0)[oB4[\6X"n&59S[AG%eH@b;[LF<nN90p%<*G,='7cDQ&93>$*VSSDOFhUQ,UXA88pS!I-!SONGVi%)lUA;VU7%k6!7G\_G\*ZF/Ai!;0gGRn7GK!MbRbqa6GTF7i49<U>9;4L^WurX[JDA?:F.o:!XBd,0H%,UoR(=QVn=%!fn*=]PmrY:ubc8%&RH%5?@9qE$\ttbsQ=8Cm\FQ2)Tu'B7*?FgL>(XfR>a-@OY_.:X).7Z*XP8!6);gaeN'gK[I!#CEpYRZs)ff"1>t'fmsOC`DXSQVYuJc%C(Nm>9ZTLmL+Ph;$n,=:/-Gc9[s%2r,G(`U6PF,:&AV"6ZaC]E2MW$0[P38Fp28`;2;1R,[XlI^grqh'Aof$u9j=:8R[MV1r,0uf%_d6r"*V1SMjk]l/[nU_lA:IGb%B'kPScq;CJ-,sspOb!?eNNUed!^:TL?Y:3dqYBjiNtQ0Bk*d[.SOGnfHIK$qeiYH4:NOLo5M39%f"`2"9Zq%/45KeLp&hGBjn.Z>CRkJ![a*g6OB=:]N,ufqC`/.eUC!g7!'X)S"=4:'*td*lo`/22k:p@$lpeT=2EsNgZ!1%0$WM<)%D4=VhAi@,pR7(R1_3#_H>;F+e&OZlReY"*(:!!q!&jMb(aIA:QP*$sH(6#S&>C_`<qcI\8Cc6&AAf$<K1$'?d6XZ%Ch;1K<>V:=6%HL!I>kbceD&V1%RQ2GVX.VKjr`/NEC)+N-b0gKu=L<>0fI(IfFUhWS,ME9\@@0I?sX+S)!k%Vq<72udn8qX+>3.g,/UmpS88+Whf%C1Q"a^^2I@RG`,^T(+<2P6VR+FZ-Kb>kf>L1oI&:X%n)LZ]uPX,6/CEAtK6#&>%tJM/B/'r'E,J\X;]4fLP=T\>ql&?(bFb;S4J/%<qlIG0SU99<k[O!OnqdCMTl.42m'KqJ]>7'IBRBm4J%hMJLf#kmI/dD'#[okLiXB<,4rmPh;ldBUcAm]k_3I*/+XqcY$8/,_R<Xo%BB:4gFK?#:*=qH"Vfmt=h25)-T!:Y%7L++Hqn5DlD,)&G>$q_U_lH)-@(Uir4&61FX6o=-8I9\uh8p/:iN-Ll+LKFEA;"C#O?"f@%qA1Oc.Uo!e*CeMl#<+c'G^SkDR9;tJ!?]Qcp'am#Y"Or=D#,7pXYFX0F6$qC2E/6upM"]JYQpQ6"Z1.A$FD'-'@qLmU>ZOaTGcU1%.isAUD,?[8-93,1Mn([o[S9&;h.D\uHPl_Lh#tQ/_Z89?0GJRQZ:74H#t&!7,D(Qsl"h5>Qb1AIfX&ir-9/HO=q[@@W9OJn`>0=&%i\b@miJdn7$QJHCL/S3:iMJnagYoT#?-I.NYr_^(@W@qZ3c*EZ>CHd[Ztibu6Ub50:[sWk2$d5B*^"1WpJ&SE_?#`4/;\46*9NNO%`%A4LFgKHD)!tI;#i%-m3F3'PJF42o^1.SKZ$*c.[aU8mftK'2OF6<dY-+E7&Ned;Z"[_@A4ER)b3j0p&Jh-Cm^n%YW[Yc?A&.rL%?3#r-Ansmq!tYoW`Q[SSQB;?Y^jt<:p&V'8CSo[MU9J#KE*O?4fAP1-\3rI&irhLRBIXk#U?ZDp1D^ge^.`Mu6t3-gR5J+<SkK2o%nM*jFAV.p'i@BRih,jL?)$nT&()oPMHSTd!28PuR2f*7mF\,cSdtWdh_E11]DO!_Ua?[+jSb3@KoP1VE@tCKc_Ho%^LH?3[k&!&(%&J/V;IbWsDaU-j92bUb/fWkmt2lr=ae=@X!B8!9hon&D3pZrt5K-c*iYu&e]/F=ms3SZ1nk+H&rhDL]F(RJ[<18=jhSC*3hX:ej4%!<c,@2F)G=X"C?=0OG8qn=JQZ$qXWHHbilCFEU>"mc[9]?>S_@M:Z4?]]3`^ajom,"+RlYm(pP"%$s%%gG,VV<s>J4R_<2K5L6pO%]6=`hrITc!`e;[?\.j;TMF,W>Y%)bJ<J(_04nE0krnCZb=F`hQ_,LkGL67@4g:[KI.D[hOEKBusSpASkSN<f?T+KK`h9NKh?V5Le%4g#8$mKHi*`L,s&;&Q"4#nNifIK_jA"VT?dQJq*bNY.NpK[EKBBDs7LIWbF+D[M<+")0!E'[InW/e!(s;%Gb9id/h([)jW8b+o6l%(5s,S[n]r(dQFHoA?qW)rnmtr4WRT+C"O$Y!oIH/<1>_tEc5qF@Tif]$uG9=(aoWeYBi,H]69B8(]1]d_Ip.6g)*kb7'<+DN$-b6%*eD=#(u\I6m8[`5kHr%^*Hh8?R)At]J4$s-]"p_+N##?\o7^1$cVNG-51=g(Xrs/eHT8dBdNNl!`SEu;2QGEpi[VB0$)2t"0!C#"%3fn0r#?V-W"3T^K7Pj[TQbjH]4M*rUQKf^Y7WPm]d^4BZ!RG8m)a&3WUt8^gqoE8eO9_je"qo\FC9:5ZO=K!VGdCaRhsNZ;BTIKl%[WA"ig]GA0-?"!1fW<F2'*X"_2`E5he5AB1DHA(`:1</u4/o`6J7>4&CB2_X]B=K*U.pkHiOj?!MOcF`9uD]2<r-ls7p'bQdj+r^%>E[*N4T`D)RJAO%='Is0_1X<pjCBD0E2NrM[os,EZKDi/ge$t3Zsp[A7tRPPC-c')m[L6ETaA4cVU7.X"<H]S2$L;gB(5SHBMTX$%,ZPgRqpbcG8R$lc`GNWFk&$T0cd"et%Xi$ODPd7jpN*_[UA^"U#bF,"UGq1jBu_(h0O1a?]J`EO+0hMj>ca;>I5P3q>TO!.e\;_m%P/05D5],m"bR;ChD^OOLhd1p],KB\K_e$V>QfLL"^9T>+Yiha-m^U.T'$?lXRc(Y$$T%R,##dU&$#(8YB.+<@pK5^Uq6<Z=bdEsQ%`<4gP]P=LJrENJ]46#"kgW7T$mI.p0+Zo@IAR/;<nO0^E]H8P]l)CQuK4a4#UZY!u)X[kGm56`HZ7^AiEGmnk((5,f0aoZK6#Ple%!YOmB@fYcup^G)q@XIN1,&I4VbneNcZi:q9j/M+d3P24MK6@u6Y8sEJW9.bpPLV2%a0hut\j3g2)H2]>9.Zgn@!7@$AQ@4Eps`!<%_h=G@-cP\aR-P/!qlh=X_Q^l&C`[)mg!%BiS*^>a"174aYWal;G&8!3<*o*Ce!OCQ]%EEX>HgO]dcBX7f02nlm+Z*LJDAqR^[g?l%+bR6Yg1JQPSK<$]/D!1Y(pW\BNpLI+/tt"r`@Y/mB<r6\I*ELY2?$WlJo4#r[^ELcf8NTkB;`["<eM$JM-63(ENM.E[)iYoE#YCD%@sjM&KBK,d">6!q&Km*Wh)0D:M:-djD0s4=E:Gob)]+mtS5t]IaTpF,;S.AA%\"3c7W`d6cX!;g>Tp&#gL[enHb_c0.n)STY]@oc%,O?ph/,-+Wok9M!9tq.XR1n?:0uek`_H+6JGh"s3A.`+SgRJSFG1==2.%C<7F*dh<SN`r']!-i8J9$tg7P"-@TH:PMCT*WbMW!<&%UCKO+r37AoJL/F(YVsf8H-D*u]8di9Wp[+V&R8nrJE.:C2L)CAfCM%iKo(>&gRm+^5geGV3(_?Uo_aIZPA?]D5#lc_o[lc0SO)IS%MSPf<eaR*Mn$KWih(B8PQ*nF%fZVNO<n=V0F:/%e[3)o%\<eh^`eT1+lIEQ?8qo0(%KHmEZ"spGDmmLnh9%$S(U%!O3\/-Hq.):]%!9-CqO)8*O4eV&8?aT.A37+FK)4p)%RlAt;CQCPQ<kCVict\d4GmUZsCoaI,'e#o4,lp"^#g[%A47[*M*af6hKc,6VA0%A'ZW8SQ%`aj>I63s)#FM`Fl1m+G=_NalF':e<$$R/o(/_\$kB7WAaG;*j0CQ*`4C^GHc964sUL#p=J@qf>ZdC*E_cJ=\Af%j%e;]QXfL%DS9%#rBci?H66[dspGrr;V1%MhF#"-Lg(@>l&1fhguF.\Y-tIk&?VQ+qnC95q&%9:3Z'OM9.eIK8+EM,$%C'($_0?99(J3,3+O]TcGo#%JjljVRk/>s<tC?&0g9I61#9!)St'<'jY4.Kns]:Q5rX]VXCa[2]1@7f$uWnfJ'@L<$/J!.:YAl5.DZW_d&0UfRC2S+[XkZX:.h+)%i\lp3i<8K*Ubm(j=1i@'Ei3aC5BWr&2IY<KJFs8E,!4^@,7PE7"C5ND*Eb/(rj6)rW7F^;+kj7?.L`F`ESEW%'B?\\P(Cq,ODrjI%gjTt<)]Q+e&7eP?LBdiqG7?%mBCdE0ZTV^O?+Q3W&71j*<!+]nD8cpNnR=jWdoic.16r%l@KjV9Ffd)sB>a=]nQ`5[flOKc(;9(/%:A[fNT5@qrmHoi=C0%@:NUeQ#Y_,lHp:8S5/QZGuI-nu-pWlTFJ3p$V+kj'H"<>atYk*XT53?=XD?V%%fRu3#U%F#Z1r-TFE5>-8%=J0jrG.q5l"6jK#SY+H_2VYGZ7/(#2]8JS)?Or_1#\"\7@NRMD=$u)PCm$qGUfbMk7s>c8[]T68X+B5S1Cp9H's6H,Z>5P%"JP)l%m1+A9S5!hf98opfL1(X_?fMO1rh,`pK*c>i4_;HY=$Up2'j1A:DEgBOSfO.\`_<rfd'H*O4oTuKeom,QYb?3G#oa-Og>iG?>(B,'%_=H[HN4L<k9o7!a]jpHt04sqg1$rqtlA5KXO9MYUm>Z[6m%29V+LBifiJ`@-"R(aim)'aL.2G2^Ojss.=YZnqjt*:"%*QXa#!KH?%C)t7oDsDlj3s];fAptf%NG7F+=AJasZD?DcgcY"pV;UkPkuQa;l.fGPMY)%*A!b;^84YRKhK-iLP"g]VO*]skfbus]I%;:$c$GH+%b;;:JdjBea%lAkjG*AZJQscV[%?O2]!2,*I$+jJKEHI[A)Qhq.1,EJ_`eoIlf=QD+&YKB`B(q<o_F"Dt%X2TE:O=#&&]@d1[=7H`%LEHs%Qebn=.sDeV"J/csfYUW5C\lJh[d"BaH*W#/c]!U'MM9+SW7&m#(sOBn]:/n<[TdMM;XXEs"CP`$@ne<pC5:l]#7I!fA7/T,%7onQ12Hu]q/j?SpVpt[H%t'F_aJpN$^'X0g"p_t7'Ipg%dpqDOgD-f%M<#m<&,+.``S+F=T4$4/_'+R$/_@i7!#Mlai!?ukXZ/EI%9hWDnZ5Yhk$o`2hEl/S^jqK=\-2kXCCte<2Wt]VKZ;mLKJs`^i6LY=?ZeR+D3)"qE`=1($>d*uWXSZlK6^FKY=@BI'%G@_H7#7M'%M/t3q<jn:_R(8hK3_Pqeb.MYj=^[hHE`iL*TlS<iA<5V[_MjZ9X<G0<=ElIJd0M>B%E:N5p]s.:o+9j#2@Afok\^i8S$R0J/+'Lj%\,0npq[epoD4[X)\m^O5iu.T3B;bFYd\n\fE%s<)j+V7)iUOq1XW_,<<lEG3oQ>bN<kJ.GV&(Xr#=-bTZn&?!`Xp,igKBmO'C?k:%.\X\>=4==sp-81K-_M,A_^</:Vg\':+gVs%#.>R"ii^O\VndS1Itjj+J6%V*'uU-P%YlVDm>?f:S.P;2K*i%3l.poK7Z;j<dkXS/%]]Val*Q0?F0M$7B@<eYdRUP.b/uJO2+i8/8ojlN_2f$R)eMlX.T'e3aSep>Qi9hf_[b9jAmaRTi,Jn:O@TM\Tm.:?R1aQph-<&`U%.4W:V`*=R20d?PHq-((6S%iF9c8)NR]9AU?I>Q^5X8<B_&_>T86KpJr]S\nEDTM4:a*1Y"*UQQ$;qTZ=f;'q>O7LrjgU7g9i56nj%oAHbq_I7V,(fG;tkeMTW-:N=p-4^]?>*qX_fcSrN,0\24R!OrLD3e<B[7>aXpDq-$iRh!(nZ[;<b(Q&u%EHt?7+N%`/G4-*`3CHu%S&H(.3tnGcdf`C+@bN#\41h/d`VPP@P?'VPqiE&g(-Dl$GgagdpDpC16nUH-^Y;@aXQFBllTAW5S0R@*k=Fflp!LCB,*=;f5'^Cl%aQ@JIX,%O\.U\(bf7%QWc7?huA$E\`lHj\pN+VV&PlM45261kTP-n1/fM6hgDMY!:@6>kbH:HMoe%>JZ9-d[t6S<U)(-^Oq`N-4?%br.=q;c^B=U1SSXL<,g`_"8jB`\6,EW?);*E<E\<X>-iWK5&3$c-M!b0Ru@CqUE'VB3(PT<H)l&,Oi!m`!W0^"/E;JZ.Jr>=CMR^%/CDr"d!);Mo^!XFbE7?)(!;m]NLk?u>X`5giUI7;o<DEB2=?+,N-&R$4Ci,36T3951X8Srl5L6Goo(CfkSA'?1U?.[2d^_!0O;km%L8S4H[2G4;%A+*cR)e#@C7F&9%eDWPbE191imsLCr=!Shg>9m@B'XpT2hR]sV8Z75CWcF.#MW!mE3KDGRt,*-#+gl!9%Ko4p99)L%,GVol4VS".>q%^mCDX.]4?S,/6fUig[Vl*R)E9!/<KB$`h+U1@m$qc^5+k#GfWE>1mHU@2nZOMP,YdDk]UH4AimN@m:<\GC1#LP-%o)[]?/=>\qHOcWZKcShMKZ/Af19K(b@[o*3%0SVaaut8B@P%7-@PWkfK;#BbT:1>;!Em!hJD(tLp"qmU"7cRBm".+]?+/',F6I%W%p9.164A:siUNt?42sqH^_31KKLQ,a0N!YR+*kfH,Ml.&8\.M\=C3D*6LFq0'jYD`LM#r2:;<WSO[O!,dE58>ojU/3T&Ps,RBeEnI%0<TVXD%%q[=1]"F=$_'3hcYmn_+M-dN9W-2T'Y\R'=b_%<t*AZ>VL4Y<j7+.oY\UOpUkd?ipdYET/BYr/u(:m8U:!C6e<@mZL$_a%jmKs2f<TVJ_KB;ik/&5L^7EZBEjD_J#)3JTI&*_"n(0HU_tDedUchs7_$ij!q!p3-05,\Y#.U53`+`/!%'%?7>;'MoMhok)crdAP%]afEb0cef.FA*[aR\=X<*F#IE/sTjub`4%[Lms#3'r!#t&SP"8\X>;qLM4n&*_YO:p^dI$2ra3FS^PEX,EK'dkgEK@;TEjKVT!n6%j00FH0\o3sJ;p9aGK)?Qif+6F2I0gt>BOuH?oO&dX+spoF$,3=4?;0```'l"P20a'd=-&UN&tFkgS1Aj`SC.*_f_iG+SGuJg[F.,%f$,FmnHam^J-&HO;=@se$I=%)l9SdULbN%f]4S_(J2"a3?FVb9`_;lN6OH!Bcd!@*0hf<QkrLcYA%0G^I5as(G:S'DP7<`S4Qf_*%mr:C['>&NhGt8RJh'8YtcM0me9E_3tXIQ^nhD#(5H'";,Gif[h4PXbZ@><IE,"Ptr@dUY0nRD0AV]kZ1+Q]@<m`e&20II+hD#siF%KQGfFIl65:&]#SmM.Wb*@,&#8@596H<l]JHK\5(+BZ=Z\f:3m;JPPt,iE6:(luqhBZBgu,E^9tBeBHRD#67e/RG`CGA,tV!A)310%[\[Rn2f-02BZQYY8;J8iM\5[E9V.KK/6fmNEGF'+LuFG>[EeABnp:&UYBGV.XMFDun5LVCg#KtpgYG'[\hkZ40VS0[ik+U;B>J65%U4$,hID?.P:>l1b8';-?!]sF@:FM3>8ac=Edc]:*\Jf5cm^[t59q?9\m?qH+^!\LD!QSGZG?>9`'0!2^.,<BW"5C>3b.s:1ah2o)%UT^f^5,YG$VHs!+-4s=N)a7aM*g;'pds+G@=)T.ORCZLu0Kl*Noc3Zm?FJ[2/T"C"TucYqYdU,]>[KU#f&VShU0Ca,^$/gk"hd(,%m)dh74K9S;"6naoh1XJO*EF3"fF;qt`t@H[os+2^$^d1#g5#$Bgte)l_s.PFVrs5q:tX''#1,dqi+RHER+bYZ2K;oWR$Z3d9u-)2%GHmX"jQtCFn:rA*i9%*g#!Us:&h%@ZXf"=k1U8$Wm"l%l7Yef=ScX.%"`0cAptQ"`:eV,6UE"f,*cBUI'ZOdX>QY<R4DXg:KKWPp%lVV$F;G38YjS:LbBT)*g:[F[GQ.+-&&DUI[R#H=YqfRd%1(C]?#%\='i/,HkMg1><;5nB>-9f8@-05UJ*O(6`D)j`Xe:+c+eVD!/%jiW`Q:0+ue@uJLb9@ss1D4W(qgJ1!Aa2"$p:Vb#]FdB38W)pSP"&&?m/tT.T4)qn[..TE;`rbkOLrtHDpEY#E-n\i/B3PjSUMWaI%`OB#Y*^Q3:=O1^qIlggCCD7S#=A<K@#Bc\%KOhYm[T=ei!%4p*%,LM(fZRqHQ!LM9HPmqiVd0sPADHp[8r_.%Nso6JL\1[f@@eZ#%:CBAB\m%j3Y_Ki[]%Ch^PL*8*VQIfN-^d_f@H(mH')8IIdb9$P^l">0Xe.@ZiCiIg)G%Mlg@!o3a]_%&^h*4dH'mUIg][;3$]D^S%Pd>#rM/h1o1L,c3G0&l.8Fo>gO,NM^$\V$Uk.n?-8A2Y.fuC*EY=-jW8G[.7@6r3pJB-*Yeb&a4!Gng+]tpj.Su#AR]t<Bf;*Ym3%HXkb2:BX]dAPV!J\Ab8]a8`\K^$Hre/R)Lfm%uj,<P`-?0%$.'ZA:N)AZ;r48&q.e2.A2i=WUYTR;ET!FVqZeY6/0,/p'#&(i9k%%ZUg#[#[ghHZR5Q8)>V/UG#1^0$c2cRCi$"oeq:+Z=%,^k(!!?(s0KC[iK<0AZEsQrreCO`)&0=?MTCa8N6iCGWaE*fiJ=d1H+9.F%6tBgRfiE5s:N\N@NoC$+o0r>1%uHb.nVk-M%T^iSb0%kcN4AW;)u#q6jp^L_!]#&2OiaFi!)kqQ[e0NF/TtF$IVb6+d!a4R:#mlE%?*^A^'XAJso,eH]Gq/RhBOPXa:4jfm0"ioq7&H+6I7(#1fQpAY9Q*Fh/PR_]?trkfEZh3Pe3saSY`Tqu2PT/*8"6:&Ggu$Q5h!H>%k=St[\MnUZ4ak;8?#OoNiE5Y!0[Y5?nng^A8^SM/f(=)^mMo&5B[M\CE9k=)UStI?BJ,NdYWXad/S.55/04R4!ejcs8m>;7fiYJ#%?B6,(T9Q"QTs4m9K<"<l<+$@&<R;Zl$o8fe\OBtaYbolrRGUK(%)&GB?f)-k8Karc(f+lYor-O:*jtK-pkaib#/D7mN>7:`U-d?S%QT,./"\@`H=`o.4Fj%C\$\eq:#5)TH[eqE*MP-nHPRiP'K0KsN-cM+-P9Cbo;r]n`3.RE41&QU.U^kL:?&%L.1[q&QD:5!U4%9a?%'<NjO?V^#gEC]IpNg=r9[M>B-.""jt<$eFW9,'eqEJTT@F&+YcX!e4Z(f@Hls+$W0k*,-g.:HspZg\j]ND:u<'/`R!&^3d"G-l&n%%jm#'YiClPUK&tBg]kHjN\n07VPa\b#"!"=-s4iaTkPU1nL5\6&m;^S25SGn,k')ocs`%KR`b8ZcEOb"2Ua+TLZ9nTfA/g#OSVN%%\@*(&XjN!"M#ln*H/KI3Jj=<f&.n2;K*kI%A2NZ9mAj,Hg5IU7e.B8HNM76#Src>t%M=5ZYRV8g+H&2`fE'A"cZ9O';(-!'&Ih,i%;GL@:R:%'B2o9lqYd/Vs"=TWO8qR(9o2!1+)%Lh9gIT)]@Y:0^g7HuPUj/amW/$HHJ^S)+Ce%<mW`EDm_ED1^9<FpcF?Tl.8M'.>%1mNjMI#1r>#r`Z)f?f/A+WJuW6f+:nDa,O9\`M@=fMiR8f$.!!IT]!``5nLk;.V0L.@m(R^UA-:AY@u8>Kq607U-Qe&/5b=`uTd<%"TgQN8-QK.XM(>?W3Kq?/S>rh8:kD>BflYn_@_HrO&/NDcpCQ%;rgJP/51*dM@9is?<1<B"C9rXLBjRA*(Af<+G:tp7s9b@M_dNM%/;aZOqTuQdXjG]P(cD`B:H3#9\V1@Ni?mP6=aMXl+SsPcE:CE4(>3D`'g3GW^#WG#S@%bs7(lbm6AU4Do"kFE;<iSMRcK$O2Nl\Z%iIXnE6A(e)$Td&LQ9obWW>:o$4FjYf?5iu%,R<-+87<q@[,qbeb$%[',H*kFXi)9L/PWI0"q6m(.*A9O&#Q\U<7unOjk?1*iP&bV%@tun^!@$VRA"MX-p)VkGX\2[9,se`2oa<UQ$!JM!TXi%_Z<o0g6R=jdGsm:Ph%Jf-k^>d'8+&^0,u`)@MhdmKSrd.)9ejAeA\4C?%H>)&q#`f=6nP_CP7E_Xq6=j"c+P>2oWZKg$dg7k^/NcOB#AV5"YdHrR^W6XgH[KCW:O5pL0&fPbP$iGX/(>I'ojHG0JmV<[.X#L8%V\U`1W`1W.a<&c+fUX&IVU?*]BR3Q!.',0kh^*oRduc8FbE_hH3"C`;="TN8C'D$7W392JntTBH'MB,g09NI/\n7kTBPpYr-fdGr%"mN<DVV\Y3Z<6Xh%$LO[#,G=>ftkl>J#P,16H)W^``i.&6_XmCVGu!_Xis88R"mYpNc#LB2&:Lsnj>0@8:3]l+A[M[>V5O>]%.`o%J#YH`#TEe+6[dM,5W"<1h+9Lm5A^U5!9EB!rL+"p;cmoaoN!CEKoq1o:-EC&.0^KnU7r4$>Dp5&WL5P#)h^G>QS6dP_XXatGH`Yp%Q%@8eNfXFlUbY9'!cbTnCROnAd?-W%/_]86W6WaF#S-PTBcu2a@AedA6YADC/WL*6>79]$U&%-O)YK;F+t`F4KPObl'q?X0GQkrp%-[fjM5Y^#Y3E65ki&ZP[\g*?mPNSIW1C>VVo^,II7UZg2ER#`BKi3W?YtugU]5<f6#T,LUXJ2SecK$hZAL%LarR"T<%0p2ZBQH=R%BEh?n;p^r4ik,a&fHG"8$N*eQ%_8*g42Q'UcBM+<50f9_SRtdt5T>nGOC647Bqf6t4sRocm*3ln3C'E$TlWefXdbLO]YY`rQm`)m%Q\FK,4YW[19cua&R3YSakugB31%(7gR3k3YYTr@VA8KYWk=:Hdb2JEF'33TeY9ENL)AYY_"cile()#i;9Q3HP4!;XsbS.A=4b[$r%7=0-\?#F*.`77US(^_k_<e7Q*>&H3]q4rJ@aYTdZ5`.SK0r7O6H5]0pNFKL*Joj:<H:,89=%BO1VNZr=.]/>S]AU)e'83b=;^Seb%WO8-G22Z'YW[E[KR:s>209`B1)Jf3UZ@@Lu)r5l;Q+83?mO,C?3qQ4'YttX=W6m)[f`JU%XYg561H9"QnceBq;ot\_:4NRMh[]K>%HI(78(4t&L^aTXn+/Z(,B,e3\;0*Q[Nj\B?J>#->&.]/4>/]GE[Up`m7RVYZ616H/6p9miU-PoM6[^?XjLNjQ\V[_nnYf>+$B;i3%76X?[[+B+'Q0fRi*?i:NnAeF+d3Euu,-$jj%"n[fhM"-FlHJDmGLQoVO;S4KB/Ut=P`VmL"2aUIpJa4Ia:;.3jZKIQ>%gNd#2sV`%4'OE![Xh,JBCh(rEg_bNZI'C"F&4@-6jDUoLgY$iE8FNklHm!R@Mbtt$!Z^Fd[2RF*<fZ+JjV6eK]=]3XO6fG^l]>P;56aflmVUj%)(%6Je=e$.4=VhGkEkFM:$"8J-:FY.cCB/*_aaGN<RDB(7ne``Nl8'4\@bek7'kFd#E2>0n.ai6V^#(q$X,D`cAb!)3&^FDCt"?3%X>HHa0O_A4=M'+[.DYLVX/tNGQ^:UK%s++Lj-f8N,W%6oKLZGIL(7<;H$*C<jH4+c.I<7@Bb>io[/ji.6=-<(##9@7:oV^F!+E%a%',okuPe6E*6&blYg`!!P`fo#N6Ql`pdd&hg1Mk/keZqN!l_n%S1o^BQ5IV]'UC300=$:Tb^Do7$Kk#NuAVY_?1L"oj0bIE6=:pcf%47oPo<Ptaa9?:0KT:i8F6djgl*H@O*'OjtI"4[J7?B_%(#B>)!`@+\cL^!J8:atlY@UO6^+0m"Y8#rqH"ILQ,ci]ODXoE?\[?0$%%6;bZU3dHL#Ck]VnFAZ7Aa?1E5LfDRI$]N4&oa5Tkd$&[J$<eO&S_sX0FQ5Z3%08M<SA(]lK;MA)MgSEE&=9XP:4?)>cDNWr=YjDD%=h3$&=YCX.2JX$(7*9>ElKN_$$\G]Nab6,@R8h3LIk]On$1X>\5dWc]XX_fI^b%49#p=:=1fn('(_lGhb2>kRds%+[#sDHr4<0Oc%[<hZ_Ko+o:>,47@a')Fb(&l+8TtdAlIHmN"dNXE&(1@6ddYff[L-eNU%&5/?Qf[rs/i(Ym_@]+(%^)N-o/ZI`6kf.H<2gQ=qh3I]%BI5P`QTe/`g\;gb$UqR/E7#<:5`Qph.(Uu'&#m7ZqJ#0uRpcAQ$;##ATR'Ia[\2L5$>B'88[T[ATb;2ZYRXl3/GZH*G0+4PJ5tA*%$bDiePg?XN&G_$s4i:rdNtS84=:+c52(Z',0Jt:YUL#G7CGO>Kaln(aG+)=4?UIhF*!mb%S]m[03C"4Q#fP>,.'h0t^<fJHX8[XT%!:i#r:Q\M7FNXIuc"?0L;"X9W6am>9N+blJ6"cjDJhBZ]i#q_,bVKr=TZ3jAVV"A(\0p5I@:;GCQINDe$2Q-5/CDn9GQRMA\k7fp%4.:E!F[F=upQ<4l3WTmFFYJ=TeBX=5dN@2eAMQ"]nmBbc.Vt<bW4F#OJ$^IELQl>YW9[7[S*@UQ4[#IiWe\^9QKMFK-prHQc!*g*%@B^cO<%=+6l2j(DP[8(A#4,<3a2qc5#f=laH)fQUa@:DEQTZTXK.NKZl^V:N;(DZq*uR^G%!(aPWWRrGY$`bmnrK5.'6S.!>sh7l%O>C&\nhGlj6.[GSb%ei,[E1@>JjKZB%0Fkl,OIMf)I4O@aIj<f#BN;4EtBCh/#$)^"c9#rX5&%pk=jBg;.rAQh$(A82;^6DeJ^bJ%k"o7UnA3bk<71ih6l[/YMUIW3'\%lKJI\H;"?-c<kfi<H&cX5sNSu"9nCg4a'%(F\R=)Qo?m&iJ:Z%+q5bM^(I`<hPEM/5']aU;K%GY_7nK497rD1a0cfD)*A8cgTkOmTKjOFC%\J7`3j.YOSX<Lg*T!'1:N;0jDV.Y-C19[D*SX]h1tU+.TE^lQ^N<]O01m6Ee8(iDa'%R69nBCJuA`'eZC7#<b]5g9i%2=t;MZJ45H[9LVFD<-CpUXf(N&7"cklPM6BZ6"+Sej2'.`R&rKKTXKq`c?.GYli>uU!tckn!u1qt%ki^(:,$;$)U+HKs6E-b;K[8#&pfM`qBp.b^nn8P>%t!:r6SYO%9.WaN88rkN8d?GNFZW.]aJ_'mHE8[!b^l3i,XHOSRP*'Be=bqJ%73F@IE:(bR<IVlX>3nXA-&$7<k+fada@;=,U(pc/<.U7K!)@ZI'4%N>*g^V*W\:+kH6ehfPq*gMN2Tnq.dZj#aTUe\NANnW86HAf%/Mr%B3X7YKDe`Z1,cYi\Zio.^1f3UI"gl>*Q;WX24IC>k^Z:>?&n2Ps.c<,%YX1K];'m8eZm46$M"K0E#luD;r66/$(47piSTV%o%`U*sMVO;D,QQpHkM,P<jFTfiXFfLt-<[@V%Ue99dUWJLInd01JnenR5iJ9Zh(d#]0RNp&W#a<m*6$.o5!#"Ah8J(DJAES;;'M75N%/Jp!29Ttl`CmCb7OY@JSU*J:d<`c'ZW7RKq\pnno2.idF#I8R'5AJR;<N;iu.N=39#`YLud1+!R_(N0^EUBa03kBsM:9eq+CS&\W%gF:69ASP^![DN(WQ,k&a)];?ZX'urMJC#XG'FmH3M?aR<)ebeKHf(^Q9^jn_Dl=U*'VNScG=2P?#&,@HDMBHRMO"sBCpo%(5sSMk%%+84-.uH\GN>Oh&4+TP$"_EP%@Ef]Zb,J?`G]\(MHcUY4b*sPN1U;$L)"`XKBq[mX7Qh2LM&e(K>#>ut=>m-+Lif/JZN#aNC4Zi>%$=_-Bcr2c!+9WF3Y(!!pKU#R'0L:PIE:8m]X$D8u[_LH#+pgSk)9RL=bbX]%J"psKP*\F+QMA"'=%%:c1djSTK+3`,po/dEd5*jf%)''(*\.k)4b0C<:BhtP$"g5Bqb1I@8;<Os_O%$2X1>@X4\S8A-O')IfT[c&tD7irQM=bI+jtY=V%%2n[%$K`Y.$Iko'UL)V!@sKV%)]KR@*Ja^Bq$JtRT]DE<LHm%dTf>s6%0^?ajtakk3>qVs3:6T6CndQ#,i$6X/B@mmS4U\Am+H,3;#]U="k?c>f9]9a7VSAM^4Y3M%!ZT6660M,[TM\[Am&)O'$_(c2qnNmTL2O/rR1LT1E"2asEp48GefqD]"K1da(@EbH2DntW:!K9V\;,;6`iBS)K.rRaTK>I5=r7iO%'_n4%aA<V960O-_)Ks/0IMe`]UBDFoW[i55g1II+fFN\e2!qPK*E>Tb5_T7bC@nQ5>]1'&8J)<]*Zcq%US5JkaI/`f6Q<\4_b!UE%W7hM`^cM`g_ch)CRb,gglA)cP@D"mg*+%T#X]s%.bUDS\4\8_DMU6q(7FiATEYLsO3O53>fu`u)M8R"6+llr9=?aAQ::&QQ#Xq%M%CV%puKdtG*cP3>d4MV;=Wq8;TbRe.0L)CV(#"#>d/T>e99I_']1J(2mfX[mhVXMWSbcTkk>sC)&JebRY'3a0)EBf&Eo%+!lEe:kM%7$K`'aIs*p@$8&0<FjsPWmOiq>7<["LSmdbVPoa1&2<I00qE(5EA4OF_Ju3pWs^OSn3>B&.-jM1:7(&W53p>bE`]SD?QuijdXX_X%=G*3@WH,70\"lQ;KK2uiO,e,:oe:>Q0NolX#6pE_Y>A!?DDcf3,Wn>q*h")e6p[JF.=(2WJqXkPf`@Q.W!K+oZ9-NNUKCR%?**.=%Ck+dt#N2"HHLE$'WDsO"o+T#8If^Y;1-0(k>!;"OkD(ls'#JNVHDfLi40>>/9MJ5sTk2"KFLe1Oeq&"EloKiRLV*f'G<+:-&i8/b%4)!c8(gEe>Ck)UT#_ka\,N4k,<E+OrT.:E^0T6-Me[QP#[:_Gj\3-"oFqLH)oUQ9g.g.Y/?Uf-85&@6`f,@j2c`%_rTNk%m5leXb%am`7u*Y4a0r4NXG"N6gp[20"TZoSpZG&3B$<<V#+O+;isS)0glb2`j*@RKuiiEFN,P"d)N>B5k3*6!h!j9Y>,\SA^D4<kgRd5CSq%SulEkfiDr,JN6kclsS0aCFP$jbbsq]e.]()3GKVt5\C/rr:GA5V@hbl:uiuSdd,q]RMO58V'>"edsK5;\M)AZ<sfWJ[[(LNi.qFF%KeU!u;M"2VQ)]0PP35WB>.c]2OYbRp:S&k,!JAs+*)31>QVA]#)-ePF=S8+r)@7_uE,"%tKP3(#=Wko:f?t6ug/ZN1Cl[0kGW%m"%QWq9lR9c?h3I.#=p)OSVrj58=P:BJOD6<^Lp`NOD2d4\'NJ\+kC(t'MCPoP-C2laaO)j>q)Ro9F>)%'7EO=fHp!jD7Kq;_26uS)<%FbN<S.jPbino^T;9Ac7uJOdcp9ak<!aGhfhQ6htd5cM2a0hZp(:Bs=G1<r7;>BA(h*%5duUh*d$/6^pnGf$i=$f;d,rMH9oLad.+%qMO&m)m0JrTGFpT[_Y*)F:bK`Lq]QqGN^;q,\(U*EMSBrV*QTN82J(E"u1/EMM'\W-9["DBC`tdgn;?RlBD`3\HFftE^?7i(Drjk%Q0(*CgIMCsP?DmAcSQjT4*iZ6gG>]3h,njQ';r3R_4WIi4*aL$f""anMR(\:1OqSCjdn=1`V(>L2KH)Yo-VngVUZUDIO^T2BT\Ce%VnsJB3'@tp?<Yek]Y@HkAi?Km86Qn!YWtLPS9n>1!2U?6d<\=E>U7W?n"`OTM,!5Zh,`#5NO]*1.#?kRX$B1MH)A6SK?)^IMkZ`)%UII#W7LK4-&-K5dnVU.Up,*MJ]f:.cfb).LTHs\<,3!^d$ME_rW(ACX+`LW$NDAFWg50igOjJ!A@]$AHl9($<W&pF`E[j.FQ(3S,%g#C(t;(ddXR6fpm;#:BBNj,R\_3_8*0I\#1oQ1O_F1Uj\L:JMGrQS8.^oS=R;/BkRA?;=q8(En:k_=:46MsB@*I*SgY6H.9)-eY&%U&Q--c+V:"^h62cK/SO`O_,_A3hX/`,&P:q(@9T8BTBra\6=FbBE*eW4II9W=LR:;H<<Ma8Z#6gF%A7<,/;s^G9t!pE.GAW*N49d%0_=UB4:8&f651V;]_5%66PMTIdI_TYHUHqLUT!H\.#[KI3G>[@$%E"=<"u-)N84l\IY*tf\8c7E1=h"jTr?cPoN?UC+;hCC7ou.^%MmAqR-bQ2qd*jnIGYTZc,A1]BR-<1^CBnYl,bSt7b%/]m"nWN@mR'DH69r*O?j6FSHASSr'ZqH+4LnCK*dZ$ATF5;ja#\I<fj5Gc%1oS*la^(q?HWsWj`oQ+3KSD),MGHAoDSr,`5Ub9iD]qM9#t(>>/<iS#oOq(ECas.d@^t:2cQfd`C.4f2oLL,;PlSa;UdP@(`^,n%%lB$:!V]EC%q@sH?$KPUf/o9AQBoI)TZFUO/H[9['6HQH@BD"VK2:*J6WV`?K-s1!s-5ruD2.j1bk50&E`@+7mS/WpgFs)I7#?9!k%$n[HYPdtN`;BmYi"#1hEUN4Le+(/`O>JUF\`ut-%\::s5$kdMH6NfIe4`a%fhGN$BXOCaW;G!V1!iN4B\HbGkfE,JloU-sSEa4Js%KWJT1e@e=L)hPkiHKj1+Z?-G6[$X]u1:!>o\lpL&N1pW\J%,l=_WM2URNm#8OG5E>inFJ/EFPuX+Faq.iejrZWlGE>;H4.!VK[b(%"knE9(Bd>frHtKa>`PNe&/hcBfT&9T3R[oM8TjnN"d+@!.[o/U[NZ5J4K+f;h&ug"b-Z<85=O))mUTqY;BuJr/S2`NL7.Tn=N*`;%VZg?)BQd30d>`)f5j-fNWjHGc#r65=o\ep@%WqlU)sYG2K7SlR=-PaW9;(?SgD-3[W37VPdmtV6a-K855S3]BPL)jT@gT90OXl2D%CF6kZLB*1-Qd;?D%+PeJO^K,A+F_]Ne(Q,;K`h^-+G>mlD[+Hl@bd*i+3?-U<0hDllGm[<7I+X(%EP"AMd=pr63r]KVul.O+;cua%JpILLeE7(ZJtNDmUZ(>*0[,nX\k%W,-HOPFN*3tf[X#i<>(Q;o@_?:(#.gE/.50D!$[;q$+B5%H2W9bJ'!<go1`m2F"=moAXK]go%I\fP(3s0j;?GRMBb]Mok`'0kAV7kNuOObnCJQ%)sj9;\2qUZ`f:(T/FRK`UdXY^C(9H%/?b;L'\6!g^5>D"\0ruql3WaQtX;P\+H%-$b?][dhV@bIF"RUmnK=4qS\"Nb-hj@TE(*&3B5:`3sOgO5pBXJQ=n+fTOMfMYDhJkpW22FJ/V./"K32np&lfM(E'[c9aIL6>IEX%kRWp6-.uF/X+B5-;hdWf%*r7[=n=tSXOi;6#<R:_)j=d.m:(l<1_`Ss(eU5^+16iiP]]tjefl^lmd"b99>&OX@UN<n95p,r)P(ss%=\l/``\,+GJsm8L::$H@X%jKo<b?e1EJ1<S.I:En'Tm95TisrO9Eq021[pb5Ofp()9"1$N9*G@bWDT0UG[6RTOsf1q!mu&'?=8p+%4@B5RCE+7s'6u/qDS[L-1SWliA4Z>C^d`>t.OK;'&ZE")#\N``$n#=LboodEcc&dbHhti]^6RY+/aRJR>T"uc0HGOs1/TYi'A?=m%O$XD`bWHFTqrerr^Q@#Ta.=%m/PtWZ?3`*]*"oSh?^qI11tA[8#Mk3<VQf@t;`%HtkRQk/1k?hp"lbK:(/8#`?^&-e!FS?b$r--4%DW-9!,7_*EdEbHl"UZ^LWed'W*#uY)"1;3,;GIr";nbp`-DCNml3(rH=b1IGXp\KQ(9qKH@(Lp%!^)/,Or6PGra.isn.RoDIEX<H%fmc@T7d2APU%*JE;>+hj*Rl;[X#n]1<s]!Q#c3kLp[jOQ:hlqu<1?ct>$]qa#9/Qb1X(*HE_^B3,<tIA<QqRn)_"kF0T'-ePko\Y%%eVSTXe*cKK`rl&A5_EI1/'TBkc74.CSpu)=9ihEc%[';<A:YM@2A+!NYE9&)N.JFT(K]b?VNuliML$a'HnG]_)jLf_Y$AsL%7bf%7+UM6X?#X*']TU@OCuh@\O5RJZR8+%UM3%V;.u%WThYTURYXi\i\j8.%F,dG'$W36b\>APGpM1Jb^:SiDQ"n4YrJE)e\bE9Hp+e@%#BGh<*'BL2=J;CcaA]R3.&DXnVNAKa3"UDCSfT8B#*TV.i(TKC[sB_`L6PgVnfu3h$=^jA!@Pa?C9CfoiW\BYAKU-$OAh<<XO87[%;\`idEfmYj`P]49^A3W6;Wi]1^;<%$BEdPRZBe4ekXa7""t^"9J^J'MU&#W=S^<N@dJKg&M["\,(i#tVAqA@@`6-Y*cdZ>0'33+l%6q4/2"'0JlOu6kkQ;U>L.ro"`_=t+,Q3!4I[t$Mq#38q[6o[!V_[,&H"@=.0;A!.RGnm3X,1F=1eXS!#/bhhZ7hNm'e-$t9V+Jjr%A>Z)N"b@-<7Z"S"!WF(44I3P.';,o,'h>;@Ef180Z4i00#RVS4CPDdliR:3NMlp(kFb7%P+pD<"V_g=O'Z;;`&m-&E>JsCuN8=T!%K;>37[s(:n%$E:/8$G2q6G=#T4BT2VC!@:3Q)A<3iX1er0".#>AlI5nTr>)8AhCtGJV5q=lZ+%;X.eO45#[@t*Ba4*_5M/1C$6c*%pA7jb6NjpGHRpC*a;U5/PWr1/bRb%k%7*OmEgm>7kM!M!,&oqn<Y'8K.ukgQb.]AC9hp`%TK,838u03<NHNJo3EXd4r@%.i_d>JL%+&"O<JrGN?_&?>G>o?O\Qii<E]c8-;PH[G@!1i)Q+[_Y"G3Z]>SjK03Fq;$7rJ^Tj+GY^jEo$PZjko]-K9j!JKb^--S<O\\4hF[Y%0b4N=8Au<sBPgb9cjHPKOfi<@5D;?O1[.Gbd*]XTYPg*W'V6(FVjL*8*DJd2U2NAM^-b.lf?t!kR%=MfG"+6ENbhk]<k&`*#T'^e%;#"4W2OXWc5\(ff/.N8WJMq42!&N07!C=VS>4@Jl2NblUXChQ</"N/HeaH2uPd-.HE2FNF7&dL]$/>o<;;4@XU;s^[a%+1?*k%i;%#_iT<(Mkj,a8m<@@$&eZ`aYF.]K%u^>cXbl66G8>Yi3\^:tjKa-dg&1L/!HVat@7ecaF27262)XXIqX6E5>J3_U^'qAtdds:!g+0%>\7H#joQOhcsi,!:PaeR?j7Q/409OQ/%RmjG7f(\?==`)-.ZoQRT`&;oo(8*.rmLUkg%Qu1*&F@G&j'U7kGV^TI9k`UF*6.6a$KZ%BQShY9o^".i7cL*Iu+ln#`hb?dAu14h&*PR(+g/&-Le8@,"f[@`srILV::5)g8q7e7:EW+I'5QLhSCn>S:IcE:'V(UeX]l&Q9GZ(%HgOf0`FS9W)X+6->(?[EmRWS&:cF*Vd)qST<"U'4\]O-AOHP?,:J[;MiN?'\%612Ei4Z0g6@l>oP#L\SG0&hRcUN;7i6*YnUBj`G%KWZmE!AXd=U`bm6!1m$;)QEj/C7A$c6!FJP+fuibglP;Q;*o?RRQuG'E#]m.b.L5$H=ue2&c(ua279Zt_M8+#;p_$iKYN6UE>L]o%Pi\nV\Jtir&)hh30SLVf`ABslN?[.CXe3J^W(5s+o;l=NC:0hrs5F&-R`YeAVm+N[=_ECD[/M1b7`I_`W=g)mJ]_M3H]KR+)I,)r%F/3XU6NcCASM1q/DO)a[MVBBPL;ad"H:K!HL5SYuMoh]0OPOl0Huf&iUJX*>2;!b5p.4Lac!S>#8bKi';kt.mrW?(J'G5M$_f^W6%fc^,M">+.Spts^1boH1c6^M)aMP$l.,NhA1&pf=<qH3En9;rPPKpH#:&V8J.HU/s&X,PgN[R%YS!7sNBUd9ut3%3C>d!2n^:puT_%Pr/f$HMKJQDs6Q:4H^F/R1b]$>1c\!:Ms#>3I!oj82^8eA2_pp2jmf(OFlKs$E]>JllOkt@CUlkmZ*=)8LP2pEX+T=o(,-J\;!Fc%Ti$oPJ.X-LFtQ,^\nTS&c9i4?@<Lu(8'+_mX%"+Y=eR/o(JqJ+:dkY4L@;bd.L5UG3fV0fH4!mlK-SrMHAl(bBCIqf5%Pq:U;q$n%gVcFGTk:+INS<fgBF46U@4s.#:@&Y1>Co%%2R_uL-A/Eo2p"N+HXSU)W35'b6ZK9*hR/-R:#SXn+Fp`9;:7rLHt]2Nd8HS"KSjH&%^bZoY'5%\B2`9.M"@^la2kV"L%<lK#:hqN`K<c,X].L8R;RAl*7F7gp'G>WBp./mP\Q5/u@]i]>Kq2<`"R=cPjfX;P6scIR:IC%%%qC6;Vf/,,\%td=75Bs>sgk`[9MbGd*)"_2Km$okB\)&T4;C%ok9#sD\6/]$f.?g@Us$S7SdeIDsQY8C+kZYO;9P1.+?psTAaq=K7%5W(6"TTq*3Sq\9H[]L6X,X(,D):<;_b>YoaZXWb4-(t1!@`1+8)5c`.P.VCVB#OqZRa.T57A@"9:NdIo78eD:of*!ee"GVqiE!r(%)?MV8Al;-\49?mfN%bR4);,I)A:WB&n4APIma"[R#:c)`I@;un</XWY,F$]bcmT%^3jM#n1t"<JY<me6LuL"nIPk3>WViQ2*)Z+f%BSVcV,(GBP;5eh0)?]]lKro"HU87gLeFrNTI!*'/9"cU^'"^]RP,7>.hRIV,Q`T+=1Jg7lleAsC<#`WD!L!tLH3[k<ACW;5^=>VW%6\oQURSM6Km)rO)-pXr4=IEb<e@04:0XDeKlV_2We"FI%*ZCJZN'&q6;\Y_H'^u9WSQ`ZKT[_C<7g`FpV85R@90T"J.`tLp)TeN[%EF,s&aQ48p7[b$$He<T+^^`S>8b=f#iSPdkQ')]Gl."'M$=dIOFS(_nVFBPN_jY.lZm?.Fjfd'JULRAUL)Jj&(61nETn'WTp<[/(%^udVn0Hg6YLI8&h.Dg%m%jNo0PbCjNBLBD[Uf`28',jh<9feL9E9CY65o'PXmF3<MMn)TnDA'a%Uo4F=6Ze%j6*K][:/A4I.MB3i%O*?D8RY\a&4</c$rY7'6'9Ipfj$DNEA$>&P.=QsVKJKC78o6nVjss55cTYN%JqoSek!oqXkZ$l5+[.XmCJk//\NNfA2U`Xap54Qd%g.@Ah[B+KGBSB4.Voi.EfAO1VlC#LG"f+KOR`$d_4G[/);Z"W"h[;R4+b735R`()e'd5j6af^qt.UT;#=)FWN&Cm="e]1d;A.E/f%H"%I?3eq:c2,iN@566'CY%EFo[cQUuKS*]RCk\oFgJI777uq$b]6t?MP<CD="h@D)*Dh'K&(#j:Wmr\"gXd;t%X(*>gX%N817^rg%,,Co`BkCNc1u1%H>-s?*M_9_RcjU)&ZsAa6PsT:IkD\DC7U1B.$6io!G7"O!jlJ;:!DrE$Tfo)X`BV4bo#Z\kUXDF)'KY"V:8h(b%'^R/3*(#s[j>k*n:.["mA9')?^NRKH1mD]K.Mh`_QO0E`P(l:Q6>'KU#Bn5k`Ein)d>B"pe=i1d_ADD^7ka=>[2<IU9e4C31ZIEH%6r.%>m)aW!KVQ>6QLUc=6:#QdNZQJV/al*HL+o:P8lG_mM2A;s]`mW=9nR(gZF?+?:oL:EpdS=RYDN83d;hL1O)>WF;N2'<mqtGr%R`R_8T4ls&^.NcQ*?6$PU$Aceh6i]rI?.H!78q2t'8?:41>/Vfa?7QZGWJZ/m@FK.3om(OHrbF;:33ig!nAt!g1?OdBkBo9q\aBm%327onQtSDi+r(m?1=F*>/2B"?*A'9-;J[o38?,!i!b%B$)FFr`gog9X-Jc0OUel+uA-"8Hb3_">g'RggZRtCC;UD$nlu;)\Pm&GT%US82e\JpN8!rb)IW#$uO52%Zh$K`)1/EEjj0UgP!e$G3+'],S";,A#N,d1e3=AZf8@8MV=dF6R,hs8YBm@,gJl<X'u\j\SDqVm39%+arb]g0p'Kd-G(_B8W/2P\Ot>`n#ZJE$$2`J63Z9$(@BWK@?$ZBXgKE>![e''11V2d="CT)Cu)Ir\SS=+I0m>a.s%0oNEOPY)TB@%ZcNr-da6D,M.h%cH(pL/CR"*q#@1D,e)M^XUig'+paG6)KE+/h+gQVIjYHIWY+5VOhP=bbOgfp'Z1]Q_W7#-o2">*I,=E\1@rgYO%plb5Y$bo3`:Imr>9!>\I\ZZo;'LQSDjL1G,^5EK_(h%VkQlq=SjmFSEL/KD7DC'8S;Kh8[0sjt55p8,[<GN@VC-[NT$2ZUO9YY*K%j^UXD3mQ68c-UZqPRG;k@4bnqR,s-Z8iK7f.he[>7Kueg)eqj1/<FKW_MN?O-h;V49/<Th%I%;r>;NL]A'*D!Pb:<d"Tbj.MTVkQ%#fb6H4O`4G&1GEBi.U&tCd9>`BYb$'7bJAM\8HjqEb]-YNJ44%;MGI:Um<3e$kMbs_eGtjT[KUWn&uL16LN7-%B#TBJE)bqQSm/Y%<=B&WXFkYHR"9?U-W;S/0VWBK&R(9cL<-8NkpFoN-6oR\)?G@;lW2t55jJN/ec8]?bZ.G(2?dE5-p-3XD's0U1A_1'%BV>18479L%^,R">%V_43f1=Gq[Ag%:;[5AcBaZi&;'Nt(n2T&>Q]3291"YP5/*G#n;F7(fMXViN*^R&^L1#^8;!,&i+bYHJN?UH8;!]@48-Q.'%H+$STUK2dgl.*X287*NZ;<CrG^sX\ca(N%SP3@WYN1QU75cIA-JO=*O&I10616SsK]Z?qlR<-t#U0Hh;l1r`LV%osqkH6Zg:tHJ9%14.8=h16mlfb[<1q68I%l=mcWX\St,3Z1<5NFRQV#MOu3o>HY7]bQd'm3G%q-<Rolg-JDbK)^+HeR<':*^qANk766F1;V&ab'To#%/0L?(8CnO*4="F8LFK0=2#.a&Sd)t>'(I``!e_dtZW,;XfraEmd\tVr5tSud8$#dcX(?l\'2SnV/CB,[mu(fO64LE$V!_MH";WM5%Qd@%>_j;Ia>es3gZnQd@[[U,ggLlE)h@"%>4nH1M&4a4#(s*?_5ufFnWs)!pk%FnXnO;d]iGK7OJ98@X'2t_D@RO*0!^>m(A[crT%]"6Z^[r9@aBf/ES!j#f-^[_>ms*oWM(FR;iP.&!IH.m`)r3'tJg24:[J"Ot[o@[b((XqX2@b4kMh.=adT3]*E5$L2<?L%K-cDIma%^2(<ir6t=N=0D2S\h'R_^=oGCAKa:D>YSj"-To"EY."1OH'HKo[U,ln8]oYsZM\H][[tY4l0Vp(o%UcpV#;I9So'ndff!30cg1/^%1>O%Ys*gsqcaP8Topa43m(Z^FI'qaXok]-SZi)Uk%urZ^46E9/^0,@Ia):UkDB9e0\N=u@^Qe'_U"B0/YO<!=QIg?$:?g<0Z<^5:%^f$K/>jRbX]<Y^`(KVpOc8HK^nTql$]B*VX1'3fGQhn^I\sULF7VQ(5Sah[p/bA,qmIonsleQTj9iL!o0)*t:pN$QUS)%'+jm$CP%oP0r"?8m(H?*:B7cHe,Gmgm#.qmK`\c`c5U]D:BpgV96F1`)_Jm%X"<o5p8$f=\UV+R/io?iST_-CJalgAGop/3i9>3j8QgDdK!r%[+6&]^,<)QHFP&'`iEl<l>jVlXinAhJ$gATZ<j//Ep$MmZt6f%5E+.;A@qYYZJ7-(/galPZCKN2FWtUWlUc#%m*AgAh7p^SF#nYh%`WWgk[(A'mf=QOWgU)I)-eI*I^!aJim]O19Wi'Wuo9jLkApW[-Q^@Q>c,9aach`*]NTmIu?!r)S6[,^mf2nCbc#WJbMOls*pM)oK%:@9b&A3Vo3p[:=q3*dW`*V=T+d*qqZ:EQ+qp:d0eO8*mJ`4$7QoBlOPM'mFgFgc\emJVYs:O1-2hj44L$9MB%q^&p_dEV7Tou3u=%]fof$l^cVck+[7<bXp]-StBDQqYji.5/4Zm04-?GdYE/oFf8;\EH72L82":t\TmqrAc8Lm1rC)Qs(]8PhS6b:5JZK4G4GLFhc[SG%dk"PKAh;9c?C'_8_6]Ug]Wac4e6%r"?)P):puU2JXL59Zqd>+ts7H@0aHCeB]P&!uZd?)+G@tVQS^$b(2fbMTS@REmVX#chE2GGZ%0PELqLs)^Zj],J@2YKeGH5=cB`aP8fon=K+Xs/V^EEVbY63-%XVJ:h`\Qlcs$UGU>?>JuCI.m8]goOj8pODM2S"!XNpLEtrA,<SS%a:A+IeR`5,LDLIbr[jJ0BD1HHdC0o.l+B]J=#Y%Lm,uX6hUF3cMo/-Sj$,K#Vl(o?a/;G*LSq3%GT'>4;h*Mn]$p)S4gh3MjRhNo%jS7g"jR?]&&l6BdE8j[i'6hlqZmYRc*1n:E*$67E*?Q?+NoP+mNe_+og`O/gm^PEga6)UXkiCt&kih7"BQY#M_U3>`O8:)Fe/bqe%p;e5F*hF>m+!)FD*j-"5@5o5:rF(3>%_KXPclSWfFh0V:*NtK(LTArTY/4pUq,P1MX)?Ijm)m8qGS6(t;*9f<(h5g[[HdC,W;K$s%:;]X_%S,J3XO*5M_@Sj.&:pB7)pE7^S.*HUd;V(H#)'C>JL%fG\tL/2@/Qugn]1XM+8Q^6C0pG@8$`Ok'^JKBTCsZ2EIZI[p+(sV%(&\F+.tSG_8,LW'\eB;SNng=43VFO!BL!Q#X42Tfm^,(?Nk;(SYZl7%Z;%6I]'DGfQWg24gXGkl4`6>7_fjSMg4AU)q1*:m[B6^3%p;A$,,C=**YTMER"W`F0c8@,:U'GE)/Bjg8J/S-s@-pG/Ms;P9r0PDS5'qP\UgO8t>(EKao;qcSjb%aeY;H:EX1M0r?L+r8j8I3O%R_>8YGAfU6a'X5a1DB\iq*NkdZJ+`<mG;T[2p:)aaJm]+M_CPih]3)^?a"['r-YdI9']pU:X/I`ft#\lm3-*3ZnXN*msG$!S"!K&%n[jPUmU*YPWu(f1J,E*Uou"WuI_Y[GO(L-2h&"s^B^F`44M]Q?(Us06Z]GW`os\8#mcaZ@5'`2r-NOe;.":gSZ(@B`4o4T9ME\K!%6N*%Cr8OaPi8(SXoC_(uO5->m0,_SR3o.\^qqrO\!Ir@hZ=a-ahVrODs)@S<:A!D4J+:XubHKOLeLGI>0-=QFS*!T@)2k\^7UUT5%<!0aZ]f=eR?bKc.he^l90A\kMk+hlXpi*ilGkB>]L5u5soA?2(Y<)Ea>d*U+B7BTM]<d"J)aF3-7nLLuU><0RZ(Lj5kBF]6;r@Q,%+$<i,D7Ml$I<kS]k6Id-P-_4\q_<?bcMbLB2'_adf#"(]GGj-/]YC<kB5_\Fr:uOjSSYat%j#S9pZ1=.=`5o7guR9Q6Ag[cV![8>%SX-;iLf'DGG]nMD/,,*5F+1[1f!h9b:7&Wl_3$sgE,HHenO=p'[eVoMOt?D!p9i*eYKeV.:><8Tf.VUQjK$O)lAJ14EOn/2L@j./%S@Eh9j11n=WI2O3!#qQR\pjADj.F(Xlg(#BiaV^c^\Q0q]=4+cT.4O1VN5$!H.f#c(]J?f!;kAR^`,_TBp@d/];o;V7Jt',iU8c6%^UZQU^K(WH/Jg@d]Jj[L*%3nY4W>+U?0r1$c2J+>hTM6e#ro_`pcC^m?[PN8?8:@5oOU5_:D[(coC^XOF8hZ$3;C<I[t!;UE-i*;%5*#KUQZ%?+m:dVJrE=-"HhaLG1*-D;=eL,nFT&3LaJ[$mPaBb[p=D6&&+AMqafsX_n&t@fqn(Kcr7!.m"7PXNlMkeJK"o):r0eGF%0-$d3n,7##i?.1_YL[@^hhCs.2tCd+^!5XMFSVuMVfsfim3aQlZblfk7>p7d-*;YS;uQ)R*Sr14`]AS\UApM7b`<jXR30_Oh<Rkn%:cl/h2oK(V%Gb:dLH"n;YYFWOa4,kHDnBB2Uq=>:&+=;hli[fjP^3"FHWHok:Yju=H)T[#=*&.!hS?>5e]K]H5ON7cG4+L2FR]mi%&%i"T>CSGXX2f4B[_$OC[aQF=esl'D0"/71l]XiEPB?=&Nud[1*_H.rdtbC+(\#Nk+'cT/Nu^ISZ6(.]md/s)h)8PD>p^#/I]K)&%Rhf(<J%dq(\R!])GaU2-<Zdo?YA6W'`gn#hCXb?-l1OK8HFNYrYnql_kBc(GRrYo>?f-@Rp@!ClpZ:]5-bf-MI(4S9\u2$%)K,"X%\i`'!n*8Bum-;9ncI:><2`G^=4>50*O2tC`(TZlXk3ffu8!_oC)*;ULo9sddKuR\.O8Ip2aZDYE0s/nnrbrS/q9%iGa*.Ai=+8s'%Z6QPrgWfK%'Arf-_0LHPWJ=4)il;46$(HkIn,C"=>]._bftJnnc'u#P,WBu@nR6q!mQ<#cInmW99n'CiBhb+@<BpMNNOh4F0cT;:%NuoG=nDi]-Nqh/ZO7[8ZAil:B_[BX!^Y8&2q:Im$Y8<]*qcTFpe03LMeZA$4CZI+uWHe%2;D\9GXR@e"r?&T-\Tp,D8nCcrre&IO%-g>L$hX/eYGE0m6nA]2l[sc$DDkNN;PHfC4%q[3_ai/`,Fs$67h`a6TSaVVfWFLFaJ!r$5Zp+?ap'P.bB!GhFl%b%@=9n6QHX4lD%GHo@X^\D6b*<`Rrna:"T[g.LuET):hd'm:cS2\_]^"9mnpR^0Tf6*DRSDLmTm`412nD1@[]qjOCQ7L?[rPA!K2p[uEZo;XhrkS#0%lf.mlB+==n,MO4Iou_10a\C@jrU\up>rV--l(Zq)^$BR>51ohEofZpu]Gp_DHUEU4dCGaQG?q[BWiObIn=A>sHSF+GG&/+HF+7c'%gL%qqKD4XWf!4/fF]\+lVtTNtEOZn^g\:K_om>GZ<^V3mmaQ^ORs$LS^%^U(HYp9>n*[e0HggsGF7X5^(QUae]_KBk'?o-K4!o0t%mcS6"coo&=kF:UWj`Gr2kbD1=C[H\Zel*<'aY@_&k?g/T[-`G9cLEO9p%e<t5ZeJK>Pt'0[I-`'pohqp3g3!;KS*%cnr&g5?l..%%:2naf3r/g=J*-F,g$a:F^AHpd[aO9HlaN4aT3[LZ].Xups/,9sU!%r"gAgT!-_0:*q9OP+3\LHOfXs3!n#e=8+5Qm#b>8,2C%^V,%p$!9DHTL1\WNOlSs,1mer&(DK;q!f+H)5G#fUDOis7r@6[!OD)q#!Y+O5BZGH'GI<$[:I?[t!^nE6*r+o6`c'0;cbH4NVe:^C@Z1%_Su],p$I+$n$S[[%6llLO/DL5h.r]XB/;3dhgP6F]fWj]DVdVO^"YM2rsNatMthm6D;X5E1ikJKhRsFO?$Zs0qEBqRrcTH$ZG$>i%5BRP[2;sVgPOsA%#9gnAi@<$5I'_Kh^f<<Or4W!c3aV1iTX?<c/UJ@iLJ*O!6LP`V`qJpf+1h?eedi;W%t#lq]Dfn9elpBA^\mN8%3h<bW7@2n#NHEN8ENNhHn?/32IpgOj^gsPh*7qS'E.ld9i^&[6rTI\!Vu,`E]G]kj(L<rF=EL+Ddu!tK=/TYc"4),HRAfe2j"s8>%7HH\#U(4BrZ,:HTpG]\/-hl.1ec2t(qq9Tc<I);QB57O-='(X^VMbhr>;#RT!CX%2?<k2#r4kDjb3e/>/5K'2rrWIR5ZR~>%AI9_PrivateDataEnd