%!PS-Adobe-3.1 EPSF-3.0%%Title: 09-04.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: mac137%%CreationDate: 9/6/06%%BoundingBox: 0 0 268 246%%HiResBoundingBox: 0 0 267.8643 245.8282%%CropBox: 0 0 267.8643 245.8282%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_AGM_Gradient_Sep (1.0 0)%%+ procset Adobe_AGM_Gradient (1.1 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %AI7_Thumbnail: 128 120 8%%BeginData: 14254 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD12FF7D7D847E847D847E847D847E847D847E847D847EA8FD6BFF%7DAFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD6BFFA8AFAFA9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD6BFF7DAFA8AFA8AFA8AFA8AFA8AF%A8AFA8AFA8AFA8AF7DFD6BFFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9A8FD6BFF7DAFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD6BFF%84A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD40FF7DA8A8A87DA8%FD25FF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD36FFAF7D84%7D847D7E7D847DAFA8AFA8AF84847D7E7D847D847DA8A8FD1BFF7E7D847E%847D847E847D847E847D847E847D847EA8FD32FFA8A87D8484AFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA87DA884FD18FF7DAFA8AF%A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7DFD2FFFA8A87DA8A9AFA8AFA9AF%A8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AF7E847DFD%15FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD2EFFA8A8AFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF%AFAFA9AFAFAF7DA8FD13FF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AF7DFD2DFF7DA9A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF84A8FD12FFA8AFAFA9AFAFAFA9%AFAFAFA9AFAFAFA9AFAFAFA9A8FD2CFFA8A9AFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%7EFD12FF7DAFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD2CFF7DA8%AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8%FFA9AFA8FFA9AFA8FFA9AFA884FD12FF84A9AFAFAFA9AFAFAFA9AFAFAFA9%AFAFAFA9AFAFA8FD2CFF7D84AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF59FD12FF7DAF%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD2CFFA8847EA8FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8%FFA9FFA8A87D7EFD12FF7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D%7DFD2CFF84AFAF847DAFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFFFFFFAFFFFFFFAFFFFFFFA88484AF7DFD12FF52FD13A852FFA8A8%A8FD28FFA884AFA8AF7E7D7DA8A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9%FFAFFFA9FFAFFFA9FFAFAF7D8459A984AFA87EFD12FF7DFD13A87DFFFFFF%A8FD28FFA8AFA8AFA9AFA9AFAF7D7DA87DA87DFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFA8A87DA87D7D7DAFA9AFAFAFA9AF7DFD12FF52FD13A852FFFFFF%7DFD28FFA884AF84AFA8AF84AFA8AFA8AFA8AF7D7D59FD097D527D59A8A8%AFA8AFA8AFA8AF84AFA8AF8484FD12FF7DFD13A87DFFFFFFA8FD28FFA8AF%A9AFAFAFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF%AFFFAFFFAFAFA9AFAFAFA9AF7DFD12FF52FD13A852FFFFFF7DFD28FFA884%AF84AFA8AFA8AFA9AFA8AFA9AFA8FFA9AFA8FFAFFFA8FFAFAFA8FFA9AFA8%AFA9AFA8AFA9AFA8AFA8AF8484FD12FF7DFD13A87DFFFFFFA8FD28FF7DAF%A9AFA9AFAFAFA9AFAFAFA9FFAFFFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFAF%A9FFAFAFA9AFAFAFA9AFA9AF7DFD12FF52FD13A852FFFFFF7DFD28FFA884%AF84AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA9AFA8FFA9AFA8FFA9AFA8AFA8%AFA8AFA8AFA8AFA8AF84AF847EFD12FF52FD147DFFFFFFA8FD28FF84AFAF%AFA9AFAFAFA9FFAFAFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFAFA9AFAFAFA9AFAFAF7DFD12FF52FD13A852FFFFFF7DFD28FFA884AF%A8AFA8AFA87D7DA87DA8A8AFA9AFA8A87DA87DA8AFFFA8FFA9847DA87D84%A8AFA9AFA8A87D847D84A87EFD12FF7DFD13A87DFFFFFFA8FD1AFF52FD0D%FFA8AFA8AFA95227AFA8FFFFFF7EAFA97D27FF7DFFFFFF7DFFAF5227FFA8%FFFFFF84AFA97D527D7DFFFFFF7DAF7DFD12FF52FD13A852FFFFFF7DFD0A%FF27525227525227275227FF5252F8FF2727FD0DFFA884AF84AF272784A8%FFFFFF84A8AFA827A8A8FFFFFFA8A8FFA827A8A8FFFFFFA8A8AF847D5284%FFFFFFA88484FD12FF7DFD13A87DFFFFFFA8FD0AFF275252275252F852FF%52FF52FF52FF5227FD0DFFA8AFA9AFAF5227AFA8FFFFFF7EFFAFFF27FF84%FFFFFF7EFFAF2752FFA8FFFFFFA8FFAF7D527D7DFFFFFF7EAF7DF8527D27%27527D5227F852272752277DFFFF52FD13A852FFFFFF7DFD0AFF27277D52%522727275252FF525227522727FD0DFFA884AF84AFA8AFA87D7DA87DA8A9%AFA8FFA97D7DA87DA8A8FFAFAFA8847DA87D84A9AFA8AFA9847DA87D7D84%8452FF5227522752FF522752F852FF5227FFFF7DFD13A87DFFFFFFA8FD11%FF52FD16FF7DAFA9AFA9AFAFAFA9AFAFAFA9FFAFFFA9FFAFFFAFFFAFFFAF%FFAFFFAFFFAFAFA9FFAFAFA9AFAFAFA9AFA9AF7DF8527D2727527D52FD05%27FF2727FFFF52FD13A852FFFFFF7DFD0BFF7DA87D7D527D527D527D527D%527D527D527D527D527D527D527D527D52522E5352522E53FD0752595252%52595252525952525259FD07525352525253525284AF847E52FD05FFA852%7DFD09FF52FD147DFD04FF7DFFFF7D527D527D527D52A8A8A8FD1AFF84AF%AFAFA9AFAFAFA9FF52AFAFFFAFFFAFFFAFFF52FFAFFFAFFFAFFFAFFF52FF%AFFFAFAFA9AFAFAF52AFAFAF7DFD12FF52FD13A852FFFFFF7DFD28FFA884%AFA8AFA8AFA8AF8452A8AFA8AFA9AFA8FFA853A8FFAFFFA8FFA9AF845984%AFA8AFA9AFA8AF845284AFA87EFD07FF27A8FD09FF7DFD13A87DFFFFFFA8%FD28FFA8AFA8AFA9AFA9AFAF52F8AFAFAFA9FFAFFFAF7DF8A8AFFFAFFFAF%FFAF7DF8A8AFAFA9AFAFAFA9A8F859A9AF7DFD06FF7D5227FD09FF52FD13%A852FFFFFF7DFD28FFA884AF84AFA8AF84AF7D52A8AFA8AFA8AFA8AF8427%A9FFA8FFA9AFA8AFA827A8AFA8AFA8AFA8AF842784AF8484FD06FF52FF52%FD09FF7DFD13A87DFFFFFFA8FD28FFA8AFA9AFAFAFA9AF527D527D7DFFAF%FFAFFF52FD047DFFAFFFAFFFFD057DFFAFFFAFAFFD047D52AF7DFD12FF52%FD13A852FFFFFF7DFD28FFA884AF84AF5227A87DA8A8A884A9AF2E7DA87D%A8A8A87DA8FF52527D7DA8A8A87DA9AF5227A97DA8A8A87D8484FD12FF7D%FD13A87DFFFFFFA8FD28FF7DAFA9AF845227AF7DA8A8A87DFFAF7D527D7D%A8A8A87DFFAF27527D7DA8A8A87DFFAF8452AF7DA8A8A87DAF7DFD12FF52%FD13A852FFFFFF7DFD28FFA884AF84A85227A87DA8A8A87DA8AF5259527D%A8A8A87DA9AF2752527DA8A8A87DA8AF27AFA87DA8A8A87D847EFD12FF52%FD147DFFFFFFA8FD28FF84AFAFAFA9AFAFAF7D847D8484FFAFFFAFFF7D84%7DA884FFAFFFAFFF7DA87D847DFFAFAFA9AF84847D847DAF7DFD12FF52FD%13A852FFFFFF7DFD28FFA884AFA8AFA8AFA8AFA8AFA9AFA8AFA9AFA8FFA9%AFA8FFAFFFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF84AFA87EFD12FF7DFD%13A87DFFFFFFA8FD28FFA8AFA8AFA9AFA9AFAFAFA9AFAFAFA9FFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFA9FFAFAFA9AFAFAFA9AFAFAFA9AF7DFD12FF52FD%13A852FFFFFF7DFD28FFA884AF84AFA8AF84AFA8AFA8AFA8AFA8AFA8AFA8%FFA9FFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF8484FD12FF7DFD%13A87DFFFFFFA8FD28FFA8AFA9AFAFAFA9AFAFAFA9FFAFFFAFFFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AF7DFD12FF52FD%13A852FFFFFF7DFD28FFA884AF84AFA8AFA8AFA9AFA8AFA9AFA8FFA9AFA8%FFAFFFA8FFAFAFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF8484FD12FF7DFD%13A87DFFFFFFA8FD28FF7DAFA9AFA9AFAFAF7DA884A884FFAFFFA9FF84A8%7DA8A8FFAFFFAFFF7DA884A87DFFAFAFA9AF84A87DA87EAF7DFD12FF52FD%13A852FFFFFF7DFD28FFA884AF84AF2727A8A8FFFFFF84A8AF2727A8A8FF%FFFFA8522727527DA8FFFFFFA85227A827A884FFFFFFA8847EFD12FF7DFD%13A87DFFFF7DFD29FF84AFAFAFA92727AFA8FFFFFF7DFFAF52F8FFA8FFFF%FF84FF2752AF5284FFFFFF84FF27AF27AF84FFFFFF84AF7DFD12FF597E7D%847D7E7D847D7E7D847D7E7D847D7E7D847DFD2CFFA884AFA8AF2752A8A8%FFFFFF84A8AF5252A8A8FFFFFFA8AF272E527DA8FFFFFFA8A82EA927A8A8%FFFFFFA8A87EFD12FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8%FD2CFFA8AFA8AFA9AFA9AF7DA87DA87EAFA9FFAFFF7DA8A8A87DFFAFFFAF%FF7DA87DA87DAFA9AFAFAF7DA8A8A87DAF7DFD12FF7DAFA8AFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AF7DFD2CFFA884AF84AFA8AF84AFA8AFA8AFA8AF%A8AFA8AFA8FFA9FFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF8484%FD12FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8FD2CFFA8AFA9%AFAFAFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFAFA9AFAFAFA9AF7DFD12FF7DAFA9AFA8AFA9AFA8AFA9AFA8AFA9%AFA8AFA9AF7DFD2CFFA884AF84AFA8AFA8AFA9AFA8AFA9AFA8FFA9AFA8FF%AFFFA8FFAFAFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF8484FD12FF84A9AF%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD2CFF7DAFA9AFA9AFAFAFA9%AFAFAFA9FFAFFFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FFAFAFA9AFAF%AFA9AFA9AF7DFD12FF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7D%FD2CFFA884AF84AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA9AFA8FFA9AFA8FF%A9AFA8AFA8AFA8AFA8AFA8AFA8AF84AF847EFD12FF7D7DA87D847DA87D84%7DA87D847DA87D847DA87DA8FD2CFF84AFAFAFA9AFAFAFA9FFAFAFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AFAFAF7D%FD12FF52FD137D52FFA8A8FD29FFA884AFA8AFA8AFA87D7DA87D84A8AFA9%AFA87D7DA87D84AFFFA8FFA97D7DA87D7DA8AFA9AFA8847DA87D7DA87EFD%12FF7DFD13A87DFFFFA8A8FD28FFA8AFA827A92E27AFA8FFFFFF7E27A952%27FF7DFFFFFF7D7D27FFF8FFA8FFFFFF847D275253A87DFFFFFF7DAF7DFD%12FF52FD13A852FFFFFF7DFD28FFA884AF27AF842784A8FFFFFF8427AFA8%7D52A8FFFFFFA8A8275227A8A8FFFFFFA8A827527D5284FFFFFFA88484FD%12FF7DFD13A87DFFFFFFA8FD28FFA8AFA952AF2752AFA8FFFFFF7E52AF52%597D84FFFFFF7EFF277DF8A8A8FFFFFFA8FF277D597D7DFFFFFF7EAF7DFD%12FF52FD13A852FFFFFF7DFD28FFA884AF84AFA8AFA8847D847DA8A9AFA8%FFA9847DA87DA8A8FFAFAFA8A87DA87DA8A9AFA8AFA9847DA87D848484FD%12FF7DFD13A87DFFFFFFA8FD28FF7DAFA9AFA9AFAFAFA9AFAFAFA9FFAFFF%A9FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FFAFAFA9AFAFAFA9AFA9AF7DFD%12FF52FD13A852FFFFFF7DFD28FFA884AF84AF84AFA8AFA8AFA8AFA8AFA8%AFA8AFA9AFA8FFA9AFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF84AF847EFD%12FF7DFD13A87DFFFFFFA8FD28FF84AFAFAFA9AFAFAFA9FFAFAFAFFFAFFF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AFAFAF7DFD%12FF52FD137D52FFFFFF7DFD28FFA884AFA8AFA8AFA8AFA8AFA9AFA8AFA9%AFA8FFA9AFA8FFAFFFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF84AFA87E27%527DF852277D5252F852275252277DFFFF7DFD13A87DFFFFFFA8FD28FFA8%AFA8AFA9AFA9AFAFAFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9%FFAFAFA9AFAFAFA9AFAFAFA9AF7D27FF5227272752FF272727F827FF2727%FFFF52FD13A852FFFFFF7DFD28FFA884AF84AFA8AF847D7D847DA8A8AFA8%AFA8FD047DA8A8FFA9AFA87E7D7D7D7EA8AFA8AFA884FD047D84842752A8%275227A8525227272752FF5227FFFF7DFD13A87DFFFFFFA8FD28FFA8AFA9%27AF5252AFA8FFFFFF7E27AF7D27FF7DA8A8A87D7D275227FF7DA8A8A87D%7D277D527D7DA8A8A87DAF7D27FD05FF7D27F8FD09FF52FD13A852FFFFFF%A8A87DA8FD13FFA8FD11FFA884AF27AFF827A8A8FFFFFF8427AF7D59A97D%A8A8A87DA82E2752527DA8A8A87DA9275253277DA8A8A87D8484FD07FF27%52FD09FF7DFD13A87DFFFFFFA8FF7DF87DFD07FF7D275227527D52522727%FF2752527DFD0EFF7DAFA92EA95227AF7DFFFFFF7D52AF52A9FF7DA8A8A8%7DFF2727597D7DA8A8A87DFF277D52847DA8A8A87DAF7DFD07FF2727FD09%FF52FD13A852FFFFFF7DFFFF7D527DFD06FF7D27F82752A8FD0427FF2727%FF27FD0EFFA884AF84AF84AFA87D7DA87D84A8AFA8AFA87D7D527D7DA9AF%A8FFA9FD057DA8AFA8AFA87D7D527D7D847EFD07FF2752FD09FF7DFD13A8%7DFFFFFFA8FD04FF7D7DFD05FF7D527D527D7D7D272727FF2752FF52FD0E%FF84AFAFAFA9AFAFAFA9FFAFAFAFFFAFFFAFFFAF8427FFAFFFAFFFAFFFAF%FFF8FFAFFFAFAFA9AFAFAF27A8AFAF7DFD12FF52FD137D52FFFFFF7DFD05%FFA852A8FD0BFF27FD14FFA884AFA8AFA8AFA8AFA8AFA9AFA8AFA9AFA8FF%5227A8FFAFFFA8FFA9AF7D277DAFA8AFA9AFA8AF842752AFA87EFD12FF7D%FD13A87DFFFFFFA8FD06FFA852527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D527D525952595259525952595259525952%7D5259527D2759527D5259527D52592759525952595259525927AFA9AF7D%FD12FF52FD13A852FFFFFF7DFD28FFA884AF84AFA8AF84AFA8AFA8AFA8AF%A8AFA8AFA8FFA9FFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF84AFA8AF8484%FD12FF7DFD13A87DFFFFFFA8FD28FFA8AFA9AFAFAFA9AFAFAFA9FFAFFFAF%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AF7D%FD12FF52FD13A852FFFFFF7DFD28FFA884AF84AFA8AFA8AFA9AFA8AFA9AF%A8FFA9AFA8FFAFFFA8FFAFAFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF8484%FD12FF7DFD13A87DFFFFFFA8FD28FF7DAFA9AFA9AFAFAF7DA8A8A87DFFAF%FFA9FF7DA87DA87DFFAFFFAFFF7DA8A8A87DFFAFAFA9AF7DA87DA87DAF7D%FD12FF52FD13A852FFFFFF7DFD28FFA884592E592752A8A8FFFFFF52277D%5227A8A8FFFFFFA8FD0427A9A8FFFFFFA8272759525284FFFFFFA8847EFD%12FF7DFD13A87DFFFFA8FD29FF84AFAF597D5227AFA8FFFFFF7D7D7EFF27%FFA8FFFFFF84AF27AF27FF84FFFFFF84AF27A9527D84FFFFFF84AF7DFD12%FF5259527D5259527D5259527D5259527D5259527D7DFFA8FD2AFFA8847D%277E2752A8A8FFFFFF522784A927A8A8FFFFFFA8277D277DA9A8FFFFFFA8%277D595253A8FFFFFFA8A87EFD12FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9A8FD2CFFA8AFA8AFA9AFA9AF7DA87DA8A8AFA9FFAFFF7DA884%A884FFAFFFAFFF84A87DA87EAFA9AFAFAF84A87EA87DAF7DFD12FF7DAFA8%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD2CFFA884AF84AFA8AF84AF%A8AFA8AFA8AFA8AFA8AFA8FFA9FFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF%84AFA8AF8484FD12FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9A8%FD2CFFA8AFA9AFAFAFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AF7DFD12FF7DAFA9AFA8AFA9AFA8%AFA9AFA8AFA9AFA8AFA9AF7DFD2CFFA884AF84AFA8AFA8AFA9AFA8AFA9AF%A8FFA9AFA8FFAFFFA8FFAFAFA8FFA9AFA8AFA9AFA8AFA9AFA8AFA8AF8484%FD12FF84A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD2CFFA8AFA9%AFA9AFAFAFA9AFAFAFA9FFAFFFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9%FFAFAFA9AFAFAFA9AFA9AF7DFD12FF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AF7DFD2DFF7DAF84AF84AFA8AFA8AFA8AFA8AFA8AFA8AFA9AFA8%FFA9AFA8FFA9AFA8AFA8AFA8AFA8AFA8AFA8AF84AF8484FD12FFA8A9AFAF%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD2EFF7EAFA9AFAFAFA9FFAFAF%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AF%A8A8FD13FF7D847D847D847D847D847D847D847D847D847D847DFD2FFF7D%8484AFA8AFA8AFA9AFA8AFA9AFA8FFA9AFA8FFAFFFA8FFA9AFA8AFA9AFA8%AFA9AFA8AFA8847DA8FD14FFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAF%AFA9A8FD31FFA87DA884AFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAF%FFA9FFAFAFA9AFAF847DA8A8FD16FF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AF7DFD35FF7D847D847D84A8AFA8AFA8FFA9FFA8FFA9AFA8AFA8%AF7D847D847DA8FD1AFFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9%A8FD3BFFA8A8A87EA8A8A884A8A8A87EA8A8A884FD20FF7DAFA9AFA8AFA9%AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD6BFF84A9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFA8FD6BFF7DAFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8%AF7DFD6BFFA8A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD6BFF7D%847D847D847D847D847D847D847D847D847D847DFD6BFFA8AFAFA9AFAFAF%A9AFAFAFA9AFAFAFA9AFAFAFA9A8FD6BFF7DAFA8AFA8AFA8AFA8AFA8AFA8%AFA8AFA8AFA8AF7DFD6BFFA8AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF%A9A8FD6BFF7DAFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF7DFD6BFF84%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFA8FD6BFF7DAFA8AFA8AFA8%AFA8AFA8AFA8AFA8AFA8AFA8AF7DFD6BFFA8A9AFAFAFA9AFAFAFA9AFAFAF%A9AFAFAFA9AFAFA8FD6BFF59847D847D847D847D847D847D847D847D847D%847DFDFCFFFD7AFF7DFD79FF525227277D5227275252FD76FF27FF27527D%522752FF52FD76FF27FF27277D52F827FF27FDFCFFFD77FF525227277D27%F85227275252A8F85252FD70FF27FF2727F87D27FF272727FF52275252FD%70FF52FF5227525252FF52275252A8277D52FD7EFF52FDFCFFFD60FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/exec_file	statusdict /currentfilenameextend known{		{			0 () /SubFileDecode filter cvx exec		}	}{				{cvx exec}	}ifelsedef/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		currentdict /lw_initializepage known not			{			/lw_initializepage /initializepage load def			/initializepage				{				lw_initializepage				/initializepage {} def				}def			}if		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Gradient 1.1 0%%Version: 1.1 0%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Gradient 190 dict dup begin put/AGMGrad_&image nd/AGMGrad_&colorimage nd/AGMGrad_&fill nd/AGMGrad_subSampleOK nd/AGMGrad_d255 nd/AGMGrad_sSave nd/AGMGrad_dUserSpace nd/AGMGrad_bUMatrix nd/AGMGrad_imageMatrix nd/AGMGrad_saveMatrix nd/AGMGrad_gMatrix nd/AGMGrad_tmpMat nd/AGMGrad_currentcolorspace nd/AGMGrad_bbox nd/AGMGrad_usingShells nd/AGMGrad_byte nd/AGMGrad_blackTmp nd/AGMGrad_yellowTmp nd/AGMGrad_magentaTmp nd/AGMGrad_cyanTmp nd/AGMGrad_cnt nd/AGMGrad_usingSmoothShade nd/AGMGrad_index nd/AGMGrad_rampFuncsArray nd/AGMGrad_boundsArray nd/AGMGrad_encodeArray nd/AGMGrad_beginCoord nd/AGMGrad_colorSpace nd/AGMGrad_firstFill nd/AGMGrad_lastFill nd/AGMGrad_size nd/AGMGrad_rampLen nd/AGMGrad_invert nd/AGMGrad_endCoord nd/AGMGrad_s nd/AGMGrad_j nd/AGMGrad_i nd/AGMGrad_tintNdx nd/AGMGrad_cmpNdx nd/AGMGrad_nColorSpace nd/AGMGrad_C0 nd/AGMGrad_C0_Space nd/AGMGrad_C1 nd/AGMGrad_C1_Space nd/AGMGrad_rampColorSpace nd/AGMGrad_bUMatrix nd/AGMGrad_channels nd/AGMGrad_len nd/AGMGrad_currenttint nd/AGMGrad_currentcolorant nd/AGMGrad_cmpIndx nd/AGMGrad_ndx nd/AGMGrad_rampIndex nd/AGMGrad_firstShell nd/AGMGrad_ramp nd/AGMGrad_rampDict nd/AGMGrad_endPoint nd/AGMGrad_rampPoint nd/AGMGrad_midPoint nd/AGMGrad_colorRamp nd/AGMGrad_nSamples nd/AGMGrad_sInc nd/AGMGrad_bInc nd/AGMGrad_nSubSamples nd/AGMGrad_optimize nd/AGMGrad_nRadSamples nd/AGMGrad_uRampLen nd/AGMGrad_pChange nd/AGMGrad_xBCInc nd/AGMGrad_yBCInc nd/AGMGrad_nColorsBd nd/AGMGrad_gradType nd/AGMGrad_gradName nd/AGMGrad_renderFlag nd/AGMGrad_retainPath nd/AGMGrad_enabledSmoothShade nd/AGMGrad_rampData nd/AGMGrad_nRamps nd/AGMGrad_xHi nd/AGMGrad_yHi nd/AGMGrad_radHilite nd/AGMGrad_gradNames nd		/AGMGrad_tint nd/AGMGrad_tint_min nd/AGMGrad_tint_max nd/AGMGrad_range nd/doc_setup{	Adobe_AGM_Core begin	Adobe_AGM_Gradient begin	initializeVars		level2{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeShading	/image where{		/image get /AGMGrad_&image xp	}if	/colorimage where{		/colorimage get /AGMGrad_&colorimage xp	}if	currentdict /AGMGrad_&fill get type /nulltype eq		{		/AGMGrad_&fill /fill load def		}if	end	end}def/doc_trailer{	currentdict Adobe_AGM_Gradient eq{		end	}if}def /page_setup{	Adobe_AGM_Gradient begin	/AGMGrad_subSampleOK 		AGMCORE_deviceDPI AGMGrad_dpiThreshold le 		currentScreenFreq AGMGrad_screenFreqThreshold le and 		AGMGrad_contoneDevice not and 	def	initializeRectFill	AGMCORE_producing_seps{		initializeSep	}{		initializeComposite	}ifelse	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	end}def/page_trailer{}def/initializeVars{	/AGMGrad_d255 256 array def	0 1 255{		AGMGrad_d255 exch dup 255 div put	}bind for	/AGMGrad_sSave nd	/AGMGrad_dUserSpace matrix defaultmatrix def	/AGMGrad_bUMatrix matrix def	/AGMGrad_imageMatrix matrix def	/AGMGrad_saveMatrix matrix def	/AGMGrad_gMatrix matrix def	/AGMGrad_tmpMat matrix def	/AGMGrad_currentcolorspace nd	/AGMGrad_bbox 4 array def	/AGMGrad_black (/AGM_Black) def}def/queryDevice{	/AGMGrad_PathsOnly false ndf	/AGMGrad_useShells false ndf	/AGMGrad_usingShells AGMGrad_useShells pt	/AGMGrad_useSmoothShade true ndf	/AGMGrad_dpiThreshold 600 ndf	/AGMGrad_screenFreqThreshold 150 ndf	/AGMGrad_contoneDevice false ndf}def/initializeRectFill{	/rectfill where dup{		exch pop not AGMCORE_producing_seps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/AGMGrad_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/AGMGrad_blackTmp xp			/AGMGrad_yellowTmp xp			/AGMGrad_magentaTmp xp			/AGMGrad_cyanTmp xp			/AGMGrad_cnt 0 pt						[			AGMGrad_byte dup 0			AGMGrad_cyanTmp 				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .3 /mul cvx			AGMGrad_magentaTmp				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .59 /mul cvx			AGMGrad_yellowTmp				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .11 /mul cvx			AGMGrad_blackTmp 				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/AGMGrad_cnt dup cvx 1 /add cvx /pt cvx			] cvx bind						AGMGrad_&image		}def	}ifelse		/setcolor nd	/currentcolor nd		/setcolorspace	{		0 get /AGMGrad_currentcolorspace xp		AGMGrad_currentcolorspace /DeviceCMYK eq{			/setcolor {setcmykcolor} bind pt			/currentcolor {currentcmykcolor} bind pt		}{			AGMGrad_currentcolorspace /DeviceGray eq{				/setcolor {setgray} bind pt				/currentcolor {currentgray} bind pt			}{				AGMGrad_currentcolorspace /DeviceRGB eq{					/setcolor {setrgbcolor} bind pt					/currentcolor {currentrgbcolor} bind pt				}if			}ifelse		}ifelse	}def	/currentcolorspace	{		[ AGMGrad_currentcolorspace ]	}def	/dictImage	{		pop		currentcolorspace 0 get /DeviceGray eq {			aload pop			AGMGrad_&image		}{			dup length /AGMGrad_tmp xp			aload pop true AGMGrad_tmp			colorimage		}ifelse	}def}def/initializeLev2{	/dictImage	{		10 dict begin			/Decode xdf			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			DataSource type /arraytype eq{				/MultipleDataSources true def			}if			currentdict		end		AGMGrad_&image	}def}def/initializeShading{	AGMGrad_useSmoothShade level3 and{		/AGMGrad_usingSmoothShade true pt		initializeLev3_Ops	}{		/AGMGrad_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/AGMGrad_index AGMGrad_gradType 0 eq {0}{AGMGrad_maxRampIndex} ifelse pt		/AGMGrad_rampFuncsArray AGMGrad_nRamps array pt		/AGMGrad_boundsArray AGMGrad_nRamps 1 sub array pt		/AGMGrad_encodeArray AGMGrad_nRamps 2 mul array pt		/AGMGrad_beginCoord AGMGrad_rampPoint pt		/AGMGrad_colorSpace null pt		/AGMGrad_firstFill AGMGrad_rampIndex AGMGrad_maxRampIndex eq pt		/AGMGrad_lastFill false pt	}def	/linealShFill{		popRampSpace		AGMGrad_gMatrix pushRampSpace				/AGMGrad_size AGMGrad_index 1 add pt		AGMGrad_size AGMGrad_nRamps lt {			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray 0 AGMGrad_size getinterval pt			/AGMGrad_boundsArray AGMGrad_boundsArray 0 AGMGrad_size 1 sub getinterval pt			/AGMGrad_encodeArray AGMGrad_encodeArray 0 AGMGrad_size 2 mul getinterval pt		}if				/AGMGrad_rampLen AGMGrad_endCoord AGMGrad_beginCoord sub pt		bdict			/ShadingType 2			/ColorSpace AGMGrad_colorSpace			/Function 				bdict					/FunctionType 3					/Domain [0 1]					/Functions AGMGrad_rampFuncsArray					/Bounds AGMGrad_boundsArray					/Encode AGMGrad_encodeArray				edict				AGMGrad_nRamps 1 gt{					dup begin					/Bounds [ Bounds {AGMGrad_beginCoord sub AGMGrad_rampLen div} forall] def					end				}if			/Extend [AGMGrad_firstFill AGMGrad_lastFill]			/Domain [0 1] 			/Coords [AGMGrad_beginCoord 0 AGMGrad_endCoord 0]		edict		shfill	}def		/radialShFill{		/AGMGrad_size AGMGrad_nRamps AGMGrad_index sub pt		AGMGrad_size AGMGrad_nRamps lt {			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray AGMGrad_index AGMGrad_size getinterval pt			/AGMGrad_boundsArray AGMGrad_boundsArray AGMGrad_index AGMGrad_size 1 sub getinterval pt			/AGMGrad_encodeArray AGMGrad_encodeArray AGMGrad_index 2 mul AGMGrad_size 2 mul getinterval pt		}if				/AGMGrad_rampLen AGMGrad_beginCoord AGMGrad_endCoord sub pt		bdict			/ShadingType 3			/ColorSpace AGMGrad_colorSpace			/Function 				bdict					/FunctionType 3					/Domain [0 1]					/Functions AGMGrad_rampFuncsArray					/Bounds AGMGrad_boundsArray					/Encode AGMGrad_encodeArray				edict				AGMGrad_nRamps 1 gt{					dup begin					/Bounds [ Bounds {AGMGrad_endCoord sub AGMGrad_rampLen div} forall] def					end				}if			/Extend [AGMGrad_lastFill				systemdict/setdistillerparams known AGMCORE_distilling not and				{				AGMGrad_firstFill				}{				false				}ifelse				]			/Domain [0 1] 			/Coords [AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_endCoord 0 0 AGMGrad_beginCoord] 		edict		shfill				AGMGrad_radHilite{			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate		}if	}def		/sampFunc{		/AGMGrad_tmp exch pt		bdict			/FunctionType 0			/Order 1			/Size [AGMGrad_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource AGMGrad_tmp			/Range [0 1]		edict	}def		/fillRamp{				/AGMGrad_invert AGMGrad_midPoint 0.5 lt pt		AGMGrad_rampIndex AGMGrad_maxRampIndex eq {			initShFill		}if				getRampColorSpace				AGMGrad_colorSpace null eq{			/AGMGrad_colorSpace AGMGrad_rampColorSpace pt		}{			AGMGrad_colorSpace AGMGrad_rampColorSpace ne {				/AGMGrad_index AGMGrad_index 1 				AGMGrad_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/AGMGrad_colorSpace AGMGrad_rampColorSpace pt			} if		}ifelse		/AGMGrad_endCoord AGMGrad_endPoint pt					Interpolation{			false		}{			SpotColor{				false			}{				AGMCORE_is_cmyk_sep			}ifelse		}ifelse				{ 			AGMCORE_composite_job{											/AGMGrad_s NumSamples NumComponents mul string def				/AGMGrad_j 0 pt				0 1 NumSamples 1 sub {					/AGMGrad_i exch pt					0 1 NumComponents 1 sub {						Ramp exch get AGMGrad_i get AGMGrad_s AGMGrad_j 3 -1 roll put 						/AGMGrad_j AGMGrad_j 1 add pt					}for				}for								AGMGrad_rampFuncsArray AGMGrad_index				bdict					/FunctionType 0					/Order 1					/Size [NumSamples]					/Domain [0 1]					/BitsPerSample 8					/DataSource AGMGrad_s					/Range [NumComponents {0 1} repeat]				edict				put			}{				AGMGrad_rampFuncsArray AGMGrad_index					AGMCORE_cyan_plate{						Ramp 0 get					}if					AGMCORE_magenta_plate{						Ramp 1 get					}if					AGMCORE_yellow_plate{						Ramp 2 get					}if					AGMCORE_black_plate{						Ramp 3 get					}if					sampFunc					dup begin /Decode [1 0] def end				put			}ifelse			/AGMGrad_invert false pt		}{						AGMGrad_rampFuncsArray AGMGrad_index				bdict					/FunctionType 2					/Domain [0 1]					/N 0.5 log AGMGrad_invert{1 AGMGrad_midPoint sub}{AGMGrad_midPoint}ifelse log div					AGMGrad_gradType 0 eq{						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1					}{						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0					}ifelse				edict			put		}ifelse				AGMGrad_rampIndex 0 ne{			AGMGrad_boundsArray AGMGrad_index AGMGrad_gradType 1 eq{1 sub}if AGMGrad_endCoord put		} if				0 1 AGMGrad_invert {exch}if		AGMGrad_encodeArray AGMGrad_index 2 mul 1 add 3 -1 roll put		AGMGrad_encodeArray AGMGrad_index 2 mul 3 -1 roll put		AGMGrad_rampIndex 0 eq {			/AGMGrad_lastFill true pt			AGMGrad_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/AGMGrad_index AGMGrad_index 1 		AGMGrad_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	AGMGrad_PathsOnly not level2 not and{		/linealFill{			8 setImageParms			AGMGrad_colorRamp{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 AGMGrad_&colorimage			}{				currentgray makeByte8 AGMGrad_&image 			}ifelse		}def	}if	level3{		/getRampColorSpace{			SpotColor{						[					NumTintComponents 2 eq					{						/DeviceN 							[							Colorants 0 get							substituteBlack							Colorants 1 get							substituteBlack							] 					}{						/Separation						Colorants 0 get						substituteBlack					}ifelse					CSA map_csa 					[						/AGMGrad_range NumTintComponents 2 eq {1} {0} ifelse pt						/AGMGrad_tint_range_0 TintRange AGMGrad_range get 0 get pt						/AGMGrad_tint_range_1 TintRange AGMGrad_range get 1 get pt						AGMGrad_tint_range_0 AGMGrad_tint_range_1 2 copy gt{							/AGMGrad_tint_min xdf							/AGMGrad_tint_max xdf						}{							/AGMGrad_tint_max xdf							/AGMGrad_tint_min xdf						}ifelse						NumTintComponents 1 eq						{							Colorants 0 get get_csd_by_name	/ColorLookup get							/exch cvx 255 /mul cvx /cvi cvx /get cvx							/aload cvx /pop cvx						}{							/exch cvx  /pop	cvx								255 /mul cvx /cvi cvx							/AGMGrad_tint /xp cvx							/AGMGrad_TintRamp TintRamp 1 get def						 							0 1 NumComponents 1 sub{								Ramp exch get dup type /stringtype eq 									{									6 dict begin									/AGMGrad_Ramp xp									/AGMGrad_lookup 256 string def									/AGMGrad_min AGMGrad_TintRamp 0 get def									/AGMGrad_max AGMGrad_TintRamp dup length 1 sub get def									/AGMGrad_index 0 def									0 1 AGMGrad_min										{										AGMGrad_lookup exch AGMGrad_Ramp 0 get put										}for									AGMGrad_max 1 255										{										AGMGrad_lookup exch AGMGrad_Ramp dup length 1 sub get put										}for									AGMGrad_min 1 AGMGrad_max										{										/AGMGrad_count xp										AGMGrad_index 1 AGMGrad_TintRamp length 2 sub											{											AGMGrad_TintRamp exch get AGMGrad_count ge												{												exit												}if											/AGMGrad_index AGMGrad_index 1 add def											}for										AGMGrad_lookup AGMGrad_count										AGMGrad_Ramp AGMGrad_index get										put										}for																			AGMGrad_lookup /AGMGrad_tint cvx /get cvx 255 /div cvx									end									}{pop 0}ifelse							}for						}ifelse					] cvx				] setcolorspace				/AGMGrad_nColorSpace currentcolorspace pt			}if						AGMGrad_nSamples 1 gt{ 				firstRampColor			}if			SpotColor{				/AGMGrad_C0 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C0_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C0 [currentcolor] pt				/AGMGrad_C0_Space currentcolorspace pt			}ifelse			AGMGrad_nSamples 1 gt{ 				lastRampColor			}if			SpotColor{				/AGMGrad_C1 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C1_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C1 [currentcolor] pt				/AGMGrad_C1_Space currentcolorspace pt			}ifelse						/AGMGrad_rampColorSpace AGMGrad_C0_Space pt					}def	}if}def/npop{	{pop}repeat}def/pt{	Adobe_AGM_Gradient 3 1 roll put}def/xp{	exch pt}def/mySave{	save /AGMGrad_sSave xp}def/myRestore{	AGMGrad_sSave type /savetype eq{		AGMGrad_sSave restore	}if}def/pushRampSpace{	newpath gsave	dup /AGMGrad_bUMatrix xp concat }def/popRampSpace{	grestore}def/makeByte8{	/AGMGrad_tmp 0 pt	255 mul cvi	8 string 8{		dup AGMGrad_tmp 3 index put 		/AGMGrad_tmp AGMGrad_tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 AGMGrad_imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/path_bbox{	{currentpoint} stopped {		0 0 0 0	}{		pop pop		pathbbox	}ifelse}def/expandOne	{	/AGMGrad_tmp xp	dup type /stringtype ne{		AGMGrad_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 AGMGrad_tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/AGMGrad_channels xp	/AGMGrad_len xp	AGMGrad_channels{		AGMGrad_len expandOne AGMGrad_channels 1 roll	}repeat}def/substituteBlack{	dup AGMGrad_black eq{		pop /Black	}if}def/settints{	/AGMGrad_currenttint xp}def/currenttints{	AGMGrad_currenttint}def/setcolorants{	/AGMGrad_currentcolorant xp}def/currentcolorants{	AGMGrad_currentcolorant}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/rampColor{			/AGMGrad_cmpIndx 0 pt	AGMCORE_producing_seps not SpotColor and AGMGrad_enabledSmoothShade and not{		NumComponents{			Ramp AGMGrad_cmpIndx get dup type /stringtype eq{				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			}if			/AGMGrad_cmpIndx AGMGrad_cmpIndx 1 add pt		}repeat		{			currentdict/Decode known{				0 2 NumComponents 2 mul 1 sub{					/AGMGrad_i xp					NumComponents -1 roll					Decode AGMGrad_i 1 add get 					Decode AGMGrad_i get 					sub mul 					Decode AGMGrad_i get add				}for			}if			setcolor		} bind /exec cvx	}if	AGMCORE_producing_seps AGMGrad_enabledSmoothShade or SpotColor and{		/mark cvx		TintRamp 0 get dup type /stringtype eq{			/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx		}if		NumTintComponents 2 eq{			 TintRamp 1 get dup type /stringtype eq{				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx			}if		}if		(]) cvn cvx		/settints cvx		Colorants /setcolorants cvx	}if}def/firstRampColor{	/AGMGrad_ndx 0 pt	[rampColor] cvx exec}def			/lastRampColor{	/AGMGrad_ndx AGMGrad_nSamples 1 sub pt	[rampColor] cvx exec}def			/useRectImage{	AGMGrad_subSampleOK AGMGrad_usingSmoothShade not and{		0 1 dtransform atan cvi 90 mod 0 eq		1 0 dtransform atan cvi 90 mod 0 eq		and	}{		false	}ifelse}def/linealImage{	useRectImage AGMGrad_PathsOnly or{		rectImage	}{		rampImage	}ifelse}def/linealRamp{	pushRampSpace	AGMGrad_ramp{		linealImage	}{		linealFill	}ifelse	popRampSpace	/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt	AGMGrad_rampIndex 0 ge{		getRampData	}if}def/radialGrad{	/AGMGrad_usingShells currentoverprint AGMCORE_producing_seps and AGMGrad_usingShells or pt		/AGMGrad_firstShell true pt	currentoverprint AGMCORE_producing_seps and{				newpath		clippath path_bbox 		1 add 4 1 roll		1 add 4 1 roll		1 sub 4 1 roll		1 sub 4 1 roll		AGMGrad_bbox astore pop				newpath		AGMGrad_bbox 0 get AGMGrad_bbox 1 get moveto		AGMGrad_bbox 2 get AGMGrad_bbox 1 get lineto		AGMGrad_bbox 2 get AGMGrad_bbox 3 get lineto		AGMGrad_bbox 0 get AGMGrad_bbox 3 get lineto		closepath		dup		gsave dup /AGMGrad_bUMatrix xp concat		AGMGrad_rampPoint 0 moveto 0 0 AGMGrad_rampPoint 0 360 arc closepath		eoclip fill		popRampSpace	}if	pushRampSpace		AGMGrad_radHilite{		AGMGrad_rampPoint 1 lt{			1 AGMGrad_rampPoint sub dup AGMGrad_xHi mul exch AGMGrad_yHi mul translate		}if	}if	AGMGrad_nRamps{		radialRamp		/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt		AGMGrad_rampIndex 0 ge{			getRampData		}if	}repeat		popRampSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/AGMGrad_ramp true pt		AGMGrad_rampDict null ne{		end	}if	/AGMGrad_rampDict AGMGrad_rampData AGMGrad_rampIndex get pt	AGMGrad_rampDict begin				Start End		AGMGrad_gradType 1 eq{			exch		}if		/AGMGrad_endPoint xp		/AGMGrad_rampPoint xp		/AGMGrad_midPoint Mid pt		/AGMGrad_colorRamp CSA map_csa 0 get /DeviceGray ne pt		currentdict set_csa_crd		SpotColor AGMCORE_producing_seps and{						/SpotConverted [				0 AGMGrad_SpotConverted				NumTintComponents 2 eq{					1 AGMGrad_SpotConverted				}{					false				}ifelse			] def			/RenderCMYK SpotConverted aload pop or def		}{			/RenderCMYK true def		}ifelse		AGMGrad_ramp{			/AGMGrad_nSamples NumSamples pt			AGMGrad_enabledSmoothShade not{				/AGMGrad_ramp AGMGrad_nSamples 1 gt pt			}if		}if}def/rampImage{	AGMGrad_enabledSmoothShade{		fillRamp	}{		NumSamples setImageParms		[ Ramp aload pop ]		currentdict/Decode known{			Decode		}{			[ NumComponents {0 1} repeat ]		}ifelse		dictImage	}ifelse}def	/rectImage{	gsave	/AGMGrad_sInc 1 pt	/AGMGrad_bInc 1 AGMGrad_nSamples div pt	/AGMGrad_nSubSamples AGMGrad_nSamples pt	/AGMGrad_optimize false pt			AGMGrad_subSampleOK{		/AGMGrad_uRampLen 1 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt pt		/AGMGrad_pChange AGMGrad_uRampLen 0 eq{0}{AGMGrad_nSamples AGMGrad_uRampLen div}ifelse pt				AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{			/AGMGrad_nSubSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/AGMGrad_bInc 1 AGMGrad_nSubSamples div pt			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nSubSamples 1 sub div pt		}if	}if		0	AGMGrad_nSubSamples	[	/dup cvx	AGMGrad_optimize {		/round cvx /cvi cvx	} if	/AGMGrad_ndx /exch cvx /pt cvx	rampColor	0 0 AGMGrad_bInc 1 /rectfill cvx	AGMGrad_bInc 0 /translate cvx	AGMGrad_sInc /add cvx	] cvx bind	repeat	pop	grestore}def/radialInit{	/AGMGrad_nRadSamples AGMGrad_nSamples dup 0 eq{pop 1}if pt	/AGMGrad_sInc -1 pt	/AGMGrad_rampLen AGMGrad_rampPoint AGMGrad_endPoint sub pt	/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nSamples div neg pt	/AGMGrad_optimize false pt	AGMGrad_subSampleOK{		/AGMGrad_uRampLen			AGMGrad_rampLen 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt			0 AGMGrad_rampLen dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/AGMGrad_pChange 			AGMGrad_uRampLen 0 eq{				0			}{				AGMGrad_nSamples AGMGrad_uRampLen div			}ifelse		pt		AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{			/AGMGrad_nRadSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nRadSamples div neg pt			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nRadSamples 1 sub div neg pt		}if	}if	AGMGrad_radHilite{		/AGMGrad_xBCInc AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt		/AGMGrad_yBCInc AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt	}if}def/radialRamp{	AGMGrad_enabledSmoothShade{		fillRamp	}{		/AGMGrad_saveMatrix AGMGrad_saveMatrix currentmatrix pt				radialInit			true		AGMCORE_producing_seps Interpolation and{			AGMGrad_nSamples 1 gt{ 				pop				firstRampColor currentInkN				lastRampColor currentInkN				or			}if		}if		{			AGMGrad_rampPoint					AGMGrad_nSamples 1 sub					AGMGrad_nRadSamples 			[				/dup cvx						AGMGrad_optimize{					/round cvx /cvi cvx				}if						/AGMGrad_ndx /exch cvx /pt cvx								AGMGrad_usingShells{					/AGMGrad_firstShell cvx{						/AGMGrad_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						rampColor						AGMGrad_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx AGMGrad_bInc /add cvx /exch cvx						AGMGrad_sInc /add cvx						AGMGrad_radHilite{					AGMGrad_xBCInc AGMGrad_yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			AGMGrad_usingShells{				0 0 AGMGrad_rampPoint 360 0 arcn fill			}if		}ifelse			AGMGrad_saveMatrix setmatrix				AGMGrad_radHilite{			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate		}if				AGMGrad_usingShells AGMGrad_rampIndex 0 eq and{			fill		}if		}ifelse}def/matrix_invertible{	{		mark 1 index AGMGrad_tmpMat invertmatrix	} stopped {		cleartomark		pop		false	}{		cleartomark		pop		true	}ifelse}def/Gb{	Adobe_AGM_Gradient begin	/AGMGrad_rampDict null pt	mySave}def/Gd{	Adobe_AGM_Gradient begin	/AGMGrad_nColorsBd xp	/AGMGrad_gradType xp	/AGMGrad_gradName xp	[	[}def/Gm{	AGMGrad_renderFlag 2 ne{		AGMGrad_gradType 0 eq{			linealRamp		}{			radialGrad		}ifelse	}{		pop	}ifelse}def	/Gg{	/AGMGrad_gMatrix xp	4 npop	/AGMGrad_gradName xp	/AGMGrad_renderFlag xp	/AGMGrad_retainPath xp	/AGMGrad_enabledSmoothShade false pt		path_bbox 3 index 2 index eq{		2 index 1 index eq{			/AGMGrad_renderFlag 2 pt		}if	}if		AGMGrad_gMatrix matrix_invertible not{		/AGMGrad_renderFlag 2 pt	}if		4 npop 	AGMGrad_renderFlag 2 ne{		/AGMGrad_enabledSmoothShade 			level3{				AGMGrad_usingSmoothShade				AGMCORE_producing_seps not				currentoverprint not or and				AGMGrad_PathsOnly not and				AGMCORE_in_rip_sep 1 currenttransfer exec 0.5 lt and not and			}{				false			}ifelse		pt				AGMGrad_renderFlag 3 eq{			eoclip		}{			clip		}ifelse					AGMGrad_gradNames AGMGrad_gradName known{			AGMGrad_gradNames AGMGrad_gradName get			aload pop			/AGMGrad_gradType xp			2 sub dup /AGMGrad_rampIndex xp			/AGMGrad_maxRampIndex xp			/AGMGrad_rampData xp			/AGMGrad_nRamps AGMGrad_rampData length pt		}if		getRampData				AGMGrad_enabledSmoothShade{			getRampColorSpace		}if				AGMGrad_gradType 0 eq{			firstRampColor		}{			lastRampColor		}ifelse						currentcolorspace 0 get /DeviceN eq{			currenttints 0 get			currenttints length 2 eq{				currenttints 1 get			}if			setcolor		}if				currentcolorspace 0 get /Separation eq{			currenttints 0 get			setcolor		}if						currentoverprint AGMCORE_producing_seps and not{			gsave fill grestore		}if	}if		AGMGrad_gradType 1 eq{		AGMGrad_gMatrix Gm	}if}def/Gh{	dup 1 gt{		pop 1	}if	2 copy	exch dup sin exch cos	2 index mul exch	2 index mul 	neg /AGMGrad_yHi xp	/AGMGrad_xHi xp	/AGMGrad_radHilite AGMGrad_xHi 0 ne AGMGrad_yHi 0 ne or pt	3 npop}def/Gc{		AGMGrad_renderFlag 2 eq	AGMGrad_enabledSmoothShade or{		pop	}{		dup matrix_invertible{			AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix			pushRampSpace			AGMGrad_rampIndex 0 lt{				lastRampColor			}if			linealFill			popRampSpace		}{			pop		}ifelse	}ifelse}def/Gr{	dup matrix_invertible{		AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix		Gm	}{		pop	}ifelse}def/GB{	AGMGrad_rampDict null ne{		end	}if	AGMGrad_retainPath	myRestore	end	not{		newpath	}if}def/GD{	currentdict/AGMGrad_gradNames get null eq{		/AGMGrad_gradNames 20 dict def	}if	]	dup {		begin			/Ramp [ Ramp 0 NumComponents getinterval aload pop NumSamples NumComponents expandColor ] def			currentdict/Colorant known{				/TintRamp [ TintRamp 0 NumTintComponents getinterval aload pop NumSamples NumTintComponents expandColor ] def			}if		end	} forall	AGMGrad_nColorsBd AGMGrad_gradType	]  AGMGrad_gradName exch /AGMGrad_gradNames xput	end}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Gradient_Sep 1.0 0%%Version: 1.0 0%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)systemdict /setpacking known{	currentpacking	true setpacking} ifAdobe_AGM_Gradient begin/initializeSep{	/AGMGrad_ccAry1 5 array pt	/AGMGrad_whiteBytes 1 makeByte8 pt	/AGMGrad_name null pt	/AGMGrad_nColorSpace null pt		AGMCORE_composite_job{		initializeInRIPSeps	}{		initializeHostBasedSeps	}ifelse	initializeAllSeps	Adobe_AGM_Gradient{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/initializeAllSeps{	AGMGrad_PathsOnly not level2 not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave					8 setImageParms					AGMGrad_colorRamp{						SpotColor{							TintRamp 0 currenttints 0 get makeByte8 put							currenttints length 2 eq{								TintRamp 1 currenttints 1 get makeByte8 put							}if						}if								currentcolor						4{							makeByte8 4 1 roll						}repeat												AGMGrad_SepColorImage					}{						currentcolor 1 exch sub 												makeByte8 												AGMGrad_SepImage					}ifelse				myRestore			}ifelse		}def	}if	 /AGMGrad_knockOut{		AGMGrad_PathsOnly level2 or{			gsave			1 setgray 			newpath			0 0 moveto 1 0 lineto 1 1 lineto 0 1 lineto closepath 			AGMGrad_&fill			grestore		}{			8 setImageParms AGMGrad_whiteBytes AGMGrad_&image		}ifelse	}def	/setCustomColor	{		1 index AGMGrad_black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll AGMGrad_ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setPreTintCustomColor	{		{			pop setcmykcolor		}{			setCustomColor		}ifelse	}def		/AGMGrad_CurrentInk{		true		AGMCORE_in_rip_sep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentgray 1 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			RenderCMYK{			AGMGrad_CurrentInk		}{			currentcolorspace 0 get /DeviceCMYK eq{				gsave				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor				AGMGrad_CurrentInk				grestore				currenttints length 2 eq{					gsave					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor					AGMGrad_CurrentInk					grestore					or				}if			}{				true				}ifelse		} ifelse	}def	/fillOvp{		currentoverprint{			AGMCORE_in_rip_sep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentgray 1 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		AGMGrad_&fill	}def	/fill{		RenderCMYK{			fillOvp		}{			currentcolorspace 0 get /DeviceGray eq{				0 0 0 currentgray 1 exch sub setcmykcolor			}if						currentcolorspace 0 get /DeviceCMYK eq{								gsave				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor				fillOvp 				grestore				currenttints length 2 eq{					gsave					/AGMGrad_currentoverprint currentoverprint pt					true setoverprint					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor					fillOvp					AGMGrad_currentoverprint setoverprint					grestore				}if			}{				gsave				[/Separation currentcolorants 0 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace				currenttints 0 get setcolor				fillOvp				grestore				currenttints length 2 eq{					gsave					/AGMGrad_currentoverprint currentoverprint pt					[/Separation currentcolorants 1 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace										true setoverprint					currenttints 1 get setcolor					fillOvp					AGMGrad_currentoverprint setoverprint					grestore				}if			}ifelse			newpath		}ifelse	}def		/rampImage{		currentoverprint{			rectImage		}{			AGMGrad_enabledSmoothShade{				fillRamp			}{				AGMGrad_nSamples setImageParms				Ramp aload pop				AGMGrad_colorRamp{					AGMGrad_SepColorImage				}{					AGMGrad_SepImage				}ifelse			}ifelse		}ifelse	}def}def/initializeInRIPSeps{	/AGMGrad_decodeNorm	[0 1] pt	/AGMGrad_SpotConverted	{		SpotColor{			Colorants exch get convert_spot_to_process		}{			pop false		}ifelse	}def	/AGMGrad_SepImage{			/DeviceGray setcolorspace			AGMGrad_decodeNorm dictImage	}def	/AGMGrad_SepColorImage{		RenderCMYK{			[ NumComponents 1 add 1 roll ] 			[ NumComponents { 0 1 } repeat ]			dictImage		}{			NumComponents npop			[/Separation Colorants 0 get substituteBlack /DeviceGray{}] setcolorspace			4 copy			TintRamp 0 get AGMGrad_decodeNorm dictImage			/AGMGrad_currentoverprint currentoverprint pt			true setoverprint			NumTintComponents 2 eq{				[/Separation Colorants 1 get substituteBlack /DeviceGray{}] setcolorspace				TintRamp 1 get  AGMGrad_decodeNorm dictImage			}{				4 npop			}ifelse			AGMGrad_currentoverprint setoverprint		}ifelse	}def		/getRampColorSpace{			SpotColor{								[					NumTintComponents 2 eq					{						/DeviceN 							[							Colorants 0 get							substituteBlack							Colorants 1 get							substituteBlack							] 					}{						/Separation						Colorants 0 get						substituteBlack					}ifelse					CSA map_csa 					[						/AGMGrad_range NumTintComponents 2 eq {1} {0} ifelse pt						/AGMGrad_tint_range_0 TintRange AGMGrad_range get 0 get pt						/AGMGrad_tint_range_1 TintRange AGMGrad_range get 1 get pt						AGMGrad_tint_range_0 AGMGrad_tint_range_1 2 copy gt{							/AGMGrad_tint_min xdf							/AGMGrad_tint_max xdf						}{							/AGMGrad_tint_max xdf							/AGMGrad_tint_min xdf						}ifelse						NumTintComponents 1 eq						{							Colorants 0 get get_csd_by_name	/ColorLookup get							/exch cvx 255 /mul cvx /cvi cvx /get cvx							/aload cvx /pop cvx						}{							/exch cvx  /pop	cvx								255 /mul cvx /cvi cvx							/AGMGrad_tint /xp cvx							/AGMGrad_TintRamp TintRamp 1 get def						 							0 1 NumComponents 1 sub{								Ramp exch get dup type /stringtype eq 									{									6 dict begin									/AGMGrad_Ramp xp									/AGMGrad_lookup 256 string def									/AGMGrad_min AGMGrad_TintRamp 0 get def									/AGMGrad_max AGMGrad_TintRamp dup length 1 sub get def									/AGMGrad_index 0 def									0 1 AGMGrad_min										{										AGMGrad_lookup exch AGMGrad_Ramp 0 get put										}for									AGMGrad_max 1 255										{										AGMGrad_lookup exch AGMGrad_Ramp dup length 1 sub get put										}for									AGMGrad_min 1 AGMGrad_max										{										/AGMGrad_count xp										AGMGrad_index 1 AGMGrad_TintRamp length 2 sub											{											AGMGrad_TintRamp exch get AGMGrad_count ge												{												exit												}if											/AGMGrad_index AGMGrad_index 1 add def											}for										AGMGrad_lookup AGMGrad_count										AGMGrad_Ramp AGMGrad_index get										put										}for																			AGMGrad_lookup /AGMGrad_tint cvx /get cvx 255 /div cvx									end									}{pop 0}ifelse							}for						}ifelse					] cvx				] setcolorspace				/AGMGrad_nColorSpace currentcolorspace pt			}if						AGMGrad_nSamples 1 gt{ 				firstRampColor			}if			SpotColor{				/AGMGrad_C0 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C0_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C0 [currentcolor] pt				/AGMGrad_C0_Space currentcolorspace pt			}ifelse			AGMGrad_nSamples 1 gt{ 				lastRampColor			}if			SpotColor{				/AGMGrad_C1 [					currenttints 0 get					currenttints length 2 eq{						currenttints 1 get					}if				] pt				/AGMGrad_C1_Space AGMGrad_nColorSpace pt			}{				/AGMGrad_C1 [currentcolor] pt				/AGMGrad_C1_Space currentcolorspace pt			}ifelse						/AGMGrad_rampColorSpace AGMGrad_C0_Space pt					}def}def/initializeHostBasedSeps{	/setcolor null pt	/currentcolor null pt	/setcolorspace null pt	/currentcolorspace null pt	/AGMGrad_currentcmyk 4 array pt	/AGMGrad_currentgray null pt	/AGMGrad_currentrgb 3 array pt			/setcolorspace	{		0 get /AGMGrad_currentcolorspace xp		AGMGrad_currentcolorspace /DeviceCMYK eq{			/setcolor 			{				4 copy AGMGrad_currentcmyk astore pop setcmykcolor			}bind pt			/currentcolor 			{				AGMGrad_currentcmyk aload pop			}bind pt		}{			AGMGrad_currentcolorspace /DeviceGray eq{				/setcolor				{					dup /AGMGrad_currentgray xp setgray				}bind pt				/currentcolor				{					AGMGrad_currentgray				}bind pt			}{				AGMGrad_currentcolorspace /DeviceRGB eq{					/setcolor					{						3 copy AGMGrad_currentrgb astore pop setrgbcolor					} bind pt					/currentcolor					{						AGMGrad_currentrgb aload pop					}bind pt				}if			}ifelse		}ifelse	}pt	/currentcolorspace	{		[ AGMGrad_currentcolorspace ]	}bind pt	/AGMGrad_invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/AGMGrad_ccThrough{		gsave		1 setCustomColor		currentgray 1 ne		grestore	}def	/AGMGrad_SpotConverted	{		AGMCORE_is_cmyk_sep SpotColor and{			Colorants exch get /AGMGrad_name xp			AGMGrad_name dup null ne exch AGMGrad_black ne and{				1 1 1 1 AGMGrad_name AGMGrad_ccThrough			}{				false			}ifelse		}{			pop false		}ifelse	}def	/AGMGrad_SpotChannel	{		AGMCORE_is_cmyk_sep SpotColor not and{			pop false		}{			Colorants exch get /AGMGrad_name xp			AGMGrad_name null eq{				false			}{				1 1 1 1 AGMGrad_name AGMGrad_ccThrough 			}ifelse		}ifelse	}def	/getChannelData	{		AGMCORE_is_cmyk_sep RenderCMYK and{			AGMCORE_black_plate{				4 1 roll 3 npop			}{				AGMCORE_yellow_plate{					4 2 roll 3 npop				}{					AGMCORE_magenta_plate{						4 3 roll 3 npop					}{						3 npop					}ifelse				}ifelse			}ifelse			/Invert /IsData		}{			4 npop			/NoInvert /NoData						SpotColor{				0 AGMGrad_SpotChannel{					pop pop					TintRamp 0 get /Invert /IsData 				}{					NumTintComponents 2 eq{						1 AGMGrad_SpotChannel{							pop pop							TintRamp 1 get /Invert /IsData 						}if					}if				}ifelse			}if		}ifelse	}def	/renderChannelData	{		gsave				/IsData eq{			/Invert eq{				AGMGrad_invertXfer			}if			systemdict/image get exec		}{			5 npop			AGMGrad_knockOut		}ifelse				grestore	}def	/AGMGrad_SepImage{		dup dup dup		getChannelData		exch pop /NoInvert exch		renderChannelData	}def	/AGMGrad_SepColorImage{				/AGMGrad_currentoverprint currentoverprint pt		SpotColor{			NumTintComponents 2 eq{				 1 AGMGrad_SpotChannel{					true setoverprint				}if			}if		}if		getChannelData 		renderChannelData			AGMGrad_currentoverprint setoverprint	}def	/getRampColorSpace{						AGMGrad_nSamples 1 gt{ 			firstRampColor		}if				/AGMGrad_C0_Space [/DeviceGray] pt		RenderCMYK{			/AGMGrad_C0 [currentgray] pt		}{			/AGMGrad_C0 [				0				0 AGMGrad_SpotChannel{					pop currenttints 0 get				}if				currenttints length 2 eq{					1 AGMGrad_SpotChannel{						pop currenttints 1 get					}if				}if				1 exch sub			] pt		}ifelse				AGMGrad_nSamples 1 gt{ 			lastRampColor		}if				/AGMGrad_C1_Space [/DeviceGray] pt		RenderCMYK{			/AGMGrad_C1 [currentgray] pt		}{			/AGMGrad_C1 [				0					0 AGMGrad_SpotChannel{						pop currenttints 0 get					}if					currenttints length 2 eq{						 1 AGMGrad_SpotChannel{							pop currenttints 1 get						}if					}if				1 exch sub			] pt		}ifelse				/AGMGrad_rampColorSpace AGMGrad_C0_Space pt	}def}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Gradient/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: 09-04.eps 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Gradient/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -245.829 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 245.829 li267.865 245.829 li267.865 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"267.615 27.5396 mo267.615 34.7159 247.031 40.5328 221.64 40.5328 cv196.249 40.5328 175.665 34.7159 175.665 27.5396 cv175.665 180.458 li175.665 187.634 196.249 193.452 221.64 193.452 cv247.031 193.452 267.615 187.634 267.615 180.458 cv267.615 27.5396 lifalse sop(21 ) 0 3 Adobe_AGM_Gradient/Gd get exec<</Start 0.505618 /End 1 /Mid 0.5 /NumSamples 38 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334353637393A3B3C3D3E3F40>0 0 0 ] /RenderCMYK null/SpotColor false>><</Start 0 /End 0.505618 /Mid 0.5 /NumSamples 38 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<403F3E3D3C3B3A3937363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A>0 0 0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (21 ) 0 0 0 91.9498 [-91.9498 8.0385e-06 -1.48541e-05 -169.912 267.615 195.452 ] Gg[-32767 0 0 1 0 0 ] Gc[0.505618 0 0 1 0 0 ] Gr[0.494383 0 0 1 0.505618 0 ] Gr[32767 0 0 1 1 0 ] GcGB0.5 lw0 lc0 lj3.8636 ml[] 0 dshtrue sadj267.615 27.5396 mo267.615 34.7159 247.031 40.5328 221.64 40.5328 cv196.249 40.5328 175.665 34.7159 175.665 27.5396 cv175.665 180.458 li175.665 187.634 196.249 193.452 221.64 193.452 cv247.031 193.452 267.615 187.634 267.615 180.458 cv267.615 27.5396 licptrue sop0 0 0 1 cmyks175.665 27.5396 mo175.665 20.3638 196.249 14.5464 221.64 14.5464 cv247.031 14.5464 267.615 20.3638 267.615 27.5396 cv267.615 34.7159 247.031 40.5328 221.64 40.5328 cv196.249 40.5328 175.665 34.7159 175.665 27.5396 cvfalse sop(22 ) 0 2 Adobe_AGM_Gradient/Gd get exec<</Start 0 /End 1 /Mid 0.5 /NumSamples 51 /CSA /1 /Interpolation false/NumComponents 4 /Ramp [<000102030405060708090A0B0C0D0E0F101112131415161718191B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233>0 0 0 ] /RenderCMYK null/SpotColor false>>GDAdobe_AGM_Gradient/Gb get execfalse 1 (22 ) 0 0 0 24.7442 [-1.0816e-06 -24.7442 95.9502 -4.19412e-06 173.665 44.3526 ] Gg[-32767 0 0 1 0 0 ] Gc[1 0 0 1 0 0 ] Gr[32767 0 0 1 1 0 ] GcGB1 lj175.665 27.5396 mo175.665 20.3638 196.249 14.5464 221.64 14.5464 cv247.031 14.5464 267.615 20.3638 267.615 27.5396 cv267.615 34.7159 247.031 40.5328 221.64 40.5328 cv196.249 40.5328 175.665 34.7159 175.665 27.5396 cvcptrue sop0 0 0 1 cmyks38.6939 0.25 mo79.6714 0.25 li79.6714 221.701 li38.6939 221.701 li38.6939 0.25 lifalse sop0.2 0 0 0 cmykf38.7149 119.25 mo79.6495 119.25 li79.6495 170.25 li38.7149 170.25 li38.7149 119.25 li0 0 0 0.2 cmykf0 lj4 ml38.7149 119.25 mo79.6495 119.25 li79.6495 170.25 li38.7149 170.25 li38.7149 119.25 licp0 0 0 1 cmyks190.644 53.6158 mo199.278 53.6158 li199.278 62.25 li190.644 62.25 li190.644 53.6158 li0 0 0 0 cmykf3.8636 ml190.644 53.6158 mo199.278 53.6158 li199.278 62.25 li190.644 62.25 li190.644 53.6158 licptrue sop0 0 0 1 cmyks38.7935 17.5787 mo79.5811 17.5787 li0 0 0 1 cmyks38.7935 102.439 mo79.5811 102.439 li0 0 0 1 cmyks38.7935 119.412 mo79.5811 119.412 li0 0 0 1 cmyks38.7935 136.384 mo79.5811 136.384 li0 0 0 1 cmyks38.7935 153.355 mo79.5811 153.355 li0 0 0 1 cmyks38.7935 170.331 mo79.5811 170.331 li0 0 0 1 cmyks38.7935 187.303 mo79.5811 187.303 li0 0 0 1 cmyks38.7935 204.278 mo79.5811 204.278 li0 0 0 1 cmyks1 lj84.5337 102.25 mo86.7427 102.25 88.5337 100.46 88.5337 98.25 cv88.5337 71.875 li88.5337 69.6661 89.3243 68.125 91.5337 68.125 cv89.3243 68.125 88.5337 66.4595 88.5337 64.25 cv88.5337 39.75 li88.5337 37.5411 86.7427 35.75 84.5337 35.75 cv0 0 0 1 cmyks84.5337 170.25 mo86.7427 170.25 88.5337 168.46 88.5337 166.25 cv88.5337 149.376 li88.5337 147.167 89.3243 145.626 91.5337 145.626 cv89.3243 145.626 88.5337 143.96 88.5337 141.75 cv88.5337 124.25 li88.5337 122.042 86.7427 120.25 84.5337 120.25 cv0 0 0 1 cmyks221.64 40.5328 mo221.64 40.5328 li0 0 0 1 cmyks1 lw0 lj258.968 152.474 mo259.035 156.25 li106.534 156.25 li95.5337 147.75 li0 0 0 1 cmyks237.535 153.256 mo237.535 156.25 li0 0 0 1 cmyks215.975 153.256 mo215.975 156.25 li0 0 0 1 cmyks96.5337 68.75 mo124.034 66.25 li258.785 66.25 li258.785 72.4332 li0 0 0 1 cmyks237.285 66.25 mo237.285 72.877 li0 0 0 1 cmyks216.285 66.25 mo216.285 72.6797 li0 0 0 1 cmyks195.035 66.25 mo195.035 72.4825 li0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica Initial%!FontType115 dict begin/FontInfo 15 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def/version (001.006) def/FullName (Helvetica) def/FamilyName (Helvetica) def/Weight (Medium) def/ItalicAngle 0 def/isFixedPitch false  def/UnderlinePosition -100 def/UnderlineThickness 50 defend def/FontName /Helvetica def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 0 /.notdef put def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0 ] def/FontBBox { -166 -225 1000 931 } def/StrokeWidth 0 defcurrentdict endcurrentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E44BE895991CB9C373C80EADFEAEF5EFA5F4286FAA013099BA2C44005FAC039F852BB4225633818093683A68F63554A937F8BA07DBFD09D8B45EBF1FC7D45C73953C4A942AC8EA07942969C3740F8FDDED3036CA23DA6FF540CC45E537C59B9AA6D45C578CA641FE62A8116AD9878FA6246AE4B043A31FF7F04E1808C8B7DE9818C0B46A24A3EA7E4479EAE242A5914A7B158790E7FB54257EB78FAA10F66F92CDABABC598B896060ECCDA4141E5D7F2780D0FC9C7AE6EDCFA4D4CB33471B0CE177F5F34390262090144A3542F0F99FD6A431CF58BFC177B69B948734361FFCA09219D86239F3D603158FD8D113E5F4328092B78C352E8F793767B178BFF1CC48776F16EA790F7143CADE2D7427D75F1528DC1A6D3925E146DAC6D9CE4162708BB768CD9C96558C5E5E305F97CA4A30DB8104FB7B8AFDB4B3BC3F4FC7560BE408747CA74201D38F5AD74E96F883F9E9CFEAB6B1240A2366FE9803F147CEE19B03DCED2E62CE2CE096D2F2828721B3CCA9F3D814A2212382CE23F516B9CDEFDF7BC8FAA73111ACE136FE7B9D486E6C96BCD0CF9C52A89D2FA2D30D14D0FCC9A2470B53D39938A43623BC02445D0EBB8D650771CFFE76FCA30682AF10E2DA6E4D634673A475ABF141802F37C3FB9875155262D4A28FD6B5F85EE4176592A8D3A421D4381BD4843BE10AD07C3DE85AA61F8E2EA95EBE86A6374184D582D35050900C96FED7F4E5A582DA69EDDC1DAAD28DE08D3CE98B8F6D3F7DDA609F4A3E9901B1146E22277CB7720A22CA09505B145546BAE68E2B972838048211660ED496AAF92B5C46A76FF7A74EBE5A27F7E523118173D167D9F5F68DACF119B296C0FBC5DD039404A4CC7CA837CDCE5FD15542E9DBABC7C1D42D0B9F00AE034DE2240DC724251C6B6817662E8E974BA4B60DE327E244E6EAA28AC475203416E87776838447CB3C4981B0C4BD30CCD4907B9A91D904C8D0B77F79A317C0D2BF21184030130DCC39455B80EAB8E1B323EBE123A7F0B05143B8EDB7A35D123B78719E50346CD44E7FC542E1FE89EAFCFB73C93A0165B0AE9FCC0D1860B0823E43C2DFEBE994C841084096602A02C9F4810B6C0F010A183A2D9FBF33FED88B4E1BA952C31AF88CCA6D5C81E9FE1E91A4E507E02EAFAEAC79709296F1BE5CCECF57C3861ECB1C9BBBDD913A9CC3064630A099B443C3722E4AAEC929409A788D9E73E5FFFA85D784F123A683BECCDAC02C2A75DE277A2B5C700A5A9444E07159EA4012DFB1E8C07B86D8DBC32FB590ED23D14823C9254C625110E3366BD1D4657B1720DB4702BF71C0E31E1A1A95AF701DB2D05404C0879EACF1A124C0FA3157CE4105B883F56A372E0967E781BEC6992B7AC5E7DB719FBD0FA14C1B54DF375AE6BD34D2D2E874D88A7C51C8C63E23C007A9470EEB98FCE948808A51459277592104DC1A0CA46C7F09BA2F1D7185F1EBC99D3B3AA0AA07D9D443F7C2243778AADA017A974794A27E9C0197695F48769EA8E6D8AA59F6F426D22C52EAF78C30FEE6A3A370AAF624CBC030D8D568A9258D2C0FBDA2E92B0BFF56386F2A65ACE8280B2F21967059DB5FF812B0AF93CBE351639F4136026917BEEE0C8922F0208C0EDAE83BAF7C9C4F23492F31BDBE70981D1B92B043767D068077673CF53CA07F049129CD8E8A560125183F60DC7877D1DD2EE9336E15BC4671ED4684848627260F0891A0A90D74D86DAB870CA3005D1A3FAA7F43EE218D97D0F9F5F4310AC083B55B5EC840D276F89DF638EE09808AA7C31AEA2F52EABD80DF5F5E1595A96705268BCCD99C5FE64E5996F127E24F8397CCDCC5FF26BC502A1D8C7F6CD9D64709ED6A873861A7869DB6BC3174B4122DA0CA0B16D7B41A0825F49339F189691A558C9AB127AB875FACD2ACDC179EC505DF4908C8272F815B451D13300B667C63B00E98E12859C65F4DFB9DA254D7FCFCEFC61A58C26C74E1D6AA800F7248F3BAF7A14E345D2ED56366ACBEA7EB8E08F0299FA86F8F1C1F622880CA595B5B9BADB065D689954E8A4DB28FFED2B435075E50A6ED547D0DF6875BA7318A606C662D3892FC64EAF30EC1BA31AB55672A26D3AA33B3C76DF82246019CB3485CCC96A65EFD092115B859E59C8A25521EBB76BED12A9F27E549538AE179205E00EE1FF362862BAE507536FAC74909C36401BB4A5975D3508715F6C5C300F07D4EDDB479025D62CD53D2882B2C9FD248D0794F8E7F25657D1346C54D65A670224B4EE3FA351F52A486C88934515234266CFDB32ED44D97961EDA8D3B368C1E4790AD58386ADAC8BDE30DA2311FFFFE9B11DA9766AB117DB2D9428BBE7E48373114C6A76723A4E325DE2CF4CDB4FCF06A10592522C6808C199922CACB72BA481C3BC1FA1463D19C688B58A6108912071108B90AD88186D6B790F6FB2918A7CFCDD999C4E4C8AD4646E02E2375A4EFEDDCD101383672B7D3EAB238A8BD9E3F1EEAE72A302DC588A1FD90051F396E3B160421416B66CD21F5D41ACA3A961932B9B1E0292F1C2E16745EFB7EB88022FF83D60F6A16B1FE49CCC4D091B2B21634C67E890988B87BE7DA55ADC9EB7A895E76D641B7AFAFAF3D6FE9FEEADACB938FA65F4AF040C03F75FECA72C616FD292B4AD00C13EF969F9D72109069B5EB3E9B43C8B60A795D36CB8E04974CD375A1E0283B3F1F47D4DEAF029F4C2CF3A01BADA316CD0BC66AE21211878A4C3A7F8D17ABB56992D86C5C0590D9739F3CCF95AED40B0A075C8F7FEBF8261B99D3F88090B6D0A9F45E8B55A97A7256462ECEF026E13F000AEB055AA45D0E7B7F17C2DF30F0FB315A3AD9AA9116FEE9AE59163FC9DF48B078EED212E0DD9F64B1EB1FE01DF91DE869EDB37B17023CD6FB79F5501AFD552F3EACF0B37B202081DD04C1BC9EEFB3E70D5A62F0A6DC494B86CBC9B5352996AB983D9B231DEF472F099903DCB760B58D71DAA264EE4102F54A50C27BB525FFC419B7838FD0E47F8D4939F14B4A5CE93279C06294CF87069F886BAC51CAB517F68EC190448A94079197E4140C8A29D41E958A25FC891BD5C8CDF2D199A03B36DBAD786FFF56AF4BB9964BE89FE7893D3CA6C11B090A29051039CDD298EEC35870181DD58D6CC8A4D85E1CE20699A7DDD7D9964AD44A1585B6F55EFF1F34CFA6937086149FE339DECF2419CBBE25645DB571BE810E87574B8DA28B8981CCCD837DA5FA32DC8DAF7D5EF2A3C57615C44B604B6975C8F9FC307A753981043AF09CF8EDD9B890C39DC76A73D499CC8B3E5AEA10A8675AA2304A7EC87EE1EDC624BA216EE6164243799D3292E081B767E0B9F441B1788F5B3D0CE004D890FD70BF2A54BE4EE00E4BB782ECBDE4148440D3376ABCD0764E6A94CD8E876C27291B2DC2B0434B6ABCB736766C2B7A05C6341DA52DAD5B8473A07313B89A451E43C85E4E6DC2AF7B1FBDC0561FFB0A3D1CA6D909ECD41369BC9AE5C459A0C68A890CA69AD784DC40757978D407F926D494E2E67299865B5F693E0298F55D2E10602476DB6046BC6BDDEBD855F93384BEA4DD9648DF255C9F61011D76323DF9755536638FF5738FD6F317FA0BD331FD9A47878CE9506A0DC7AF1AFF96C9FAC2C61701343CD3DC7F2DAF2F674C50C9829E855048F3F5357C88D02FF0E96BD0B5066CFA1D7BC3BAD635A7F557F9626678052CF1CFCC240F4673FFFC4A6A566C8EDDFB52F11AB0F7C1C62FDF37E3804872EAFDBE958CF73D5D000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero 16{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt3.05176e-05 67.4561 mov-0.0879059 0 103 (progr) wsh20.8301 67.4561 mov(am) sh13.6641 77.4561 mov(A) sh110.878 62.7085 mov0.134033 0 119 -0.268066 0 (swa) awsh126.477 62.7085 mov(p out) sh183.64 61.1099 mov(0) sh211.894 53.6158 mo220.528 53.6158 li220.528 62.25 li211.894 62.25 li211.894 53.6158 li0 0 0 0 cmykf0.5 lw211.894 53.6158 mo220.528 53.6158 li220.528 62.25 li211.894 62.25 li211.894 53.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD57DDCDAF2F2AEA332A32A216129DB2FBFDE0C196E8E7160B56D65B09123DE85AA2FC5D03A2869E6EFAB6D5DD761EEA39337D517A0575B76C4722F41889F8CC436C23F4C6A2A5569A79D0AC74B5AA321B4098B581305CB92901CCA87CC4A3905EB8D5299730A6FADE5F35CECF2B5E84DA8615AB790EEBB4EE96F5D1034A3A59733CEF56D8F7FD878ABB5FE3CB800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one 15{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt204.89 61.1099 mov(1) sh233.144 53.6158 mo241.778 53.6158 li241.778 62.25 li233.144 62.25 li233.144 53.6158 li0 0 0 0 cmykf233.144 53.6158 mo241.778 53.6158 li241.778 62.25 li233.144 62.25 li233.144 53.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD56651A4DC27E8083A5DEB75BEE0B855E8EB73A320F36F4697B0DD3FB21C298D8FC24665012188FA21E4829D38F7F5C23121F083CEC8DF9716AA1C7ADD62715A6E37ED61705DD5746E0555E1BF417563075AFEDBA05800C08E5CE518780D8E5FF531B6F2A64C1E84971C82E665353C87AB95B8F91FA7C477240ACD1D5704B7D2F4BBF6CAAEF7A7B084BD1092BC2D3F0B679A06BE24A22D36083CB5F257CDA17E218C8718AFA2E569F7F6ABDB828CAC3178F93E0445A470159E0C041BC21A732D2B31F022EF80544C5DB46A483F513698D80568E0171CC04CB64C75A7D699C81A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two 14{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt226.14 61.1099 mov(2) sh254.394 53.6158 mo263.028 53.6158 li263.028 62.25 li254.394 62.25 li254.394 53.6158 li0 0 0 0 cmykf254.394 53.6158 mo263.028 53.6158 li263.028 62.25 li254.394 62.25 li254.394 53.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5664E2D5D54F44974D175DD98C8E8FDB3BDA10D7DAD25C212E93324A062A679785B0D20AFEB33FDD9FB6AF7A2A198CC006CAA52453D23130BE2803F8BD18E66A3304D2099F63645C728A1F90D278D625BB9354915CD5066C8F5B6FB7AB985D18E795F79FEDBD7B108CC3AC1A03A50FDE1BE7AB6E8A27D7AA45FA9AB04752E6EB91269D8CEED7F62D747F1BBBFB5AD9F82CF5321AED5C0580D0D5A2929D5624682EA515F9173F2CB458657019C6CFFBF85170DE1EDEDFBD7C889FA75A4652F0909C6DFCEE27ACAFEDDD750BB7843EEAD4690FC5B2F3817F5928D73683A819D60CA9613735E01DAB748BEA48F1DBB720D47B485CDDED874DDF32805530EF99622861E408A459E26BCD00F2C751962DB032F4725FF4C925A21E61B8D6E7789A47A12A2A5C5E0456FCA79BD204F727400591BB46052D19371BCAFCE3D54585F0FA6632E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three 13{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt247.39 61.1099 mov(3) sh190.644 75.6158 mo199.278 75.6158 li199.278 84.25 li190.644 84.25 li190.644 75.6158 li0 0 0 0.2 cmykf190.644 75.6158 mo199.278 75.6158 li199.278 84.25 li190.644 84.25 li190.644 75.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5741F9E3D7AA00154F0817CCF4DF377C48A6D5226A8760B316209BD5AB8E7D256730B2430C0DAB4383723FB2B47CC4374FDF45A09940271BEA7160C75E9F65AFA4389A289D49223D246B38F6EF9A1F6961A33896DD1DD471E78E7198A3F62471EF60298011E2685029A363E9F6DA54802C8BBAF2ACD3CA7963CED1CF00824936F071E784BA1A4567C75F0D793CC8F8A5A0C34B8F6EEBD7033DA1D248E483BE48900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four 12{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt183.64 83.1099 mov(4) sh211.894 75.6158 mo220.528 75.6158 li220.528 84.25 li211.894 84.25 li211.894 75.6158 li0 0 0 0.2 cmykf211.894 75.6158 mo220.528 75.6158 li220.528 84.25 li211.894 84.25 li211.894 75.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD574196378CA8FFE61A0A24D972585F12B9EB33EC5AB38FB1B2F3B4D302AD6F5F6BA373E109683C6FD9BBA2069318A266DF31F09DF2A5C897C3A86221A9BE30723F0923ADCDD95A948B9AEDC2F05D8C0F43A49E672C938FA256D0F9CE4BF6665DB3B3E68F969E16EF24A0ED68DD1DBB0CC360D95C4BBEE33F0A68432593F944308D1F112C7E2713417E4152B4F6B6C151D63A92B3C343B88485C3F0AF4A309F60A2B7F658F71B2F45CEE4543A85891D106EE9DF79D98D3F0DEED4B07B3D4A4212800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five 11{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt204.89 83.1099 mov(5) sh233.144 75.6158 mo241.778 75.6158 li241.778 84.25 li233.144 84.25 li233.144 75.6158 li0 0 0 0.2 cmykf233.144 75.6158 mo241.778 75.6158 li241.778 84.25 li233.144 84.25 li233.144 75.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5617713EC3EAE1239D7416C84DD31DF185FFDB125DFE78F6D3A4823A6BE4D99930A4AAB753E7597ECDD9A334CA426F56BFF4688E9C5878E6E827A08B705557AB1F2A509331E0A3AA2CC0E706E3D246BE972FE0381225B68EC3D35593995BDE95F75FF9EE6803FE38E08DF9962CE24287EB68B8E4B393CE37AC1DA18C5E5F8A2BA283F18FF2629B2CE9D5AB9FED510FC0982BD07CBBF01FEE32A806DC262DA85EC3F3173F6B394E6A2A4FF4142C7F7B8444B79D175FE85E35768F1403018AAF0E53C7C310670A1BF29EE2927133EC5C3554AEF8BF2927C2CCEE4EF61033FDF9510645700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five /six 10{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt226.14 83.1099 mov(6) sh254.394 75.6158 mo263.028 75.6158 li263.028 84.25 li254.394 84.25 li254.394 75.6158 li0 0 0 0.2 cmykf254.394 75.6158 mo263.028 75.6158 li263.028 84.25 li254.394 84.25 li254.394 75.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5617BD25C7720FCC19354F4AA4FC8D7BA86D11A406CCD7A6B09CA31E70834E3039095219739DEE84F9FEDDAF2FABF96887F26E6FCBC0F53EA3F71C7BB33C3D2AA289FEE97F492F0C99E7F9578FE818B2452E567C055B031AF8DEFF85C2037AEEF1B23FDD537A621CA6BCB4D22478ED563354D2F37F757959CA91B2F3A32AC25FF32EFFFD06B23BAAE904A1657F67EEB85B0C035CB00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five /six /seven 9{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt247.39 83.1099 mov(7) sh190.644 97.6158 mo199.278 97.6158 li199.278 106.25 li190.644 106.25 li190.644 97.6158 li0 0 0 0 cmykf190.644 97.6158 mo199.278 97.6158 li199.278 106.25 li190.644 106.25 li190.644 97.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD577B224272BDFA9E171BF513AF1A8757AA651C43C02C628702A77945A3292F42C1F395E9FC0388BBD8E1C1EDC5CFCA820A496B3D93D9DBA06CA023C9BB8DB11DB52678FC55AF5450167C1531D0EB18F578E4FD839D10D2DEC204E666A2EDACAA2649D6660641014322174D49A8019C7BFEC3DEA8B133E5DA8997EDD158222030FF60B4A3761A380B7449CCB1C02884B2C3E7D7E2EAEEF73EC3A4F099BB5C27C39986EF253E213F0FDD7F02FF45DB89445ABE5DF8091CAAFD928065DECA8483F1E96278D90E97E0C2C909D7D83BB6F1F36DAFB287CCBE6A4C30714FB39FEB39265572968516B823D4A2BE1CC84E69A312C708A0DE1F9E61A411E1AB9121DC67EAA85C4A138332482C8928EF8773F728DB6FD9201FC1F0287956A81CD4F6ADBC25B656279D47B2627AC475E55916A1A61693A725C822D75DE19024B97B8D519AE3B19C71F0AE0F1FBBD39CC38BB73AAF1A1B246CB9D00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt183.64 105.11 mov(8) sh211.894 97.6158 mo220.528 97.6158 li220.528 106.25 li211.894 106.25 li211.894 97.6158 li0 0 0 0 cmykf211.894 97.6158 mo220.528 97.6158 li220.528 106.25 li211.894 106.25 li211.894 97.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD57C8A6851600E05BB30A57A640155DCB557B07BFA89302D170A382CA478FC0BA877EDA8B3C9ACEC508503FE6E7E7519E87E358BA74F150E6DE97CF3A906E9E2AD75B3CD6C9DF15F47181ED2E6DD7C50FBDFCB49576F39EB7AD2BEDFBB642852B665A908023D85C111D759D3C574AD4A7BB32CBD9FF2960418FFC7565D38883EADF88A1322A35B577AFDB26A242B7444E83A0E520927AB6345E258E2FDBD7AFE5152F049D5B7F152A56C54EF3A19A444B3A4BF364FACAB6AF2B74686BC5597132DC011217C96A05BAB0C080E432C56741E63B5163BFF02F907DCE365A0AA5237B0CCFAF34782E9DC34313063F5885B978FA29D75D815513211FC2FB6D324A200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 65 /A putdup 97 /a putdup 103 /g putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}repeat /A 31{/.notdef}repeat /a 5{/.notdef}repeat /g 5{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s /t /u /.notdef /w 136{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt204.89 105.11 mov(9) sh233.144 97.6158 mo241.778 97.6158 li241.778 106.25 li233.144 106.25 li233.144 97.6158 li0 0 0 0 cmykf233.144 97.6158 mo241.778 97.6158 li241.778 106.25 li233.144 106.25 li233.144 97.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt221.136 105.11 mov(10) sh254.394 97.6158 mo263.028 97.6158 li263.028 106.25 li254.394 106.25 li254.394 97.6158 li0 0 0 0 cmykf254.394 97.6158 mo263.028 97.6158 li263.028 106.25 li254.394 106.25 li254.394 97.6158 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt242.386 105.11 mov(11) sh190.644 119.616 mo199.278 119.616 li199.278 128.25 li190.644 128.25 li190.644 119.616 li0 0 0 0 cmykf190.644 119.616 mo199.278 119.616 li199.278 128.25 li190.644 128.25 li190.644 119.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt178.636 127.11 mov(12) sh211.894 119.616 mo220.528 119.616 li220.528 128.25 li211.894 128.25 li211.894 119.616 li0 0 0 0 cmykf211.894 119.616 mo220.528 119.616 li220.528 128.25 li211.894 128.25 li211.894 119.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt199.886 127.11 mov(13) sh233.144 119.616 mo241.778 119.616 li241.778 128.25 li233.144 128.25 li233.144 119.616 li0 0 0 0 cmykf233.144 119.616 mo241.778 119.616 li241.778 128.25 li233.144 128.25 li233.144 119.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt221.136 127.11 mov(14) sh254.394 119.616 mo263.028 119.616 li263.028 128.25 li254.394 128.25 li254.394 119.616 li0 0 0 0 cmykf254.394 119.616 mo263.028 119.616 li263.028 128.25 li254.394 128.25 li254.394 119.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt242.386 127.11 mov(15) sh190.644 141.616 mo199.278 141.616 li199.278 150.25 li190.644 150.25 li190.644 141.616 li0 0 0 0 cmykf190.644 141.616 mo199.278 141.616 li199.278 150.25 li190.644 150.25 li190.644 141.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt178.636 149.11 mov(16) sh211.894 141.616 mo220.528 141.616 li220.528 150.25 li211.894 150.25 li211.894 141.616 li0 0 0 0.2 cmykf211.894 141.616 mo220.528 141.616 li220.528 150.25 li211.894 150.25 li211.894 141.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt199.886 149.11 mov(17) sh233.144 141.616 mo241.778 141.616 li241.778 150.25 li233.144 150.25 li233.144 141.616 li0 0 0 0.2 cmykf233.144 141.616 mo241.778 141.616 li241.778 150.25 li233.144 150.25 li233.144 141.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt221.136 149.11 mov(18) sh254.394 141.616 mo263.028 141.616 li263.028 150.25 li254.394 150.25 li254.394 141.616 li0 0 0 0.2 cmykf254.394 141.616 mo263.028 141.616 li263.028 150.25 li254.394 150.25 li254.394 141.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt242.386 149.11 mov(19) sh190.644 163.616 mo199.278 163.616 li199.278 172.25 li190.644 172.25 li190.644 163.616 li0 0 0 0 cmykf190.644 163.616 mo199.278 163.616 li199.278 172.25 li190.644 172.25 li190.644 163.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt178.636 171.11 mov(20) sh211.894 163.616 mo220.528 163.616 li220.528 172.25 li211.894 172.25 li211.894 163.616 li0 0 0 0 cmykf211.894 163.616 mo220.528 163.616 li220.528 172.25 li211.894 172.25 li211.894 163.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt199.886 171.11 mov(21) sh233.144 163.616 mo241.778 163.616 li241.778 172.25 li233.144 172.25 li233.144 163.616 li0 0 0 0 cmykf233.144 163.616 mo241.778 163.616 li241.778 172.25 li233.144 172.25 li233.144 163.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt221.136 171.11 mov(22) sh254.394 163.616 mo263.028 163.616 li263.028 172.25 li254.394 172.25 li254.394 163.616 li0 0 0 0 cmykf254.394 163.616 mo263.028 163.616 li263.028 172.25 li254.394 172.25 li254.394 163.616 licptrue sop0 0 0 1 cmyksfalse sop0 0 0 1 cmyk%ADOBeginSubsetFont: Helvetica AddGlyphscurrentfile eexec A0B00ED553D3BE1A49B421B2026F25240CD11E93D48BDF40C9C1B151C4CB94B86FDDAE9D03CE1AF4A1840CAA745A710E2F0824555DF1F4866215382664BA85230990A4917B54B7896634680640ED72AE645C23EA3634B6A9D070E33A3B4FBB2C3E50CC7F5FAB44A33292150774FD31F12D78CBB4B3B813A6498AF739F031D56393E8A553061CAB48E4986EA9C8616B3D3882FEFED3F49DE53958D5E76E44893C9C0329CFFF80059E619EB27A76A06A18E69D8E64E70F7BD5504923D435ACAE284A024DAE9F5F36CCEA4B94DBDEE1204B9F7019733B2F086AEAE6791318B81A6A91B64729F3393B1483FB47C3D8472AB258EC90C126EF540C069F4CA1E8A237D8C460C052598FB8B0C2A2FEDA6FA23A24F46A49D76E324EAFCAE8186EBFF9D2DDD9722044B9231D05734B275DA6A44E39978181CBCCCC0785909E156C5092EC78C94D7064B09C8B867F451B98217D1F05497FD3026FB9E4B1E3C92BA23E859D53E6F6A3DBC401CE0352E3CFDAB1EA20500994E10A867567A41B7A0679DFF54525AABC530A6F0C763E00F4979F7638077A03D784706D84E46EE4840C8BDE8607A8B288A515C40FAB6C881940785EBA9CFAE8DD4C43996C3E7DE76D7B40743192BCF87B20A3D72D447DE0793527D33691CF828BEAD391E3A1DB0A95194370021FBB80FF7ED35268D1199EAD6CAB8C303683D0EFC7810D2FA57C78736D962D53357456DC241EA2593B6770A9EA5F3D596318BE00F351313A125279F8E8576820334B1034080DBD161014A68882E4ED9DB3692839F5B4B899C30A1ABE77755C30CA52B638AF0C4F69B8C9C50DFA831F026A2A3BB0224BF45BF4B83C97C8E0B34B0CAC0B8510F72D9254AC7B2664B7EA48C2575535D5A42F97330C2F8346B7A547572052BB10FD1479E5C48C6B8BF02C398D4E82DE383F6A0E5F2F1C3AC905141D8643C3BD98D56971E8685C9CFE2858BDFF1121F8311B41323AC04A729AB069453D4ED148C9544648767D34FA8D514F35C056501748330B5645FD92BB8A0A5881A8A0C130BF2D57DD213FA84ABA814D5DC7DBE6774678DC90291140018000A13DF2BCE60CC8C1619CCA1F2D99CA329644F7A542E8B5295F49548F77D1BB8FF68C83ACD72266241B4C0DC11D6B8E5D56DAC04AE80AA7D870B91A596C47C93FED6BFA4E8C187FD9DB8F2CAF6B6012D324034A5CCD88D464E7B5273320B4056FE8C4443AAF813947894A1879EBC71BEEEB34F5A4054563FBF2B8C5A6BFD89B3D83BD734D81AE9D0010A6C24FE482D30322478A8BC9F637FE5410DE7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark/Helvetica findfont /Encoding getdup 32 /space putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 65 /A putdup 66 /B putdup 97 /a putdup 101 /e putdup 103 /g putdup 105 /i putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 121 /y putpop%ADOEndSubsetFont/Helvetica*1 [32{/.notdef}repeat /space 15{/.notdef}repeat /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}repeat /A /B 30{/.notdef}repeat /a 3{/.notdef}repeat /e /.notdef /g /.notdef /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 134{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt242.386 171.11 mov(23) sh113.632 152.2 mov0.134033 0 119 -0.268066 0 (swa) awsh129.231 152.2 mov(p in) sh3.05176e-05 143.419 mov-0.0879059 0 103 (progr) wsh20.8301 143.419 mov(am) sh13.6641 153.419 mov(B) sh49.4312 233.803 mov(main) sh42.7992 243.803 mov0.268051 0 114 (memory) wsh193.098 71.0259 mo195.035 71.8482 li196.972 71.0259 li195.035 75.6158 li193.098 71.0259 li0 0 0 1 cmykf214.348 71.0259 mo216.285 71.8482 li218.222 71.0259 li216.285 75.6158 li214.348 71.0259 li0 0 0 1 cmykf239.179 154.237 mo237.442 153.499 li235.703 154.237 li237.442 150.118 li239.179 154.237 li0 0 0 1 cmykf217.716 154.237 mo215.979 153.499 li214.24 154.237 li215.979 150.118 li217.716 154.237 li0 0 0 1 cmykf260.642 154.237 mo258.905 153.499 li257.166 154.237 li258.905 150.118 li260.642 154.237 li0 0 0 1 cmykf235.348 71.0259 mo237.285 71.8482 li239.222 71.0259 li237.285 75.6158 li235.348 71.0259 li0 0 0 1 cmykf256.848 71.0259 mo258.785 71.8482 li260.722 71.0259 li258.785 75.6158 li256.848 71.0259 li0 0 0 1 cmykf97.3873 146.863 mo95.5611 147.909 li95.0445 149.949 li92.5611 145.63 li97.3873 146.863 li0 0 0 1 cmykf79.6568 102.619 mo38.6929 102.619 li38.6929 34.3677 li79.6568 34.3677 li79.6568 102.619 li0 0 0 0.2 cmykf4 ml79.6568 102.619 mo38.6929 102.619 li38.6929 34.3677 li79.6568 34.3677 li79.6568 102.619 licp0 0 0 1 cmyks3.8636 ml38.7935 51.5196 mo79.5811 51.5196 litrue sop0 0 0 1 cmyks38.7935 68.4952 mo79.5811 68.4952 li0 0 0 1 cmyks38.7935 85.4668 mo79.5811 85.4668 li0 0 0 1 cmyks38.6939 0.25 mo79.6714 0.25 li79.6714 221.701 li38.6939 221.701 li38.6939 0.25 licp0 0 0 1 cmyks%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Gradient/page_trailer get execAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Gradient/doc_trailer get execAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (mac137) (Techbooks)%%Title: (09-04.eps)%%CreationDate: 9/6/06 1:07 PM%AI9_DataStream%GatkKBp0RZFf+sBmXN=R:hGrO=RoRAj#=3BZC<aH23!iHCoja5jq6Q<_Lquj!L1M@RK!(G:IJOE9PfEG#%V9HGDYhN/FRr`S.f7X%p"NP4^>,<pr:=i6rUi*no6;(,E&S6D?&naOeQ;eDq&fL'pHJ.jY#G"7?ft;l4rh:3Z&F&TI@Z*To!NCCXZq9l?bZKVlW7kOoB)ND%04)>@o:*@1IVLP)If#kAs8;(:pTIo;jh:]J?i3QHqg<7AhYP]^5Q($1H/Cg`aKsdCJ%C./U>N_3rI'$>QbEsD2Z;*EVgj*CrnP&R%J+r(&:VZdu=8p_,^1A'bL_#".c0t\)s6K4EIWIG1r9m_eo8ijrcelB`h;1>Fp%!V2%3PR6n&!]:>r_iXX-Hi_ij7O=o6u2S5IC%"%gu>ulYB][,gV1-=?bAN,Ed.BpIsq2QGK4:pq[^F1k4hj6ikrZ`kPlSm<8P<-rSOd`s*spuqsU/\Nd&t.I,*ipJ,%T!N9;Qe\=4`3%NXt%FnGDDAJ)qeYeUQf?s6ubrm=t[8+akC"VAfDYqtn8YfotGpp$4A/',r_:;nS#Gq!W6ibC$sCIekB<rEl/jJ,RXJn([^:jkEjT%rc0XX+.f\!<^1s0p.s$7?hQ;caB9P0=9&'UMuNPp?TqOLNgK&,[GSaQqMU,qNpki>BR`4spbpmekP9[YBWqHkh]h6e?Ms#)r8t/8%LU[9^a7'%4ql)*X_g-n7r^222&$PuQ1"ou1@CRg4g[fQUmY68SA<qI6a0t*AH$ZiU%p/E#If"FoQ0]"ekC8![r6N\rroV>.*ATPO%di[9SrUh90qXuk_c7E@6s5Mk<o>A2TBCpR+o?,mma4UhMnc._DoBdmoH+YZjO(7$RQUh)+l[S(#=f]#Mqoaa$kC<>`^\mm*o!1Dk%5mO8JN8^pYleeE\0>D@B)_]NI*)Y"rhYm/G\,FS5X2(?Ann1SoXOWs#Huj^YRf#<C^,o''4&+nMp\0.6r)QF=.OG+[P+P@g:Si/_%J%]HrI\p.1;u,I_C\:W6qC2I,:I"Ns2h(%]DuA`VhtYJUhtWW:Hf)NO:W[P4hu!EOrV<"*`92BknXOecht<JjpS[9HPs>53F7Q6$%E_b5ST'nZaJ,1$qjA4re?&A0bcH2^Xb8L-)/"Q!J?J-4lds:iF=.PQL4BM-e^RoOQrq&#@pV(h,+%Ld_n[XP?.f&]6juN$So]OlQ%Z(6)_jOZQ+IcC:cVjsAD^!aHDkH*#(c5lMcT5oD4*BmQdr3#Y_VuLd\kPkAM*4`9Jdn_tgJ"F8s9$+WHkP`*S<<aH=<IV)tG)l#r%F[(#OgN?fIR@g6ujQF%uqjpm'maq8klQ8@Om&lN9m/6Q;lgnEFk>+<bb.$t(fAuk45Q-PI]6nadm&TQE.sKk/PjYR\?Y/=KD3"OY%PZ&@#H?%ciF5>0iSZ@4rpKTXIIbg.Pgs32%WU&BdX.S96h`q.2,<n'WPid&5ca>d:E.@dGjnGY>kBAOc?+'@&=k@f-ao3aF=1Q)f%TARB)crJP5]6moGgHITklUq$@gM1!6H6)JI^?9XbD[o,orqQAtMSm?(EBN-hrBC8*oD.k0n+4leWu0/aDSOL^3M6>crBC7GErN\8%lb1KZT4cKqGAb1A5JR0aq=!),o?ZO!DneGB\c"_lI.uImn([=&:O)Ws[--kJ5L4a@s*ajtq4%2>o/Ca's)o7Jn+4$agG7s\q!YQ(%T9]:ldr52.rq>%DZbh4bo=sn+k;SFQc<'i8oktrNrG[gAGBiR@^AZn=+1oRkIQuWbnND>5#6)?niUU!:5C`WU^U_6%N]Rrh;uDV;%IlkYGcg505RZQuNe^\lgh1tpaq>9lr1-^6dGcuAliO?:eFlYd%\'oT'@dt1&rGGB3g)&'2S1jUh[s:/bqe)^X><go4T9%iYf^CKG%V'f>,k&p^kjf9PRR:KRa@f5X6a"NnU7t2Vdp?i[Y`O\`M])R6V=I3reDq$G&R&Aj@\PFZ@VuFHG4qAn<e-^VFI"U&GrK7-Xp;c(d%P5gX8n#f^UbP(g8V/K+746M%lnGY*>XiL844,6KcVU+N,H`L2MUJd;iADY(CV..-?dt^uo;\nKM]a'OHR,Kdgj)=s[hrh"F[J.+V%mY="ks'*,/YYsAhDPq?`J!f9BrV#*?q*[71R!3LCEE!%4Q2"bM>W(qTc;.aua#UG87e[ELqrmKYhB0E%m+Ci1T@NOj\+M`Lc0klJ%I(f:IcA13)o*SP\If8p91HVGprfPHQ=OAL:q6>4;h`fWhh7Tp9GW1e0nrgafaoWV4NrJuce_[b[n,1PQkPBG#+1%r]`&c]Qojr2m%4B'#nA<'HeaWm@kIus-rVq0fOp?.@rrLfkWl%ktUrNg9YIf%#Cs3c2-^V<SDql&=t2t%9*LRS(qUO1</bker,OhWj0B>;7)SN?K'%\p_]%Y?(0Z%j1/_K5Wte=5LW6h=5gA]49B_I.BZtT@W5DRm&pS'Y\_N2pIBCR*Tn<7d8'g;e&"oEZI13noIm%lCS`DS_A;bjQG\J%T)%b.a3grY5Q0u7rRZJf?2hek+'S_PF+02<II&j:0@u>YJ,A`Cdr*4R<I8P/5J9tRg!_\4+*3O1*4'tdmlJT1)L]2[gu4>/kB=I]%(;h.o^V@OCo)=`?-S,#KZ'*)X`dIU)DtjXA<c4s]Ier(TIBKC'ETI,t@5dl3R=/nJcZOX]OnFH5*m<fu!o7DXAq-teSW\lNH!%9A%^['e'<B^*U',!C:C<,\h,L#i"G3YV7HtSX-Br<$'q7=_M8p&<"V"%B!I.FXSVW[\ks1.86^A@Idk5JYVY.qN=qfD\iDo_/#*rg]e%M<jW2[6)Fq](t`'FS1dhq_lZ"I=?Y[LQ4LL#Gpi;2gBLNj[6Y)aR;W*]6_<J(!^`I\Mncu[u^&Bo`?F7:HW&K5$)[[^.P-W^*0%d%m,k#!ojdQ9E8Zdd*bG"m4J9n\f]G]0G('%?N"r.h?N";'k7/K#GMSraHiA"LnJM9gm+-O?:?ujd^"7H</,6q.cRWc-*65%.cMQWP%nn:0-C!9Rt:9SWeYs\NQo<efSLcjPnrTsN2?YR#AK(o8OO7^3)VI"[\3N^O#h%cQSY9*W7Y\F^DpjB2-I(S6AHYiG[p\l!RHB>,D%T&79\fLk&hIC87!n*OnGlot:>0:I*13q!^eS@7@t]^)m/:\F@DV]U4Imi*</memG[oGGQ[>H`64HB%S;SFb./<s3Qmq_RY]ntjBQ%J,/BYZi0sdIt3(,H(t31V#@(0pT!sh07VjUUXK*/gHX\#mQ\gE5NYi2hg(J?ReN]scL&@cMnOTqa,_D$%oN@>k5>I"k=`>bIr=,8%AioJZpBQ*/;g\N8o6qcM>bdt\,eBT2ns&`idWYXM?M[dL+)q(#^MMc$MAo/NdHp8.LWI:nS9N\rgM<^0GJrZ[2sl'DhT)2QA*lJJ%E^T^7aSrnYdHJ[]:AjE>f=RQVSX/C2g7qePUD%8kpDWN!eF-V;kM3Q,?KHTWY>oq$jB\JJSur8JnXX`Ir9_D]IJ<9qi?s,IhZ'&U%mD0P-T"O86#raqqon)Wrq<_,FHJeRK(h<MD7.f_9IEG;INj&D%4)oLt?aN^lf'+F,fUoJb+33Od[ih<(Z9Ca)+()!C>F'JVm2&um%'7mfWO[&^>?'P#]`Hf+2O1iWtXR"n(H5Eu6J#,=D4aA5K=#n$te1ZZk4?>.kKNp[K75narNEX!pb#N'q7p4`9VIpuAb:iHWcgJ".%^9N`OiuOHF[#aZ#OPAD0bM&^mh]\(cbkSVQ2u\/-+tW9iObSX<^I'.'eFt1BkA)FU]gZ&KfZ_TLh]MBJ!sLmZG?9]DhYZoLW7.W9%&XM_tc]P_I>2`!F2P2&SrR]=#bKV920-?\XqZoSCF8D?[]hcrV#<km!YH+AsH/Mbbi[.0KUOEb5q4`/l,lc9Vj:-CaRsa)Z`1sit%#Or::rU]X[\N%SdT),;Wi2JU/dWp=Il^orrqtGR>SC[_a]K`IQ?[g/i1$sENmo-h_SG/p!`Wp-tn+?MU:Hk>YqCV_Jrm/+0):pnK%I`C&Y8F5A?n79eY!0KM-+.nEWTCQs@<Ni[Bqh((sNbTRhbqIG*"22B0^V<@`also>URpdkT([D`GLN_dF)&aPp&(dpo=g:+pUOtq%c":XYNX4;OX)W1QdoKdPf4c$cI-n:V:SJ$UGE3Tpn[J'K5''r#'5?;ubg/91@nV,TSmqS<>Xj7h]8>/;gJpQ]7k@CcY0:-XH\g86%'9Og.T8;#;Z)8h`Pg:5;f7/T4k&]/#<BED;h:3-pTWaK<WskL6pfW$&FkndT=eA/E:76SEX15p)iuu9E58!Ls^IBHOEA?)DPRo/'%-E3%'*:s%Cloe-MY-1"TmN^M-`hP`kWRH0I_lFhuXS5cjb/^Y^e76/]E?t4AWp<b/c3V]QrpJe`q:U,+>`RLOYM]*9@i5"b[eF)r%or6J'A&7U-1%*p?k7HM\o?Z1.F2aB"iuIiN/Td<Ik>sh1o_nZb:T'`?o[b*Ip&4(5ioc`KB-ZU4e,MS$GgnODIspGPqg@eqIg=\Q%LSs%#3rFbB2HN*9bIQ9uhHq1XrQmq07ksQfSbL/Mk/n,S8^.-[ki">Al>uRr=NooBI;WB\`kQH`I/:tN>]2b'bN=e3I!<ZVUNj`-%f:Q7;#a$0OleokqYFINB4KH$,G%4,,=j:G_n2OkjlZnP\T0%JeH)gZ3/G>%JgcpY@S.+D3U7Z%f>d`XtG'rZNZ$MGrfu)IM!oKP]%P##.IG5RRF\4VP$W)$b^msUeg>lErS7r@,Qn+-:Qc2$'f(=#J.@kG5\n/goHH'80+W6NZMYC/TLo<E,10=MYIXFY.DioaD.nN+?F%p]%'<o+SRo@lECH;4I=+k'gI_k!*cg5*m;ajS(6an3NL,)<:Q;QM*U6nLodR>ZWN7Z7UPlbiU@Tq6X*aOf+7.WBRjfhd,hB*j<eo%qd75&5/LXO=RLaCA%aYhTDS*$dQR-k'+On.r9r)Cn+Q.4mp&`=(WantD6oK<7dtl0nh4QqO7K-r09qhPSuZkS%D%#Rj4<?2]72d&%B>;[%>eZYu*Fh>4m<9(R-1Ce5cGo@INVITBFahDMs.'(;R,.VL/H$+Lg@ZMJV>o^hhp7oT#@AsQ+0,M=HoCTBc/P]Uq:%Pk0<+u6%=p+NYB<9"sm)>lDK"khL5/,o]C+IU.^:./+>Nra!b4V2<F[^E`\Ph>IFCM@&QTe9mM&1+!S_oUBSil>tlM9sMjgNc7XRg8o^-(0q%go_lW^]+0M]t&UW!N3YYmIB(0<-<TV]5r)W(t)8]F8>+%mp9mtBV'_Nk104Wg:k*5DuS_gWu%u=I(o@Cn&IM>l>M1MiN1Bhrr'n#%>CV'(Ish3`n,LbcIt%CfcZa;7s4Heso]s8qhmHG\8Yu.\nV9@-qUtRWl+ZcTiTp!sh7F5C+XG79?h^<RRdp+/h#5,tI_>Q+H[Rik%]23qio5A*N)eucuqg\PCa0WF*9N.p7dkmAAQha7ggReH@q:kW&`D:^Vjn``XgYMU@rQFf!rJmpsD0aOt?N'ZmKeI8DbME0_p"^.^%?Yr$1cKO[JQT-VjdgpkFCO^F"iq_;8^>V+k?et\QlGpO"Dsl1X5Q(0Mq4I]XQ</RDrXHap_qffhrpnTD^302:^YH5`gY[#,kAT5t%(OPc6o&fcA]Y/dNhgBkHm)=mp5Pjb+GCSstqWiXqgXgY.SI6MaijY[j:d=U(Dh#?F[GS.SeXg+In[3e9l2GeFVsbC6I*Sg3Is^qM%)h2bOhu)u<rT%>!eG$/TkPOk+2qAeKS0lj!A)#0cHY9[o]758.p+NN"0rFs%+("\#DsmVtolCLon(J<-i*Y1Ga6<1;YJI+@q=X:"%g\s"bjpeg!I=(q=:M0LgR=9Q]PeMSF]!$$Z^&I9bDO:7`Q`pD]jhEs)@=S8sg\L?pp>Z[-J+o!WTE"@%qsV7IptX?MrnQDfNFe"-%?2rg+FoBM>hg$/PiHT;1F[l#ls7X@2+7Ajri_BIIkBlCDh<!PN["%=q7f<.u4auSY^FmF>;QoKuMK1^0s1=WpX1KOFY</D4p\q#(%IUf:+?Ti)Dh]*:,l6W1<p&4H*J,bE%ot+RZF-XbG/B5HtB0Ldq^HIhDmSL[15Q16:D?'U[h="1"f0?ooNM7kK9'#;:,%"\'nis`P%muR1i.0"eDe&rnps!]8-Hs/d"WhGb4<7+LFalO?'k9kBCnfLcTa.rOU`8BIZq]B1Xq"sbJ6M=.o557\GrqVJEIca#tG<^<NpO.Df%j7i#Wq`Elsq>0I>T@rgT^@_?JrU[etm17P#U4e:'SZi(R9AGUqnV:1aSf`A;IQ`ARhL"V<qTgg#MKlkc=n_SZNSY[cIUjje2ni3-%Q*<KdAX2!8mG//jgOEn_+7);'?0M(XE;TCugY:?+s*FE("'YTK=6'.ds7P5.hO0tam(BsKDh%ZLYQ+=^+f2eXO!B*,0Zc?bs8M*6%&)R)c)bfeun,594f_]%QHDt*eEZV*'9A>]_0TB!]6X=2ola3d!EQ[=3euatm2Jht]o=1Ticg.+E]V^,D$nLDcHQ8Alcaf*"eKI^U%h8_G"BcC7tH\g-1f<n>TD0b8:gYTsomrKG6BcQ7pVK(@F'"r'2EsR+#;sha^m7V8@?X)@[f(NO.;r%,4bHEMb-#GFg1T%nI4dMN@%^9OIhQ+88!5KnK2a!iQdj/"Y-Xf'[Yq)2:KJ!sh=b[]FrH/7WrL=jXLei:UMp(Rlj(I]qARS$@[aF2b(M-9L[(q.rS\h-9Vp6DVa%(sCK&hl"it=u.\8Dp(,bCPgNKH%7WN6]:7KH$LEr`l."fN$6/_Bt]6\$k+u:Xj/rpV$7^F`6Nj"MCa/o`\PQH:5k<P8NBLRRUZk4%:\-^#3;$*@>M$*uBl+_D3J;BU>)KH%RGA0\8E2\+hTL3_[iED5.="HWjYgUS`kJ909e8O:;bB^CDe#F:&@d45Z*q$Fk5i_['Vr:!%HOW%E<*O.OeS/YU/!h3Q^5$-'=im)Nc.f\4cGMKG0SCmnV/:?@^,D9lCjeQ@Rb*AmSE<Yg0X*TBbZeY=ES78&ETsq$cQ:(7Y"QT(%c7;stA/OCEL+frO.F0'$XYGe;!k3lPC7EnEJ@P&XfJieRRC?Tkh!<N!RhD'%?J)T$h<R2lOZSeI?dO_FDge%/0l;&K_q<Ve(>Q!Y%Q`X%^(i)R/@bM1+ZSR/\g%I;D^+L]_1$!J6--*MH^sP!`W66s)+bt1^;d!`Y3D@!7>T7ETnhT;iZ-ccZQ850Q_buh-o89F<H!#=s%EN;a7]sHp\S$rkU:diZldUD!%0Q1k3;Gm1&$Rr7]_r!6XQ$]\*cnEIHi8U0<+1<2hQr=stZD:VPjXP]GD"<H4W9@t`2'TbVkp;XY%&6^DF,-Z;><b#`'a1Ubc68SI;VDQ6%p)8_!/Q4s-Vn!3l$8p+M_c5uFWlSch4,Z2.Q*j;^oJ)+T7R#U0;M8l@ViijQSIi]p-6e`&%8$iK^5<<FbIG-joH_:-+>go:B&E[E:-HrS7+bdVNG#9(oC>VWP^bCeZUCh5#kH\uHBq7Otc^5$E^6DN4OV$f.m6Km_X>mX/.;&2!%/_5)IH`X9&Ui>4aAsSJFTaMaC*I;!-N.]i?.EL6^g=hjlZL$53I9>-f*E1-eYT.ITmY)+KXsj]X3X.TWm8i!(D.Dd&h_>iT3K:*r%p5tUWbIXb@>H?B_Zm6i]E@B"nB-oCAeE7:+j6"OF&F[\i.@2g7@q/o9;DfSLBE932'oUl0]oK%8?WO&K/kfJ;@E'%WK6EL\q`]uI%'1+P9<#s2sX_A^J54(EM3"4SZY'_94cn_)Nk&faQ8skkJXNo%99l104(KP?>5o<1NbIVL\,c5Z:OX3<oGQS[LDPoY$1EH`pmA8Ec%?&f<`K4n`\nH]uSWMYE!e/fJt`*U[SfRQ5Il]0%?lBqF%f/Ak@60GoT3jE/HR@R3X%*V:e(3@>P!KRKHOYL>^;V],OU\-WBR"l-_%NEkU(ofUf%=i5@gbVB_#^2M(]apfrg%BkQ66q=b))>h$%d$=RTgpl<P\S7WS4q--3I41p#e(R0M\0u0*hUU?e?_(>1h!M?.\e"\f%`bi\P6tEQ`[51Lh6H7klf[):Q7HW'TlF(Zh3TM+E"fohn1%1rua=$^#ZnWCBjCh6g?.a-/WGLq:*4LO\Zk0`Eb2X6KDG@[1f`q@e%M]#s^9t]OLc$S[u"dV1.;&4gCXSA^E=n/cUAd9,q$"7U?frDn(J3mYYQJ0q>.:Y*60b6ps^5[N2CSGkG%9=aIJMU>>D`B%4\Ai6N%VB%UG[9L!]&XU>\nq9lnHLEfr$m_=!@#WiolPJn=3fCtJE:N/?a@9P<Vi[7*H,17?Dd9s.Zj:a"f<V;T&gNDBCoT%Vl@J:KPWJ7@%Z`></*j5fl)8jJ2!!lb5k(8l9GVX<RjrJFB+t@tg`!=OM@"O_%![f[@N/`27KM(W[a$:HjG1b@YOOQ]lZ?!RC(+`&DLjRd>$#F%n%kX%\sf,QQW&NWsk@]je+kBUKa`tU0Xd]alI0`nJ=EgC]VrK+lm,K:4L[8+5SS8[G?$e?5eNL0fQ9(!G+^>^(cNXKV\a$DMEQE9$q%gi-E#4.*#kURddG3UIFU%@6<q_DHd4g*l5RbgRL"c:AcfI)PpmH-HN2Z?Nr]A_ZO"hM(oC$]Z.d2?sdA&.+uG4@>WC>1$O)%^<@6%Il6j=.E80WQejBS$[Xd3/EM&kZ_<A(gr6lR>[ELUgcU0qPq7Rq&%X=u.ousWZL];a?jBA5bHQQPaAOddT&\%6nGc\;hQYm[D`A[o%,_?iq*E$-H7G4(b?4Nla_$'j5kf5GsX1kU,gM::(-7"4&E*6>ig]WlngkN4@0eQsJVu\dD!%D:[CHT!6mt:!H%J/PZ[lS^5<n^D4%ll&=tFG1l?)a_53D:pT>ONJV&5_P$:FmqO=CC,SB%:=`"hEg$j7+'B52GW#:@\M0'Li^@7:7+#riY#kS*C&,*X,mO-(3G:0@AabX%;*&XF4I<nl,OuM*_&fHk*T['RdEd*VJ`%s"?9p>^&8pLE7PGB/_7JZp6="S,Bh<Qm%>obO]1F$D]^E=`]'3P;KQSrC63[W`nhA2d%BeG"p))-uT^>uR%drsXULnI/5T<X'b,7GW>c1DA$*?SE]!Pkd[$Zir^<Eg749UH`o"5ClANls,:)"iotc/X<t=]i(#eJSNGCVb,)%mLcLW\&OSAeeWQ5d,Y?E$o?U>?iJtq0g,NTRW*slY/?,l<;?[S6sS;"c6-<W2m7+E5]1(f73R:EKjE6]2moY<1DUcV"o-RJmjlm7%chP5t@Ag[%%YXm$U2)9&%_t00(kEiH>=R>U/]8C"2=po:UtC3C?tJ)QCY/tPLb0GXQN[sBJHp_BAK/NB@+-kB[\X:`UYF*+^E*c0%/XW*VfT%*o6-/h?4NrW8/n9ES5Qahei6hT\'FM*Glutj$&JG`<>-MRdAm_f!BMF(_68UAVN"*30Te,se38b@0Y%\_Y-tYB2O`O+Q%Jst;.=pl:pqVaC+l6VLa@tXhVL`8Aah#NsT9^rOAe!9sl<'Xa%jLVh6Ec77ke/Rs[G++7TKJ7qMJ-ei;&<e-LK>l_lmLDt1#VX!8%N2;%)F!IV'bUW7.La!lW$c(br=`*2q$GXGQKC$0=%3UF;!>SX02(T[+"f'@fff`&Uj?DM\!rBb8"+:@+/50B#&ns\D/thd+SI(sN%)0'4]!&q=ra[PGZ\'(:m,hT*9]WbZ-9eu:D+AMpl`T#l;_Op?La9[SWDhCeXg5=em9H3[?2jO-Qd_SioN6'ku1_X[r7aC\")AUX"%5i=.+5S@LC@pT0]bK9m&pumCf"$60"?oL+`Y0"a?.!qIS4T$+jk\I9d+"fGS6/K?7YqpFM0dqi<!o9M*^q`c"!GerkZ8(XNlibW7%^;jI=`%Tp7PU(&F/&5Q5,I<n'F]^Ve<kuUfP;I[S[\G\m?-mjmXJ9P;-H"t:o'-GN"!6nD8*EJ##(V<8R99Mmn2*L<0oP?3(9e:U%SWV/JmiDn=JCa5[pfiCW5p%4&'/"!$=#^SZ$"'8B=E;Ge[g"%qEJ25sKFqPsQ9sX$R1kksCQPpCq#\,o?P6fY"^p$"Yom6^AANga%8#N)<Bjd"T!!2-`=_$^D472&bCi*>WEug,@$#^Y>0J:tm#j-^*K'B"6pkaEg)X(X8#Irg.*FK/F$3(%N_H=VT\3BUgDZNWTD8-q-%[K'EeglO`#>Vm>+cZ2Y%7N@OM5WYpT"L%n\Uc$L*7V/eM.YIe]g;SQ2+f0<LlnX#+H;_Wa1UQ6DZNac_nVhVI<fo3WZ%0E)QFIml%9c*lTgH;8HC#nuEot_aep2e0(j;gb<=`D**OG!HCloj;4[uBF5JO62VJ60cH8RPtP"1GVW35G3Q&W=g+5_I,j-G;!$SU-A`-=h.*%Xms/2#V1e[J`j7YgP2KQ9I$2qcH]&K7b)%H>3uea%0E`i=lu.>ipMZfX9i]a!GXB95+:bg4R2,2-5#RW7M&T(?5[f=/q[nk<rc]F%#Ff.YH!R]0g%6m_a7+Za$]I%ZM14g_3?p'T<!6Sm6")kK[l<grGM@1nhetP@#00%JG\JC@iG+_ckQqr$(Lq-$6kgGNB:gl/:egX'%.M[nPF9[@W/o[;35QeE6QkL$i9=$'\$Ta8.YVjsHYuuA0QHLc>1%k['K-iGQn$$8bleEh0)^5WHB&s%l#:!KK+A:b'bk!<I`[9]@%'bp?V#F/+XXO)up+XTW;$lWRYfWI)?2`oYCA/5C[dr7Rr\]%G3$(W!=XVpq$RhIku6u-R0hD?fGS)42hr,[QqTu76EJUR^0feVV'%D_[3t/`["f/rUi+eYfJ]C#j3LG/4.qedd)?J:SsiXb'p.+FIX9X>uHq)%T1>>Nr";U<1<AFY!r)L`OHc6IXS4p92g&Z&*i;n!lia%&7>Lb.a2N.\o[j0D%:uLPqqt[*5oR.\Do^\@XN-TJM^mXB*1lKZAmdKQm:sOIFs(COAR\XRQ[t3%I'kM>hg7`!Z5P=80:#3$P1TP%"m"1WreQj@pLZ)Z64X\=(I/=d$q(6:``VV4"NO;*9X(<UFc9Mn!j&:cP&V;biFggVi8Y6N`,[EeId$46i,`"6*%)MN7AHQ:fZ/rO%L9nZY0mhGY>fM^m2K(lkmF;V>!8DUSG;Zsa2qjYqN`'@=\&NG4Z4W6U)3`(KPlqk?YT0SK0"aXZRZoX[.5:f^BVUA9@@4<K$%9jh%MBMsbD;O4^Ts+'0aX`BL@*)_kP4Aq>]5K4kJaB1L9Y%MRJg/$>W&:kc+W)&;/-1jG",AUK5[?&Q3X]W;ZD);s:=K@*JoJ'f#,^p<%TNOB&N\NDr)MYj/Xpa_opg1TebVi&5+F#sl^DS/4cs&mG"if5)N`[pL&D%8;L5?ah9"=_JkM.bta=+RDNC+RMJb(4FG@]_g!,PP`%;Q]`JE,!HH2LTG8F0I%c!,-8/&EaL%gqaj@SJc&o6DAVc3uh_ni$alqrRu5V.=lXU!XruN<$,Nfgp?F;,lis6$7[k65DIdZ!FCj/%BIR1oRTMW8=uBuK52eYeloYF?!X:Z;7uTS9,TbeGA.k;=buOf-iIW4TA7HYV5""5T8oRnu'a=fu>=JgW\?8:9E@HE$,@<7`FLnQ+%k7)D9![\V&K0@I=,8`4Y)oHO:BSDAI=;kRY1s@m10XeY6U;W9PRi/B[,E?r8q&d\,jQjT0(4$17J0c?;^qOMQ9L6=m-6iMIA$,kE%9MC)Z_:rHk+Fb-=dS"A;QO40>%%D?Tgb]Efb/BHO!2FOsTS)#U:'s2J3P_j#SFGg:88&AN0VJgUS/Wo:6.F.oNrr&f%Ph@p:r##7%Z:Ni&4`ZA9=>;*B/e8f8>/Dh8!J33b1:@D239:A7)FRbC#FQt;#7u'1H"Nc*atg,IZ)^%3![<=u>#\A?BJba:"5=1@+,1NB1h+c#%@i759@qIul=?"5:[gMs?0Xr7##!9[ii(4"d/IV#eVn95.0R0r;TUH7;%_"YC!@&q!#]&mZC1-_/JF0Zj.N$)s=uuAmUHBRs&O0V3%3c5$B@)o*W@s!t1I1QR.]"qEdRlcXMoAHSd.0rDNYp4&<n>C[:`3D[3RCIbI7ba73_abj=_AB^&huMj\)a#%.(tfFC(gDr,^em4i%_VfO%G6)?'rigAa!$CQ;LW6agqsaqZ22M-a>!Y=WDp(@q/^Q/8$<mPYai8&lL+8ni7?N5r.Ya:0pXCNCfM#fqifEB!47!S>Dpf^a%4=[ZZ!!5/8=tGIaGO4rUMZ"&nJZN=X#2H0lCs)VVGR!,#"*][*:CC3nd:5fCER7<*gdtrcpjgPGp8i&qpm'P`clV>h8ghPp0^K-S%A=X';iTi*eKbbiP:o.\NE0*g;QjkU.\*SYM#1N9YpiS.2N&@f]*j,U#2&_L08R)Zt@6^sr(a%?IDZZd:7:l)rL;*d11PF/k$"U+T%>F-Aui"NgZ)!qKm7$o[R(@ZjZ#4V@E=HEp!`3,itl\a"02IBTJTI'kGniSV_g#KqM3lZ51??)Q%(8bodF^e4Ej<Hni.)K#gan%Qp%6B;\4*BWZQDTNcJlR?rX5iE1s(n;%C%D&KLL)bfE$N:m0[&Fh^8@hK9+,nEO:2p6W(HlI78<`-G\q;n9#VAjW2pg14OQp;6)fRK>%,R-WT-k)Q1_4@QNX:=:PPo7c"Ifa?D*PcoE<aNTJ@4(O2TS#?Ei?-&:L82"^/0ddrQ3=7J`nd?/Ge+?O0:iBJRMjm*@#^;mY4h/V%7]E/f9Z0R<!b%XnE!+r2V:&i3`=T-UTSA7VHe&B-MAK+tIfbA?K?9q*hiZ1bN])INN.Dc"!C.Qn"!WPP=/,5@LoN!>A37W+n.P5k%DDX8o!FR[0.*0^;oNOT*Lt@m]'<rcV7Al47<&c.BM&QFKJL;:HX?ZQ=;R^YqH&cnuO(LX=7c/2PI57T%/7!hM3+`R*W!IU_Rr0n!%!NaWZ?^urM)[foeW'd-KHO75=liJZKn35>4j3&(n``PQ@hW.g[QEVM0X=u\qR/rCK]]0!$`I2B[rAVN*Pl*8E'goGRC4Q(nQA.+.%^;1H@Z#GA`q#L-hgS9,jr3A(1ecbX';#nCYW,/Y6ecdW3X1:W(><pC^KH&g*>0`^U!SIp:""cIXMt"^?$ks*b#n=.Io/c>urh8Zq%';3D$iSe/O]PoB4Biqk;!rc@-E)A+f.LJKZYT\:%?"#E;64W7O4^s1/_#9pNKAf0u(BI%S_;cSb%%`,\5`_T2+CE1)2`t!n!6bc$%[/^]0MqM$t#uR]Nr-ApK_T&A+SjZt"=P>KEagijL@d"Il^bV62#::U,J]0tq7VrPn!ADY(+?_/T,C3a>n5Ks]6%AqTG]IKsJ5qRo%)jVA^MDU)7//KiUD?nSj\nH=9/;M%&E6\9-`'iPg$f@R8S,r*mN/+>3eD`U9/.52`Qe.A"\H1)j.'qemibHo7Fik:HDlb;_2cpYC%.W%5?N6g<B*^Ft5JS'u3=F\h2@^Y@YTR8Tc?*Ng7Y9#"J?,M]g@iV/n.%cR:6afk]YV%ZLK*glXSgbZodQf/73DBS]'gS'M%!\*H%)VbZ-LTT6o!2(K1]bl?k4R<Sbe:7k8ESgJ$!Z]EdomQO%cO_-5H,SUu2LnQ!5X,fe?mnpe1o.sdcA6<'8ObKg)DSbKL'dNt(WZph%!#;mB.57^+F:8^WC[-ZKjKeBg*D&f;QsDCN\afs`#(<]\gM/nTHGAC/O8pn@TQl[E0/.1K$<_ul_mSD)4+M+9O.;jNCD4.!Qo>+B%!S(Jc<h6MhI!OCVabV6t'I!_:pA>&6R1.cAlQ\KH7p*._>^D6SG*dBUL.2B2G!\$u%6nZD-iVbNdpY%%L)!4_lZ)R=Ag?G/M]!pf%W/)Z?Qla$DDp1$o'Wbc`&K4apc6&Pn`T&KdWj:X\Z%21LjcX4,@$j1]E%lsH+mP/:_$#Q9>)9^C@X/ib(sJ4]15bDn-Br'+!V$RH%-i70<m24#`^_;;UG2p:fb64POX`G4d@<f9+<TO9b;SX(8S)JBA;A<QXQ.:rlB9*4rkDlOK;%/-?i#l.qfgCoFY33^T)>%BNhVEg>%#bgkR%YV-V5dCE>VGU,dbpm2M\HuAd)OS@`5_I0eSu2\q0F"WR$IB%)!"W2Ba`HtE_Q"D3$XOAr6dtR$"*h;D?3DC(oa_:uJ;#d*%F-G`$`oEIqAU;#TE@InJ)R,XR\Rtre$c%7OGg[;2S=#>AGDo_Ik*q_Y"Vc+M=RKI=Ehm+YJ26&EI@2h`JF>DUK!FGG`X;0I4:ID2%RFU(H[`i7-n/G/Q9pPht*+u,9:1:90R#0(?"Q9_B[Yoo6#GkPtn2eN]O(dBdk(hpcBY57bN&P($:E%'cO.Od=F5nH6_I9%o'*F+r%g#^Q"5GH2M+SF%)OI$Xjp2lEBQJN92TFcWt2:dGV/tcR%F[k>1RbcuN./Y&/!"CJ6%gaEeGXO;ECk02FRl(1s$.:>C!/n;pQl?#4%7V-)<+T_nR8*E7jS+eec0QuscCs94$'m%Y$c"1W-<cHGSYHTil2RXB`Jr!eqf#(@'8/2Ld!kU^[!A=U6hUhlSY'<)f^'tGSJ4jcV%b>tl^+KYt`N#A]*Je\,?"7oVUe9sLH<ZOnC5T&E!L*V:bJ4t@`K[lGoo\^I@_G1h(BUk)*C-F1fo>*b$YWMp_TP/2c&r-p\'oaV,%rjXBU.;p9fRsTrulIEs6!]nUR0d.!t87%C](t&D_JG!F*TMQAq!d[Bg=e.JsH",K8A3f#<M3G0IC8\<>]Ze[N!e;4N$O`Y39a`fC%]hQB9=au5``5.lkfMJe)l4`OeA5JA!MC.V>"TXJ%Md\Ws1GO_(\ktb<j2"S/gqsKHhWL,l.khnZ#r>Np=51rPBa.[B4'Xt4d]`f*%VenmA!7IrB79OWI#UnE;:D]Ocl#b;^Y,L:^n6):W#Ufi7@HNVq"u*!Q18[nU3-qOO`9tjJ"4JFK*@5'OGd9jq,<V"\*0%(o9L/E,%-V_*(7(BE*;+18iN6OZk`oQqbgu3^WLC.E@ODsj],Uf%ae$*XXM,?H1`jB.b4KenRG^EiRG,1fMIPWV[U>7MV0Fjs<mX.9fXXf\U%Q8)mdLUg^qo-#ia%9ohC`WUp*RON%4Nb.goUZMjY]6b0Tc%7e<;)1%SqE2].Zl[l2>3K6WDe?B8JFV8]Ocb?*js*6Gh6MYBp'3ci%;qDU4j%@m&(#Ks,ZbomRaq-k)PRYT%<0nSk0]S*Zb8&3;^?dDkd5ML'5NEaW2,-p%!NOfB[XF2]>8/E#aeZD$V?98NYp:Z&g'&J+%i@VlgpbP*mTbD8%.X*m2e1Z`-O<.[C*Y[>QqVVd,+!+Hb+qts<BMK,1Tu8]->H0DGbjaNP(,/4b/K8)1lg_:HE@?X::(-f("c=0=%`E5Bnat\;U,mM*'>0F2LZ[lSE3#6F79THrL,=Sh,4>]7Q'?=oUn$lgp+;b`imK8n[#)$0q!YuaE#;oL/F+O6I=`Q-,rSW>Rp3U1u%%1V8I?m,iO$S9E^m-S2r2@Ki-=[;'q*0^ZL!hHRd^bYg7.$S.+C\AP,ioqNnC,R<ER,ikg!SAd&=Jfce"q5+D*0N?YX\V6HNDO)$%:$J^qUC8^U8[5$V?d<32fIAEg!0<D(CGk'rR17d-UK;hbiM1NQ;I&/"R%@^`7Jq`h3B1fT(XL:_O95Q:TeSp\,dtC]9#^C"3$82<%[KGdOTn$tW_RsisI59e\4Zg_%8'K3@52`&P/tb;Q.!Q]o#V%MR@*WBeLj(Y1N2N=-)Q&%/QAj.*n<ah&3(i[1<eED5JF%9;=q!c!%@>p%gJ7"sQ5SW`R"'St3eiRBM`uT:AVhfPMUgW8]`B;Xm"GHJ#lZ,>s40e8ab9(-8H.db+h#po+5Fr85!dOhokA6<&Qjo8EgE:rQ%,QM-^,<+T4B#&co#6@0#,pLAhNPP^:i#8pZS/jP0JHk7q,r,EnJZiYlO7U<("7$;M8G^XD1H7s@P+0R//bFi^afIT)bc!D7(ft:W%]Z1I+>Rbs"4BJ'bPo\`J=ahn.@*3eJAFQ+\+tQA.fXiGUliEBknu);>L5!N*ZODSY%3=SpG]pDCYkh2l@)*>Uk[TC]J^K0N`L%W'%BSe<L>mDhX%f>BHa%#L`hdEGe@Yu%?,n7g5a9Bo0hT?n7\YSA2'n@0Z%][NcE=Yum?r$d=9c:#t]2F!JoVgN4dZ0/UT'G7B<n$;P%34fKL[=A<:@gKl&"BWXG7SQAG.%5Lo_JR#;EQV=KFUT+!/.8g?RZbV3DOVeg#RkMZ?>OMTRAKelRN)csR=Wc$I>0Q:/+Wt?_RP5m%Tk/Ym5GJ6=ouU#T:;*sCVW=.43R/)H^cp8ZR;YsBBnCRQJhU0"h/$WQ94#i6@M1%ro\.0&7)fg.2%O4P,SRnE$*>6FQP_M(.+TCs%ce,`c)E4lrVA/A64qKo8:r9_nWl##!ZCiIbjNEbB_>G]W.a"IMR(9JP<3rL7eb"]W@3;RX5[?XK'c:H3KI<X$=G@^:g1D?#@bMd"%%)fcbkij',?o?_Vn6\E8-.i'HqmJXU4=<6?S(c+bZ4/eRBRXlM*Gk9O&&FoI(erQtYQl@QhJlk]8UtWP#n#V-U'CojJ_hq0l&$<&%D1#kNEWit,d8"Jl?m,/$5Z=*N./]"i(5S`.*6_YUiRfPTN$7$`>ade_RdprF_mOJ-JCB+$m\k@!866lr@Cc4_N@ZVp1=ZeCb-oQd%HrcciPkLha1#Ou_W3@Cb1(:0#'O+&+n-V0`_^`e8IFlFoJ7s+u8`BP)61WHMAC$b>-Q!DkYL,24_=d;JN5$<D"ge"e<VVHgb+%]&%lq*Vu=b^;a1g3;r4GbhApc.:7O<&Hn;eTjd\Esh9BE5CX]kKHig"?37$EJfl*Z>9C7q%PBl@FQ/00[2ghnV8g(cK7T-s1>P)^AsH%1+!nI2QUjDX>trNffHnac8cb]'(m'Z\=/ulr^bJ[C8<433/FG32)VQ3Zm0.h+q1&;(c?nj\2*A`U]LN(G$C::UQ":>M9dW>&MsLH%nWmT=p':K\QI.5c.pC2'*[\*+=CI#^[AoCWOG(+Y/8E*Cn"q0l<f\eoYo=#,UNq9%a$Wf:b(B5@;aL2BdE7H<_<.gUK$Z>Qnl!l(%![IfZ/-c<JSR2_7_l=`3_1Ggp1@I31cjVpDU+tL*oX]lVRUmTYR0=HpPgsB5+:oJcO@"T_EmK:_`Euo0HGIA!FCNeT%Sf5<KVfts%,?dL!\J059,8<ZPB"%S!cYh^bCjOJM44?me!WpKj5nN@89HMN9/\;m!PGJUR>fYt=8N#3c*0FBsI_]%%Rq3#0EmRKijSFPH(Z_X#%VA`mKMBCpQ$t[E]RtV#&!E8M8`e+;=iW)D\i9N#?7rpe9"tJP:g:h']"UYq<FG_,$oo"!c$Vi2tAkt^eRgcg0K/I-ZN5Kdg-E&:g%H,8@>`Uf1>9SV(k]LLYX^m\d'XCd)eB1174KHY8\`B7XWU\SE[%e?4@S/tda]h&3IDiY>I1Y?))M@`9OLM+_:B[?VG!(U%TFtlab%0L-O!$BPCr14!JG'_k:5A:SL^_4!S^4]&VV!Q*?MIKH!mgj*:bR04F7<f7gDJ6_&jK?*NO8Rre7mu_X[c1bP(*1*E77Oq=fp6rda%:oaVt?E6Ym%?UjP)>7;P=>bFTihDoTLTh#<K1ZTbKdMF<SVH(^(1:=6.2ie%9U!8c@n!FG<'uD3@-H1#S7+^q-'V&UlWM0i_=_Oa%"_](s5X]B*,7'lt)E'7?Ui!Xd-lto+bEdn-UuKT<TssV^LcS%%"qc4S!DW$1$+r+X3.g;J++.clY<dDFEZJl*Lpf#[31*-h%Gc+F%nY\lk(4ZRU@tDo,[K3"B;>?(P_S5Gi`k$Co"ig('h"7m%4#+1_2f$9GA*bRKL<%<l$$3U;[L'0uHbiFb&S?Q-^c7bX0k1g%(=eKL%GRr\k'#I0bfEKDP^a:32`f2\d&0%S."YuOjHF+g&_2;8/%\!ZK8)Fd*JqC#<'D"7/"Mc1.)&CaRDgbL`U+Z5##TYOVT`O:'TguGD%c&="U!3-GPcHXjM.+hihFN8-+,%g/+L?'d/-9DV1RgC-Mc+S2ODZ5B1B`+n9eV<c5JG3SScX]2g1o'$^*-6,3Qt`!ZmD'Pscf6sb%e(-Zpi.hVZI]QP5.-l6]0"@(CS!edmHQT'p*m:;"[4T"'=U5;_&!>,Y,,8HlUh9bE@/sH5.H'>"#sN6M4-U'AXBr5G'm.?en$D>>%h&WboL_FCBX;-@j4VZ!+<^GJpicap#RoNg-i.I;]@_`].7WA/ClYA!)JDABRNN:$6cs]K3<+>Jr'"ok<>t/'%n?uOE1%%><>+:4u%BnI33QP:+^(j&uTMq(F#/fDQ]BfC#R[kiBH#>!Md->,fZ4AWq@Ji(LO5[R7``&Q^.7oRkmrWuhg*sMmB3:^[]g^4gIj<,S?B5AFV%AasRN7(F4;%Y>Ra&R5]Ma8qJ*bVlS>Z3Ics@/A#2'?W=$!?hIMR>8C+*=pGD(F.j/!`Tr^1/(/BVAV1upHE47iNlN-=Fts4a`C8T%Ku)]%E>::(\Y=R&U38fMBZ;(HPM"e^"<&kTl,f`KH0QL[2iMLef4pQ[n-9'P-I)SGLE,(:JWQ,tRpgD8-t!`s0=s1)*D.#/2FaK_%&YZ=]8\5M#?E;b1:p\PA=ql^8@878tcW-!qqq.Thc*B^\[t-BGjb,=l[UBgu7o),iY0NP<CK4HchF'Pl%KGR0/t8X?-^>OQB.rW2%cDJCkMrkArM\<6gM/.kI%2]cBIp`"f2o<gWU'G,MlorUFXgLE6Ch?2COTgS#;l#g<DJh1hRTiNRH]Rp,F90WBT+q<ZdkK77A]8aM%$udu]Mc<e3;*7"W[,ZFi<PR['nY$]AM@fm_`OK-(%%&g;`F,(Rrh,-#>O]8Sg#OTD&<n.]!7nfUob_eP"92J#@K6d@aAdSH!u!Fo%`TV7Y119fh#a@H1=QUjRB*H;hLAe=ja/Ss'O5*m"q6k(JB5?gk733E9*O(42:P8I^_8rC*n!,JZF(!$>\E#+dP)AA*\N%9&H3E+-%@Q-Ob*]k3`(bmfc0F8B/%'\Y2oj[M>W$KA@Y>?_MVWXoAko?C6eJ$lT+472"s*J1<d7eVeE=YRFp55<FLZX@roUlFti"uSjR`TVN%bK`<2"gTk@\E"6'aoI%P;]1i,*gV_WB`j_-FZ&<cFS#o.%pNr(FKR"Wg^QHmT$/P7[AP+6<5uOp.\cE-@!9_AX;Qnb2)m.6bst)6%7QCJ+Gm!tR3\<^f4a'?'GJGgJF.;KX`$cg4-I2u\eX3%0gNZjTERA959?SYT0[Tno.]T>$`RYK3P(t'f_]5G*_njes(9o0eSd0X1%)'Rk+[?S9@(Vj^<fGoeoRK5Ai\`7RY$j;#b1-U(K+p]m"!DaK5n4")NOl0,gX:nVL:jAN-%&OQ"Q6E^!E.D%\ZcW<gaSrj4,pm'r%$N:-hZ%/n:<2F,dSLeLmD+7AQX'RisHgWuh#srsC7*^G;C,M9uZ\CJ;\.429VQC=L0*,mpLNrt_#a'h8Tq8grCBGCR`$29`nAFO7%&+!.a8FW@7_BoL=]@k3@RPc9.aU2n6:c=9;[6d>iZ.+.BihljO(09ReX,`OdVX#G!g8L!F./b8CV?29h-aPYS"m26piWsSp*75*s%i6-pFcU[Vtld$V7Db0%Df"[TsP'=^C!PgS[MYCr#1ieOrgHgU.`PRpE=;[#WDJ;<"TWl?@Vi>a%:)CRC<"B4lQ*R8rdghi^*q6\W%$4)[%@(*;/F2WYcSRedR,HBQ)n1Q:Lj/Xa9ei4O[["9$9b">\J3$A$%mg,ld%/%f0cH3)dr75WNDN<RegO[b$'DASZgE*LNY0@qE%^_^V<KT'phc)6+?ZEXDW@!j&EjBf0$;B-mU0s5;#qJ;bZmTJh@7LqKhhnkbNn8>$F*s!fa*`BFMU;Io0ip.1RlX6;u`kES9@Qg34%lpi@40S$XK\I^]Xk+b4t^&[(XT<5>O&'#Dj`BRh>n,k$+RFtU0\laJn*@e;A$:FS$j8l$2AHZdV9j-hn*;O:nk$]uQ'qT)egBELo%A)"B=fn1SW?`XY!juHn[S*<5Xr[aGKMHMFe:QP?6UV]B=a,.!hI:"M%@n(>#_PX&bYSPDZVDAm8SW:\nTimG4j-:=I6Y("C"Ga7[%%7b!4q1(.oq!6FGLloV*aX!`.G67WIg59?LQIl[Ds#;iFdG4dXWX6PqCR3jcT5^k[W2rH`C)V\:.-OUF!SP-e^P4iN/Md;LlRs%_%=-Gp%D)'-9DJ+uXfPPPi`tZ\3fQ!P-g@CX4T96L+f!nkccK3]9\73[TH],9e3:YgHe]_WWN=,!.d4g[Jm3B5*0b9>DMTj;N)keS$%]YGL2Nd$#em%3'[o\!dP#3aWL^k/@i?lc;`;PPcnmVO]9F9=WY7gp!U?L/H3aMtQ+1N3u=5;Dk[!'/\/A=06)YoP'L"cnU4beTSj%Ar+"_)6*9s\8V.'dk,l4(bD=kofVLZXXpTG^D.U3d#J/rPLUe$?iu*>*ap\%%2\Vi+e2KOX2^/ni#PpoA9FL^'Tf;.ou%$`LDsUe%B!^+s_^*_gJtWZ'2u*sYc2'a1=A-Fu?U:\5!!9?uECJ*6!">%G]ZY%aDB1@lY[h\pVEN*<jF*+^8CH'"0XK*8(`>0m>GT0(/Z`B\%6POUI:,A1@R"Kls-\6mHd?;;FW*j-P?]A?"IF<*;Cj/Okk918D,O6/Z_C4"bY,3LZ\B$?lQjkCARQ#uk!0(A:4N'(WV0^(s7UQPO%]V$.H)=EYN3j(GqL-/jLQAq.0/HF;feoOeENfp;TM,h35ddK_JP.ACu?k]Rm+A?c3XYa7Sc;i##qC&.X_./*9+oA-Yc6/Dt@2P#T%G@(DU^:Q;]iQ6m$UT4ub?a0E.6Qn=3"H4';`e5p*?sI/P[VN*d[_f8E$5Lds>AuE'Kn_QkYFNEgk"7DX,Fc?&6:V"30P+P]A`_Ch%F]93^h4b4n\$uEZ#?U5NK>q$Ag+F/+6\"4uCT*g2@-+WPgL+)11`<K+P.^cNiUX+#_fdDt2FM`07q?CB4lD`,*Lun%Z!c,nA-@-9%7e>q.(a"g?q;/5,foN?R"p2`_W((hm$rDd`!!<uTmG00b8.Z8RQW9ZNG"cWN+i^9[%9<bqai5PZ'0scpp5J3Cn)aeJ..&_?3EI_:%=:X;P(uK^r*gYmhis\FI0Q*dg.$Tu;?pG6[c/2aP)e^VG(UgkY<5T(gL9*:X#6YG+bRBX`/3$LJ1[QbM!*?(!=iMK:&)da_'r1@c%/#_1Ci[)C/q/sn(.SaTreiBh_X<p`MOY[U=C;dTa`c%\53r?YFO+H&T*k[I66rsHQ!MM8MB,GY^L.?r!VRa!W@.&kW*__jEVV@@k%?7MnT$EtlgF-b>b0*H!A*A#c]+b_/\a.e@&@k:dLa^VBjpLEjf!UkZJ-;=TBLpr5_4Sgb#.)[]R'*^C._sD,<O:qUHA+PUp7COIS%=8*O&@I28nO%W3="0E,*Q3L2>p6f(,EO$Q"D?E0ojNWJ?UC5Q]PI/W`(?h0o*@$HX5%8P/0#M"#.;Bl"g9OgZLmPag:OBF1MWU=/%"bZ#7_789a?"Q6`1&nALFmNfI8Kdo_Wm,uU0Eq._1d'^'YT&,.@bOOfA[5l-[YKGkH.^k0pU1t'#g$"p_f41U=W3519oCpH.h"C-%k-UQ.ZIs:!">R*)3ZKQ[ZXAbSGe:15XW05P=f=8Nml_;6`Sf>1dCO%j>HpC/-Lr"PV(nb/CBk&K&f\,o?+O$n8(qP_i3\"D(e$.Z%hCseF8iI&/#NU*;W'_bfYHbM'DIq"?A0lS=ZSGY88d7K*nOWWK'T^KCq9&I:rTo[%1kHKe1D\.T:&W,`,a#E7`(qOVA]nrFXO184%'J*Nc7rK,9.bhB'@?qU\@Vc\e[T[Xqb$6^fXl)A;9/@35mG/S@'bg0Q6gfF1ioOW#!oge%Utn!djsLo@h@uZRTgNl,!2mi5\f'n$%)iQ+4,;!T1QMrk_Me6rOhC.Fla"@ZV"t-fOSk8=E,+g5c3)7jX%WFRGDR':pSNU.2K+7'-n<(5_((3>]O4I'/]KVdn!U>9B=b(AK%Ip3O<VO6a+FULNZ2_Z+2?>#<g=DVf_B+rp<:jOij2d]Bkb6,si_.!Jb-<l5@q9@=AX:PqB%QPDHcER'AW)Q%;\lEB!824pmGYKO8%A8C-XgnQ@9fD3Xt:?Ys:-Yu`jMT"_8<<G_EVoDt;N8A6%op/FJ`P@P2p@o.`qIVThbid!^>&haT3HKok>=."B$)=T+"2jG65U@G\%Q43h6"-.1-#2Zb?QXu12ZnTe6i.59Bf]5>Lmsq)V69Z*iLi'pB%HDMTaW166mSQClA@.J'@m;POX;+s5(TtZ_Q>OXnfYXne?aJ;_%G+Mp^%N/D>k*X;rKu%(mp.2Rfa(XA8D)ePp(Y&nLf<el80q6GjXlL]$'Blg6S0/UU&%LsGO6kY:8#^B;=ThYGW%>'Q)Q[@uE+Kdu%Cblu+0=n6!5L/UKUP0B>-UcZl\p_#6+fs5N";q0pI'o_NUPH*_[U.W:QiL":(COR10p5:r(p7U>U)u\T=K9b0F2JSARaf&dFKc'r%eN!gb.-+oT8$o@%3mIWM2)H:dQB)Hf"n[L?7,(0hg*Gl=/uHD)2eH"2_+ES9d<*G3A/b-LWaWcTq/e:Ng/`_c]"t40a.Q-$$9NC`%\n(B1&HHb/?+/t:L*Ue6gUlG-%_)_<Ys[OcbQFJM?#@'b:pN%7XKH*G&?b9m513s2_-E(Llm&;3\,al7`FI^t^R5q4=^APYFS'YX%<:9T5;d8X&@tVHdmt^F)`mfNkeg>5l;1QXDX,_8Z25;T5!2#S[52[bm6K0h=2JcTm@Gi:HItiKV2J5$JTt(&%iW.lFI[=1;:^1W&%6LWpr;.oV?%1"&n&U32s(aO011Lc&+QZ:)&"K'\V`@9Ml/TF-KBJr#m8p>L6A$K]?^<NfqYiH"#nA),o!"9tQ9d]31k!]>5)_Et1%.S#PaAtTMq`KV;eXEc"TOCfb]YR&Dc9\UgfN8Cl#"l@Cd4N+29@[[?CAmBU:4uumb/h[;Wb:MYLmD.H+Q5RKP_.o&HQYM,04E''N%3lX:-H9#(VCQ6V*0$RqaN%tj`(6%$`Fk`MIP=Fp:C5ND&c$$$7)I332XX84Ao$@EJ!$dJ5ZB:C-0C=[Pje%q7]\-sN#_gLORFd*$%X?_=dBk1ZBYdPVTZWTqTe_e2j:m;eJj?lQ+N.N;2kK3q[c4si)pRZ+o:RP#q(j7KtAMh:CZ*$(0d88b/93''Hd='1Qg0/=n3S7W3%fF6sl7k.0$m=Mp<b@+C%R^ZBlKFLO-b/I+&/@c4uTRHD9'sh89h+M/+%0L(1YC4gN4(*[%+;S8a;kSQ&!Gq?kiEk*t@E@piM5:V%%f38I_'@%i.\smlJg)SR`,eV"&+rAr!9"g.R:\j^k,MGsTe\EHCUW8<rS`"Ju/W]6ZMtd=g8!#sX'\C_n+(0A]Rr*R!>LeH3W#'fP%9k)!M(gUB/++eU%X(N'G@LohThHD9'5BL+mYn&b=b8/u$Ij7998h!KP1(SE@O>jhAAYm3A"@F*oa>SV1f)e-=h2*<-k$c?&Cm\FQ%1c9l&chNegf#cc^Yl36KM^aAqH--=0USSEE"Xp5W8M89Q,E.(,>oO*YU"*[L)Q4*ObRRn1/[c;kfBmL0:kLauA3pc0ZJ&1j_LSp$%L1Ob"kgmW,gONpNc-QSs!<hm'dql/1QM&dc86_Is1KuYR^`)Sl>MHr82\35QZe7Hr6.7/oZY!f.!l*AECpTHG?H7F"BR023dpl;q%2VDFO6N_'+Ra2$W+M`^5HMYGmHLZqWXlqr4FGB&J=OUfN)<%q]lY^4)C)&'G\Cr)[QY!GS"eLG\?^MfcPWc7j'@TkHEMn.jZ2Hqg%IG0*r?*m?,HWt-%=%KD1&B;9=*4Cep`6e]d@/qCH;hC0bQ&gaeVL!cpU?`XM)KqmXPKf/MA*asFf)h3@GFSJl\N-/6P"d.+Ol/8]%DNA=/b=<*a:fiC/b\5.HOY-)>;\&U7Z5e;`)K6)(RB8&+a/sb`2?5Y)FVJFXM9XW5)eMHFOf-1T6H37?H4X7t2CiI<d_HHG"4^$C%Tc+ZQ%_H4?D9r]db(^`U]W6e0KPu7Le/>&s9Nm=b_OX$p'S<B<]bC6[a]:_J2D[sXWMMS+eUpF(d4p^E>HaufAR>KdUf_8]bA#.Y%?NHO!E+#WNM9Y"pn%bdV%>>mHlIF0\G3g4LR(tQU/7=)!,Y(XH4$DU?U)D/%>lW&4C<,Cq!eE*m\X:fa<)aRXqE-Hd'QnT4iE_TB%.O;uF!8Y!4g=egP>fXBVZ7d8?j_j"6]cZG72MD9R`XLj3KWGHmZ"X_/B-q=fK.2+T[IKN-OT<uOm?:A)omBg>5tKUJJ_i-/@%UeF%`7h:0`U=[+"D9Q!LSs%Yi47*M,@:gp_/4ES#Sq6c/U$<6_0iZ0dj6G/)bkO^")cbTfII60B0\5hYZSt/.+S/1-jV;3T#2F8e%Q%t%4JR.K>q@e<MKT2OA5h/oQs+N;7S-A*#O,o]@<7oTc8K;+YR>\?<jrE_J4Z7ro6.#s91EL0HB66WGQRufLA*ig#N=5@V<MTTj3_Ko%Q\O5&.HmtUb_,R07_`.`5qptGJ3>e!`S--Ld?(`Q:ab"Ri8A]<FU$FAc/`'p=gbpLNbu+g"=LE#o`<fVM[Tl2R:f=SN<4;3)sk+i%;Zl1@VEoBJo@V&8ju/k\0)d\1>\Ag%gU/Z"T><&F)A^Rod8mY\r+'(BJeb^%;tUHT)Lm[Fc.W4l@bVKMIUjaE$Z($e(4$moh3/7u%3t>DR2[47eo*Al00F$?84'iWUBufYp^+F&_I-L?bY+QUD45?=1Bk-h`N)UCRh;:mMN(1!5G6;\.;h>V%JG%/=!Z7hMCI\m;&.NEo%biuO$OU\_6J:F'T"&;;99W^$<@DY@h\13$\i7/`cM0P?0%XM6NWF2r`WhX.Y>Z`u^eA\g,M(+!f9!IH+1^Si[a$=X0%N7";<sV/r%MLG1,"DBWeN?Dh[1,dlE_4asiChqaI8Qs$fL5WLWgI4jYPn,4(JS6DmlUPdTd9qC=!d,B6]k5V%:FL2,FYS4T&84.SgZ>rd,JM?=%Q?Gp*AJ]T0[9=>E\&4kk&ZTHn$W7a&ZbJa6V?-%>Kn<'0Bm7\Dk%R[H#Q:Uj:897Y__dg`b\4crqd;i?<XCF@!J711)^*nPd2#_U%3$/T9n=JQZ%*;TeHbilCZo:Z#mc[3[So!M+M:Z:A]^9Afajom,/,jR/m_Qb$%$r=fFmIlKWsDWUB(&jAcWmNKHi%QY?dR0FR..Wm%QXW`r;<WJIFY$<PC64"Xqg9jDJ"'(3$aAhGR&U210N&L+],0B[-(*g<0#M^oB-(i+Vp8i#-Nl:8*p;:tD]J/7],_n)4:=+gMD<^_%6tLbk-9RB5q\:f#$RCn;/AokJ*$Zpj#\u=mTCqNOqpFBGZRI$>!i-j0Uj*)(FCa#3MRqJt(>!%[UeNI-<[K]&[U@=`G]]rh`U&3q%6mgGpoa<^_k\3*s8AgH1(\edCT\?3`Q@"fC&`!e]Cg^`ZX+>;1HI9@XfX7-+3n_Og&`09'f@JJEP_#lr5)^W:3Z`jl7Mt)a)spX:%^h:-lh\1/0jI!jc1k7r?i*'P4:e$?lc2#4+RcgSe0qYEbM(=B/bT>&JX)nUgH?",U[Z)cF3kC7F:kCtuC6r!h:(9b&%Mu>V:'Qs+%,h?eqh_'WC@-6,Sb-t=l5rXt-*Kd5D7hbB;mI1<%9Erqgm'qK)YrKf,enPC%gY8_R(DKCtgI\p/0<!F-:BT>2=c;ZPHSW(Gn:et'%bn`2@)IfFKYj#c-1-dG!dqV#i!H8Ab\(F9kZNCmL"Y9[>2kE1a!toIFlkoHV<%6N-_l%5$OMjb@Y&OaO8(UHJ5dVi*>h;IG(a1[W%#3]ePBHrm`AVN;cLu(8Y_<ht1U#YK\$!,hQCSnIJ]M(hIUqg_2>?:0]WpW4fE+pkuASqc7d/.J`Ad?Q<is,d8l>RoGibGi-/\n">%,/f9Y1DZIh<U$*GJOV`nTok7uo'=$V`Far"0:G?!gn>V!&RTWA`or3:C(9?+/SVp-)%GY9d5:*_d;%_4(jN.]Oa&W"]JBlDedfO/%:n2hh+lE.i'J(+VmQYQ+".hN5DT(NrFXk5!Mk7K>%MqYaKB?p#h`P)0_='OSg4;m6VtK6^"[_;le"/*T[],\*QJJWe5[24.k#C^1%b+@8uh_*_SB)6Cp(FFq(U^`W4<+-4tR_?thL=2H\\skEf<\>o6?W<uS';;A<L?;Xi"cnJ29ola%6C_j#K*t,01O=R:%-M\A!9sd`%%)dm6HgXTPD#L<W(<hoIru+K3SH4_=culF_?,as+JeS[ED#%bMHA)('Q8M)9-oY1:lEP5`9sbk`!cbTKW`pK.B%-$!@A`*WnU+Na%nI-?5Y`'cZeHS6$q\Yf;1D;.fo+&>9B_?\V5'(W;3%Qb^>k!0tR+uY&Yqs-Q@Z,c4UJLnLc=t^=h_$tobh3[+,9O(k13ab5<F`J6%qnSD0Z7ZQ(j["fcm)a776shL'8$5t?CaU.rRP=eXr2nNQh27),CMQ5=)5V`,:5O*a#U(N.Zd<RKRV\L.P83"`?%%`nnPS]_T'IF2%\62"S!-,C3Y.8U)Picb[oeL?<Mq>(XE.Q]5a5UTCk)F/]W6N%uS';:V,?d4io@0_?7gLU)G$-E4*\bq:8eFj)Xk`KH&b_KoQ2@Wp%p!G%[2>oEQB2*3/`u%=b&@U#g_FpITN#'eMG+19re;bIB'nnFDC3H6L@&M=gM_6R>%\R';KS,Qd##I6_gLX@.F@G\:[S[8P%/q*+%^VH/ZQEXtn(NSa\?ZnPLaJuhrW^h#n9`mj,&R^7S,^eF/kH_<'Y\s=OgBVDrG:$&tF4l!@6c%h%-aum:>p=\Z,c8j0F>?9mR5*7]%A9Mn#\Wko&&A>qei-XhPAhtt'=_p-QIlQ-m*%0N?'49e;5of-&hKgG7RO\VnL"]WeL\tdhiJ2%,'!dEs9a7.'@]B9=1TCH77"2UK%-X[HuHIOV%F_0CUULdVWVMf<J?t\ghmX2Cq"TjBYRrlt\Gce(`T.UkPPSTPfjNJ`/Mn,FA:S[O^6a.u_fIN!5&_]4F=Fmc$L,W<B%JTHH=R#aCR,Uf$6Ac?cVBDSt=&[/k`m9m_7TMX#L$sVs7URuqBKK[e\\Mi-XEoYNO1bd\#[U9*\`?uCc`Busj*@?5hrA#rLAsV79%*c'k/s#+fXs"A/r8@\M(!hXjn9/#Gu9aL8E8+bHL*6qGQA0NQY#fX*ol%0r00j2,%cqs.-`/;[B663COaAKf?bd_+IBS4MEYitVq%-Hd;je\gE7N-Cb9FH<IlT:BE(AM^e#niAE)Jo2?6-tY\3]1DdW);Khir\;a:,]j^UI*0aqP7fDY"F\ulSQ/lIZY^iOW&'GtpV^Pc%T7mr[LQg-p;``oL"j0!R#62^j24@7,[MYYW@8pbBgh*@u6B@dTbdJ`8c)ff>(_<XS'2ob7faJUMeeQt`$_rRKbnZXtcT@5-[7@e+%.KD@bB!ic&S7!E["KYlcW5tUUQfQBaJFRaG8:j3RD5NI)[.n;b<ksY1)bQRE@RZNd,Y/M/&2'tu)JAAPQnK8Jj&%SD=)2Ntb9lM]%n!*h)p@[(p`gEE21"k8o/oh+W343Xr)]dUR1_uUBo/QXHfng,6B[f$NG,mG#a(JZ0q86;VCU#.GJi4_'KK$cAZk8GBJ8^q9Js5,t%5k!CYGs*,OdZKSO5HCi%[UDOZk.U,)2qTOmCs2te@N"?>+#^o97cfYHP%D?uYu]<n4^FFq/bTcLJ`1i0+%Ur4>/PPpf-%+"6II%2%*H:I,Rj!,2YoX?4%"m41)IEdD#MjJ@9N]d4;\n_D"_9PgJ]/_Im2H>PB?/7\`_<rfd'H*O4oTuKeon7?Ajbm#'/gC)[)iCSZiH.L%"O!"(/*`6>2J!_"hqLcpHu\lH&CV+J9Kj$g"#<0mB7",r)k0W6>9U?.J&E3.%g^Mu9A!<]e@J`b8OQSuYbtl,NQkTqh\h`>R1+Dm%C:0)]J2d.P(^gUYl"5B^`Q#8PLKJ`sYHk"_?edd3S?61FL3+)JI!9EZ#=\KX['@_`Hq;=db.Q%Lj%;3M*gl5\%qKJFYi>!8Y\Vhe%^qEFJ1GirX=S./6d)BTp1`@#YoWnQrN!TK+Yps1eX"045R\Z&j:1e+7beki285Hpg:HnpQ@,(&)Z't0DJWd&][*dRpL2mDOekMEb%mVrN,^jfP3V6k8eZ:EiU"b80E26s)4XiF<;k$t!aTY`L[+[3k3A-,`Pjp/!@-:*QF"(eoFlN!_cQ=9ui1<?k^4!JEpjKo$tRdFWn%>*b5N^`ui`SFe-lZJ$\'APX+iO*JaG,f%,#m0a+'_+,1P^'E+sitL/^'XL3i/S#si21$$QA)X8:<ML'70m%?E%aG<hJ8GK\i$E6Z%iFC6A6sO9r5Y$Xh6&q#]0EmUs`JRhj^LD;b[X7!`d2\A'.Sjls0HO!t_(40^Z<DFVR08S/=a^ci3U4A`mYadJfoA24,"?A&OI]oR%KF!I#f[jiXb2sNnI;V-,cI1hUAR=Y>(7<E13NRdmU%68<A<5V[_2OQ8X<G0<=ElIJd0M>B%E?%%nI^;ScU34)gF0:#C\)6'31TAa%[aOSWICg2OfiK>BaaH,Hf)oNi(sf_11HV]jQ:;m_LQf9j5$fY^$U!9J\MYZ!;F)l$9V4@JWS#1.Qs-k[Fp2P_R!.PufGMIB@,<,D%@A;Rh5"]MXj2nZDZi)gGeILe2dBEpr`bllGCWNTrY^rne'CjSLi[Jj'i1JPt#Coj6:dr;'W=GCL$gih0($lM'aTiOtRa\kN(QB74%41]!hG^5o#JTVO!<+(gMWl+="gGHgb'3n6*d6iS:H.4X>/mGG,b?!Mf&%d2"4ScVi:Bq[pZ/o_mo<VBQBHIh(K+YFVk@1>*BVHqY%*AfdRAMln&RY*RiM;9j.r7:[IZ=BB=BWo_6Xk,XuR&[m=A&I<:"(Hp@[[#4LD0B5S+*S7V(8&XV=h[&ORfK<^9=&E^&`lN.m.P:#%$=iS!b4L(#<tsVt3]INs\.Ni@^(2PZI1[eJ+p>;-Kr3QGgBU-6Pr#];-=>IX1GNVd!A]#i&<77@L>'+pbtD%`[*32CVPYNBVLW'R%O2jP&'p5F1;[DbaPhJhF1d-_-)_g'R)d4fDB8f#g[2ReT**Kc/K7K[lRQ:5YU\-g5$Vo@"[ZVE,GoQ]C;]H5/aL^^u'&$rGoO=^h%ABKR$VMc%c5)u\"BX+N<L&q2*NhaL@KXg.f=PmM/BKdJrB(=$+!"9l*X*&uVjVTZ':42eFL`q@YHq_oF1V/U1hSm767A<4,jFY^q%_Pc.`\-O&(Ca8O0AbE!;d*+,n&6VpH=FLCppk?aFaiD5-gq[bRCNQWB@%&cao<[@1%%qa(5'?;YR2%)m'jS'$#eXssYl\V1^d20d%g$AW./?o<jQKZfNd!):"pXq\n01Q5D<%)6g2#=k;kpS##00W]n3H(,3>jM2./gK2>-Qb+nO!1!*jYP1k!pU^8&bW4qK[:t!?tX#p%gL@m3ojPFt40:]sE_kA]Zu,SSkf,Y9[Sa)KHeZd%J1a2i(Q2LQH!g:'iN2Ep/8qura)EiuH*FXmC1'aR?h(t@*?6'#5\h^>)3'41%@u*V?ds$/k5_5%p53!N<!SjQ:)oo>o=,@`c5N"oh9IR>eIh*GW,XPKQCe.`(6_*M5BhCR^4CHgDbK0MCTJtn<o.5t[R31tAde\Vi%!s6(g'j"kYX\%Y*G\^j-9XeBki7"d3,E%(+H;5Bj[G"*/kC[7H_2YC6&)`Ndb;5)c1lKZb6Wo9'2$810Z8<X)C3(ZM^\TVpa:k)J%$.c>)Z[G#?6Q_%qs4T2\MeUUc1`pk]NLRn%Y[f0,An+q)A&9J$7r,?JkYh^Og^'o/22d`QX"DuKjYDa7'EnIU#,)8CgQmY/_?QK5%PUjD@O+?MW895Y=pgVWDe9//s\_)TI\-g(\ps*Q;$!'rb0WL1"o?!Rf@KO"tbmB$O-TB6hNWL!#OFB(Weh_5V'7INHjJNF.T$(f,%Al;sK/C:dtLFddsDRk+uhDHo[ZuA.4!HVZ\#2d_iFue7'!<Y[m:>WuV_r$JaCkh7s?]k&$Zii0)WT0JGDLXt,.l"iNV`8dfnmbLE%/@>(:p9ba!q@+@$2+tslT>tBqP#'L\EStMb?8XdP:pF8?L(U^P5&!:;*3?(M2$&P!K+cFDf(?2(`f/u`2'.OV,/EV4]Y1)\n`%rY%O0BPLV>C5"G:#G8gh;$-+,KrYJ0CZkN2jr)14n!m#3t!oDQb<Y4^P8P7=u2gkcRocAPF2.H49gt^CRY+1[7kFe$JV^4'5(nN.\t,%]D-gCgCg<jdkHn"%tin-229Lt';:TBLfML;\:b%Z7[=-M\jcd*Fj7`g:E$pBT%8TCa((d4a#VLa?l>.QR/kF=i5'-PDuunVCCi>Z%PIo[:Y*1jK!>c`_hZd9M%LQWYKTQOjQ^\1UDZ_6g>]3S)TF4mH)D/g3fp4H;M-n^I]<[0$VTTj?6Fd"[^.?d>no_)CD`G+.6^7IC%Sm"`cp_7>X)Ec>NlLCRsJL<?B<GlOkWZI&]JrDq&KSa6gb?10_:$s;18pLu5CXUFjXQG)O2?5PS^;Y\gl>*?s-8t:k*e4]&T.3KZ%oHS!iEkN_n7TjY4L&dDk%D_uK+s%@@&kGurO_Q4Q)_PKC1>8gi4g)!;+ssd*DFPoM.q_C"[&6j(i$(^th,`]pR`id?SABk&C.<"R%!l,R"'<.Q(B0_If^q*+3)bA5>gosTt2"6tQ3?]LPH6V_#<5XsC>,H`V3]61QYi2tGflce^\?NiqDaB(S?Y,O!,HO@rm-/+rgE%>X%<16j<N!Z;p,X07$gai7qZD\inOri]u6DlN[bdN`HC'm5-lsM6L>uPh$LQe=-<4S;sS'4#j:`QGj9JMnpi99u)d>dL[P'/40+l>jE%!HhAU/[Yeu\AC!t1,Ce*0K\i0+SWE!jY0u^B-<&@eT]3/+Uq5"5E2(UM'Z4VO)UsSe1"oFlErb[n;s-l_eTQL-&!O+Up**['<_*!%bEDd"bG&c/Bmkb[kpYaiFm!/@ernWc_%Dm-,H]679J>3feWI7r5e$HlQ02=iCgk)?-Uk?7Lj)%ad#lt8/IZJ0]HdIaK02U'*K*C1%1me??2R\-19N34IB'>\>_$fe(9k5M(3pf?1",6lV3U2H45"LmeZ=4$DooS>Z,D/5a-DnFlm:"[,YQ0]("TZjmHqja6nY?7[UPptZ%ol1)LT^qlnaX*UAABt<!UrDaMmY0pV;/43bOl]^XD?OEpOs]<bONM913f)9h%8B<`qS'2deYM0$>+G`4_SBj/Ym<`97&:mRRaML=%9B&%Sd?/9sA8=Zu:VieX<?D@US!#(oFV6q[QRq^<pEm1NA"H6R##5.)ViE^DFFnTS7q\t)TGG$Y!__HRH^L(K':7:7'j:<T-noRq%W'lJaR,md'V;h%<JE=R_"QlNN>Y9RXQ'L#4e?]59&#.T>NFG6a.k(q[5tRrd*0SN;=l3tU#+6-Y_iQYr06q8'UB8uW#KoBUB*'pk%+QLt<.Q-%#TF;21A:64Qj`t=7_%o.QFOuV]5Ri'5l='uh:9ApODHcN`:22a;L9Zm9Us)p$&CMU0J06-gDgfJi`dFbLA<!+(!jr@*%LmhL6o"ae^HXDoph/N]-aT]Z?*6Ni#4\7X*dpu(F'*oH^"\J\An@2["@"IO*W&Z!&<_bfUoaYA19eVMRA0`UJA7<SCF#%tgI12q/%%g]s'E7eqkV1D:;e`a+XLPQ"H;C-6P>L42.<n*G'J2?/?$&(&2a%:F&@pqhsFhJ#SGCW\E@S]-2F]?FsR;9#T2249J3X=4A\Qk?%%9">fn$+Z.[_nI`*QK1A%,?P=A1glFY*jPc$75ghD%uSH#KOBrX@UokgpXd9Jm)5KLkXsjWj-%S#QW.\D1]Y*=LJ/VhB5qVm5Y?g]%QFd)sRpDT8bBc_^IJ5Qr6sddY-$bpc+_q1crkST$V?.9Y&uHT.1dGNHdX@E/1A2^V)a\tYXZLgMe99op;P_/9VNt4,"d1B6?*kb9%)`aVQ+<'Tg\2bIe8'-2j'^`BY<.HJ!pBE7h;cdcqp#_J[N279o->IH*^5]?MadWCOR^t-"SHE[:2-^^oC`Q?#jAl&:i^1`kl_2.q%8II"Ul+e\*-qs21lGA.r_1JNS\o//YKEPj*)@OAC<j`sA$;<4$jn+99_MgrqWhEP3X_H9Cn8?=hi(Jscp%?+h"IogOn0AfI;oQ"c%YDqFl:Q/B)@GF`7==b%9<.K:j'#u,k!2r"'X2\dRNk?=1@"@_oXPNu`X`fqFKi$:@b6Pr%JY*5!PC,m9aWM"XW,[fZ3ImKt&c@3e%U^"t3F[PK<)0!s12^qN&*Q&!>6to<1Q]jIqhr.e,UEpuOD.QKi(d?#D.[8EQ-*k16fYpIcGtU%f/M@@6(h'RQ]g,1blUc,cO>&\s%KBtC[)jOGX->K)J+uhj(fMJk*HSERD#9B-r(o;N\b\b.Rl:Ou1D`gSk&eM>QN1:&7)4:+-)P>f;+u.0AK2&><'M1AC)K\edA5*N_%M,'_P8iBTsWl\t53NoUkAg-t@fXR.ZQ_VrjUkoTFPH!RUJV&DlVNW1U`!R9S!m#%7cWatW2O#(`:oFD>@2[$bf(B:pWc=+#9Xo5,%=9_@85(F+K#P]tf[h+9l:(lMNZp!Z<A]eQG&TGXiB*\mVLI?Z_8QeXCIqel'\KJc*8T,WK\!:kc,`&lVNZgucBaj>O6puP^R7Q(p%WD6Kp3[T&H?#cj02[[m/N+rEPHB"52=,JXSM^%*A@dPX[cj.@@2.b-]PNUb^#uYYTFVm$u7FgMh;`;B9+Z3`IcD7BC+SJBt*s'-b%E<9\oUY9LcF2pROP'%mG8;97l(lM3[TN2`"i*);ob8UI#CBDk'P)tM'=@S[tK1nijJl)(OLaa0EE,$hZlq**=BhjC,K7^9caKI?S%?,3';#GR_.7Ei#3(60(Md4(e@c?Qj%j:>;@Tb%",9OYESY[3(^Lk5ho>;h$hgk];`Bhu_i5_#4+#G*G^Oc9QJhNK,=9?PdW8]r.V%W)pT%(8B"fC#K'M./CT*$1\'^)i<m,YTW#3:`q-d"Wm(78g1+RA;a,l*WT;.Xc:.P,R3(4OFg<c;OT8&=42sO+.3JSeoLDuCh\GX%'OZHM78aoCHm"spUe6^0/(Is;!;GT=);Cu_$4n[W$1e1VijOE-Z$**#\Kp+@[!sf).>!ine7ibSZCFuh_2ntaB("V#k-P8;3,5'n%f9*Y+A/Rr$QGeDOHl/P\dml.,Z0&QbA9qY<Ta6^"F4!o7#C4LslN1Wp5Ti&9eZS="[aP=8ehoEW?jCGe1n_6GLqe`N+a_pp#+m_N%6eTB[kt!S9.nQGS+KmlEq%iaO>#hhY_`cOHR22ZG=bE4fFd^_3Sn]`l!=PeQ$%fH_-K)K]&G8$",uV;%^&s81_>R@H,R[gB8NcPi%b=$YUH]_iq%-/`,<NZ,aoPZ]J8EuE#4p<t2Ot<JXZNIL8rgs=VoUZ9*bIMFSAd,qK2IV3V9T-non3B@8#`,3S_Srq$7P15;5G=$R%'d5H#obaN\,f65L!fB73!1(-XjP-]<':Ac0Dn6uH!`"JtiQ6U,M%ncC1.8<(SSS;ikn3kt#d0:oDFXD%8Hf9[LoO4p2:rT`$sHM7%M"[s)?eUac)2A[,5>s(<Un32.XcI\!/WU'dca&V)"js&"Z7]_,;*M1#lCF[oIB%(ma^J#:J7Xg&kY9Jj\.QPP$72$6;LI1<&YQQN%ct,T<LIO/dQ%:24p`sD%e5eYU(cgN>&LKNkQ9l#4`*4Xf$6]g[LYuGs"HkofcB1)]9VmTW*E(!Mm"$\43U!q[WfV3OX-;>p]$LE[%KU[Tp;9Mg4Ea&DSOr^CuE2l`h""k(f\LhB+##I7BiL)1V]FFqo/o%Z6pa$"_E&e5KM!&;1P<P]53(5TFW_r`tAPB3,"B3`@$[j/^%1ICHEfaN"c*Di1L4I7>H\hQe&bP_HlM*u<%=U:Tq"%,&u"9Pr68^c+Jjr.?\IMFse-k^VB-\@@-j+s9d5@!PU$GV@gW1YcM)T!7T%_i2bkkL"h;63)Fs#Tb,3%T'Gro)pVR-S\9.W.tW4%5m@=W7iuJL4Y>qQD:N_9<A[l504nIL5FE&9St8q0r;%5ScVbSUGsk-+C-<6%[387qX!?;)b=P##(=Pgg?"gX:'7dIn;b!KrWO;n!C*_2!<0&<pZI%="^W\qa<F<m=T`+15DcH2i/Q5A?]cH)*CZ%GEqFhg'+\+%!%A.-c([FZP2*3aLq+C2bh4IHUuk[a15lIu<27dV(+hQe9s/RZ_1XES15pTkUiXKX^,360`t<5;>%T(.SIP?Q&f!Oh,5$q*M>R"4pt%!$WM.KMfO#jcJ@k4F&EeDJj!'C-2i'LKl'?Z7MOm$0np%6U<ehIn(8_L\kRQWpnAAp5nPb.Kb5eQZf&tM`gS[K,rKPE(GpsHOh)c%F>+jQ%L.aN2=@GCQ4P&`--N\uKtp$=>1CYXQa3q80lAMW6p-6;e<N[#A:fdn':8l"5pA)*IKp.uL'6X%H)_@'4'Co*W^4MQ^5<UO%bFFSJ>E#(>D"&%USUjq=n2"QEOs!8T.aG=Eh+(okh^";=#(^_HY>grtU:3#agJg'S,b7iqX<S$0dSIuB#'`<U6L<V9ge*Jt9,12Y%>GQX3aESRu&Nk:f,.4_,<GRH%EFp'bW]YlCRU1o;Jl<4-XS*-N(ScEfTKJMk/*c/kV<$oo*+h3U-FtnRRcn3I,6f8X4/A1L\iL.B%,huLBq]oH^aBqPW5b=X1QdH6D-`;9pe..WA@4L%G)WHU8]BhVL)B&<JCOi.KQFJO^$:-!k[=0,V_j4t78Ll'sNkE>#MlQ0[kLR"#%WW:.beW`H$jbOes*V1#6*I>=u[apId,-q',+u#'9n5U($##S<^OB^e<^oTKrdU!_2EJfY7@Zn)#e,nl@UJ0nVi:\"nOfKrJ$g?!@%5i>/R^nq;uA=48DV9/uR?tKnH#:LZds2!cr!O6dWU6&kAdLL\4bPpec7BKuACH:m;UfsL!`gDFOQZH@9:Y^dXB`3VO"=@NP)@sW!%!77_*Cb(Z5.,)U[O\UcDi%e'HM,.m.[4.-rTTu^A/6M1tW0[VpLGeXN,&&rGp%YsJ$,M7Fab62BM,6\iI5'@]$LsS]5e''@m4-R]%^b%.7"X%e7CG(7rd)k/qRDGZ:BA6OK-8`+g[pVl6f]oG3PYE^R;a]@a4]]H%.JFp[%/mf)I@iVU<8,9@`^24A>'cLZWhIcT#[OW&%f1PVC&hXg@aat*k6k6;m%.ZFS*-`.FggmBp')Q4=6d^j.:+X(#_7"&@Qko73[Gdk!M#eS\Z;K+'c4A%16MbE^#!7><$l"lu6:^aD%oPB8q]9]/L[?F3LXB['o0L-Ye>$03Y,NY*AJcRC:!u,i+D]kYuf)Y@LR;W;W#TY4TE^36Ic`LW<Zj3R%Xr@+68[h8^&(LZppV9@!%np27V'#[<pip5!nYa#;561R:p;@H"d):fTrW@?Bd?l":L#3I?Yb)o<lG(R%<p_Xir>-ai;#W6q<,rF!OVM(Hl;O5*@DF]e$8@j>2%9lhZ=7ZuC;n;*aA5S$M$>UBdT.Y''Id[Z[*l7H:m`3g%C]Z<-:blmd7^FVJJ,:I[WJ9Bqujj6pJ>"s9!&foD-^ra`9PJATZ*]!^C%8V.F$8T'[B+U<1`p'UNc!+2cRPCp!'^;<\NrAKG?Ust$)gQSV$8Hi&u>%X"&Bu9u<=EqlC@7plXcDG`ae_l6Q[#QV_5^YUa2@%ho%[5P^A!rP4pQ<G-Dg1@=.,U0dXXIP)2C))`h[E3P#20D41BQm"f(hs7\SH()h"nU<B[PB'=18&C?G]k[gSpahU9*b_>e1CW-MD00r%Z:CmOn8b9(Ojpa1^"66/6u<gP7eke6TLr,J9g`$Y+i%UuVY(]e)!c5D/HAJ_EPO(X*K!@Tg-@Sn@FPtKV>pdk=\TS/ItHGm%"\bf%/\iqMSlX1s)]B.i"GYFu9i)-!E`U"h*!7#_l9sH#O@b"MME2^gleQ)%3!!3B59-=!ciOs8m3#n0Dj2,)Z*4WdLngbGS1B<oE!d__%GZj*]!8ZC\R\Q!M[<doH<BtOYr.qFiQ]hSTGPK)HiHbctM;q>W2\hu^g#Z2p^dgt!]/F2SCW/aMYfJP^W#-X*Q/%Pak"0pc+^p4t%j>JcOJ1rn70sMDt%T]#sVRA%Z@A&K!@Kumg(l0jI)^m)DJj3&"(;bA\&T/aW&TRoK_0lMgUlFJXQm*tdQq';Y4e.?>!t^)'\\uL@%JHV79>8lujMqW_s7mb1/d3E3gAIdf!64'C#C:T9J<.eA4,_8KOK!ctO<U^S`\_)ab8eU"_a@Dd=ToC<G6n,;2W>m9'"";]k6ZbK*%BO%k=aM*W(kb27E<%_kJ';TAqX?s,D-PAP+C8;>17+,O0DkRG)rTp<o>#QDF=eZf>GtXgdNudKaKg<6llC:M1;iAoTPrC]JQNSB6%SdOs\&Ze5n=I9El)X[k@59fd-<'l+l%t:hhZGsVHb/q5<SG`'`%+BmAkG8G(<T9g/'HVh\PFX0LW>u:o32$u1hC*ChTmQt^Km6)C%(3`0],_V`d-*<<0_[)IWnlU!q.psVnob/J-2+6Uj+c7Q*R3NP!8PG87m+=Wpf0`spF,>cZgXbYLk#$VDII$bjak)org)Pq*OoM@G%e#d.PeRUSrl/<N]OeWEk*J7:,D<"Mm@<H\pAt=<b5A?Z\[bEN.8Iab#6un&E-5FiK^`*SS%BFjo8q>hH/eAMuYiH<3W&NWqkOcJ`%Yo:GoK&0<GQ:X?,0Q-@a-k4Tq:u)OPfGH1`/BM]9]RgPt#r=hR0jJ-,W[YmU+R]HYGib/9nqOPej=.!3d,Es6dH<gm5q;='J=;Ub%K>G>jVPfC`p_`f`,UG@Q\8"Nr9O^#X*Wa]/D3XsRN)pBlp8gq=8KDQ'H4km]@SlMp+\5F4[1<q4-kQ,r$+L<j#V#Y/PtWHkcsZur%@)1!^mS3_AZ3ui&"B;]%c^n&Ifc,Sf!\>3/=<uZt3OJ@K3RJc'T`C$E/t#Dd.=j,-ib<+ZCG#5mp@pu8\a&lP9/Q`^4&R=_NY_M%%P(B"ZlC?cj?8:&"C:#/UR&D879LJpd8ok9&M(M2[9+od*"\Xl.%1DA05QL;$"U]WbEZ<)TJ0J.!3)o)V$"d)t'#YbM)<h>Zm<uo3%d45P0[qlR5AB(X>#fSWjfkNC+roTjWePiEuQVIQNWLl#]S^_,c2Nh;Hd%N-Y_l*jn:M,/i%aR2]JOpagbu@:k!Cd:O)YdJ!dRb3*%8Rs!dS48E?Yd[0Ve;?g327L*8*oJ%MY8Y1b_O.qDmf_$Rfncl,JF=b9$s#Y#KE_siicH1$LCX)?;Lf@^lD]EeG0g^(rD;(6Q9EZr%+mVZ#.$K0LNdfrFo@AGT'S15ri,Ct#%0XsIbRCp"b2DA%N`)<OiC7KlGfKeu=A:>Ele8m7riig]Lc7#NK.@q!F=Yan$)YAh'6L(L%#TcNZZK.)[UWE;UT&Z>lPPg^kENiLFKNp5498=>%C!M%dTua3S<Kl_k<s<j2M'R3]&"nNC6@B=[1Vf?A@>719JLo>VB.u@K,*`Mb%M'/X"m(lU)j#rNcWKpnir^10?ZU/\GKSt2qmtYj\qASNb8l4CJM,FE]3RGS\9Hps>ONcHa38--%Mo"G#ZrAJL,aD7GJdjdb9ZIch%m#3HRE-s&&l8"\qn=M-[Pk67'Vf&n_T/H4Hl=uL4QZ2>&B`K>'>D&B?Z!ag;[j4bW#<>`NO05Y%oe9cA0Np/`#6pE[YH/_iBf1-*%"?`np>@;V"&7kp>!m+AQ#o$.5ANO;*UHF?+b3h["NI4n)G-RhJEW?/+*sU$se%5iIVdr45X\T'Uoa+S_9Ba0BBJn$\cOXcr,R_6P%WL^1"m'O4$Chduo1F3.+UWOl_TFTI]6.a3]4JXRE]c2^c>9X87["Ds/+Cg=?MfiE8aFYR3mg(m!7i#+?or$uh@15N>=ubsH5jm;W%4>)h\3%ff)L:T/Y^iI8Me]j1N8r&B0nlfNRiAl3%(o/ZR+NT(O4;"1%aO>b'-@INT!rudOb2/%3[^8-X2)ZG<TiGX1(E<G\-oSJ!%V3K*\p;MpYV;/Ie.$SOg@6'L/Uuf[)oRJ/W<tC#6bmY9(YlJ'n5Ljd2lq#k\"X>-;CQKPB>!ss=:n[WK4U^lb-uk9;LFH&f!'WV)%+/EU=n,_VG8W%ck4H\+@Eb$Up\^U*jLVhg_.?r!nL]gr1Z7#!p$k@u-DQT`DfTXL4pH57;J&T:D92QZ`A'KF:g!V-"BV39#<,ut=%1hoU7CLeV)^*\_,Jf/*<C"Y:0'GrSAd.6sp3arB,b1csAEA.rqog%1>[ELpn>s/HSH&3im*=WSZPY"H1b#9/BP5-Kc"':'&BJ"it%atJFK;$I\6;j::DMq\nlPU_I;\<[?J2O%s7]d5S>>DoI3lP['#pu\MQQYQ`<66]ei?&(:HWLK)*BHcr"'14nh6`$q[P!idc0\-"+%Z/ggig<!9XE:*e[RaXOAJK2^rY\[%(7JiR2a%`U=ff'+#^Tf:;@WG\G^*<9sJSTiEW.lmZA$D8F3e137JA-SIGOQk9"Ck(=YpYA6%VEluW#W%#o"u*>q`rYTSOZm0t:W/(r\,gqBegUi3;@+>W$lO3m04TYt=,Q0OhF7RN/WgdgnP%JcYbRVK\NM*^i/QiO4n2(d&I])S%TTdDA_g9DC1kjV^#8ocFR<6afJE$?aEuQQ2M0Ta`=4;&H?pA5NBs^Hfglp\,G+9mJ^6eQc#juUSSs`9t23_-2+tSi&.HTDs+@)n/%Qabh53>[PD83:OJC13;e?B,cnLW3R/%M2%5Vc9=_d!QtLWWC/p@2;9\,tEu+Lm9juE$5G/9%V6RSN,4p5k^r%A^'jMCbi@C5]VOJ%/m2?Ul5)Ge=XjPJ/$RDmI"XRYl7M#Lojl9WN_Nde+tr;CV?WR5Nai*f+]UE^,$q(g_KBHu\IIU`JY"+@ePb>K;#rR('h$PnF]*;G%GX$aa0nB5IX?g7VAV%q31BoPa7\ZYs9??<$G:Wgn8<k4h*(aHO7"Q&]ABFuRgRAh&Q2Ug1&H;rPOHr5%Nc8\;pI:1-'a%UC@\]\X%$5qhq"q$ar4iHq[IUp<9,k%^@$&'ap4E[bLI7OhGG"peXoHMQ]gu_S/C9g+ef>k6PU_X;7J2#C)'D2i4esV<BgB$[NQktXSY\1d'%[OUI5`7cO0$0Iqo+LtsO?HDl)R9>=ba/U:l*EX*Jg=lTlCKnsg#40T3Q)9"meh_X-47WDVb!tI<aU2d=)&`u3)G]>X%bV!k.*&(q%g!Y<MIKbQ)?r6q9:hi*pRJi^\+u1TYj`Y`AlI<\+*X;\lARqRV)K;?0?C!`g@!gjo3u@>Z\tIjNW<HoJ(q)sa55F!4%0Np;Y$f/X%Ke+-?(jtTQ=]m"=pBJ(MWdoiGL[u"'*f4`81'2#\pEUB6$%T3K84827hanF^*AVc-Zm0d&^S8M9NZ>"SRDYLHohe=a;V(qi:G"1b%-j`r8XBn:l!sOhiGou)Z"UbdW8:_Mc`Z1:CI,BnJN1=FHF'ZVu%_/amJ4`t4Y,3n51fnN`E^V3g!2bBp<(a^q!Hc>\QC1"s(uX6Q%lC[)m!sMq2iPA8lF"Zp\Fl]tLldW&$$V3*Zi7,/%pOMQ8=s/W[m6D3t3\G\*ZE->?e@.n6)_ut9p!VYqZ8?T^[$b?116S(/\nW?.%N4]JaJ$9<5guernRNm"-&VeV_jP'\0ET3oU6[oYdij*AZ=H=+R8RX=VRbenl'I`j@>`_g_jjstVR7gE<%Nn-!#jYe4bn)?(je;PK%L4mX`)&5U.;dCpbR<UtYKlTM3XX_`LYl<]\]5j&pR$o9\5\Wdl*c.37Y6.e+[pWBijUYu/=VFL?"p/b8?='I^dn;$O`_7%9?#V1s%BMDP<c5[*`,e_(E.9Q]t&'(ioCjCG3I[rq0_ENuJ8caO&h`T%")8K@+l_gZDJ7_LYGc))QZ#$7Xa9I9>K1[E9"tG.1[)KCrEI7dQ%JfY2l,l*oqCDS)%-h9d3M\q_Ug6)='&ld7B)GpUb-G^nXeKPAE;@/W)I$4k+NjMJC):mm3#L\3S#p>ti9'%4`&XcU\i)P_dTh?6/%K;!*sjm-Uc;PT';Q<`aSIL_%D.,W;%6N@/'$8lf/#Ha<Yg0@PI_2s5P'(j7S2EAp`1hDn-J>^c:3J3K_MS'_1:S:9.0=E"!eT,39%'O[51):oK"l\6r<J/HgL)?-j@)S'<(Ffm?2)tN.l0:0;Q6(,fDOUVf$Taq>W;N?^!["L)DHkYj%XopDWAnuomKLWR^gXVNj'ts^)%NkL2"QK-npGb@1G@LpPhV"0,uIG*^]'MnqdOaj:"N[FgO4QY(;QCng#Z>M/&ef`sK+"4ZmYVUo4"2^n#%#Lh`3.%Vmbqjo+Y6VTB%FS<R1-H/U172KO_O=[5:aD&Th-onqnX:+p12K:'_?V\d[r,r"S#6r.1#=lA*d6f:5p#J/Jllqf?YR+1q1eG6`lXYXgK$7";Nbk_+%1?[787&3VDX4H2?'*62&$qsU8o<e^#WKo;YWBfB)<q>j$Y7%[(C2nL#N+f3J<lQC"G`W'LXDr3pNl8>9Em#Gs3[;fI8;9CE*,I%t%U3oj?&:k2"M9IL]_JiC+8do-]IkKl8g>b[nqUPXAC$(@)%0_kLb,,7O;'O./?p\XliF*"DQC/&QY`Gf(l3f$]G+<9/dK4MSj`T2Z%"[cb)S;WTi$`BGYfg.K)XX3<Pa:o*:*Vr+f2,,3M8<,YSWD-;-p=CQAAMC>47>@\hA_1>,C5N*>HIVO!<rkXF\12$$)@&e"=\%lp%OH^uHrM2([NJVV)^cFb!a<4!^J_((,2[`bEGVDi^>QGg2BupBB3W<AHTPI&:E-rX1ZBG6BKT,7heY2JZXC:h(W?'KQ'%J!OJL^_P%!/+7n4a:^4A5I$>X&OsS-;%QL#6l-+knD-_Y$b">j[28d[Y6HFe8;"Ti.dB\@Y*%\]K"Qe#dq)\L<(rsO^]FYmRY7V^kTFHBXfCh%s((F\DQ;4u"1nmC(-'M^e^KZ!6EdZXA_Rm4\+$FiBL(A&:%BK=#E\FMc@kP1USU;'A1NS>*`fZ1TJ)Iedt'eKBQ[#Y6m#Sq"0aRb%-Bo0t$5sWL"JD`N0XX2a@q;Wkq4^ZZGX_mYRKi=F&o(KW4qhfmA.sJq*+8%%TG>V`SiDA?EfM@]49]t3Y$ancV`lJj8dk2a-@.su%+Rj'9)CL+@UF^AP1JJckX,2rm,gA(X++^"[-5IF??m>6Ik"7MP?\!#knpssN.4+5s661Y:<K(`c/j`U%GR1cV2a<I/lImAo06^29%>)kV8XDLlk3`6Qh6!JnN@(9?dTRM2X-a]^spqA3QU;1+sL>6M1=j1Q%Z(Q5<1Y%o;6C$Za6_i_YJCU)1--\H)-'],3MV&_XnD4n\%V8LG(7mIMK"4F9>&Y9F*0Eh+aJIi%d<!3q+>_OIScSVjk[H<<6bPWTr,7gX>8cTI7d\L_Q0N6iCSA5JJUI<dJ#C_]74LVfN%$1b?%Nhb)3\ja.3K9I0!,:GCeXQBFsLQ<[*0C#YdFTf-'63Wt>V_kjf'_iu?'Nb]7CWKB4"Q'6<K:np3[Wd<T%$3.58!#q;J:&N-WO#RI%;jo!W=.5l'(70qIEj6q0G;+`1(5UZGB3(3I&dW0g\1ZkD[2LUQn2&U6dt+j_ar,>e1_!G1c0DsAGE;f;C6'[Z4%Vd@PL?B"S/DB2%=^@,c>-L_3<=bpJ"\.JSn#RjWU+20KWIhi71Ra[NX$LNOS<QQm0-':];,XX&YI;-'NsYa<*r99M.3W5Tg^_i4XEu6aM.(QMmX$BH%[O5sLS,b%V5ski3#M[?ZKft,T*T\=^$+CT7&"OCUCrk`!B9I_m:DI-kOqq*\Ut2?+#j'aMY`,tt5kSYm!JjbmFp[OiWZ%jOf(tR<%PQhmD_%8(7f^G[9"c&hK"P:bnP']\2:^#u$QbYNkaK$u%$jblB+KHk<USu8"FKT16Jd:69Oq%b)9@--9^_hT<"+nKXU=)mc/Iu55%q_g]QfT?P*TU\_%Z%(,*JC[?SAmP0n'.7@]U<9%+3mB'u[P39AZG4It+D%fH[Y)Uj`LJ:0;,@D4"6BnKR6os7O%(g"C#EK@bYHr`%QnbVK,tC9d%"jLuQ=pB"D4W_D*YpVL]$(q3.0G",Q.)m9m4#@CmbE<r:GN8IS"uO-P0Yue_ZFeFM%,s_@'B`k7I3-&*_(\uB\],b%2F+J0o<>s8N;(uI/L.jF^5ZDu;Fk!9n^s.d>V-emF#8\(LPEI4Th`!?(C^@@(]g(3MccFabJD1;*J$kIU4k>3e2'^(6A=!Cj3rt:%._&/07Ob$bMhI6"FDLr5;J)]a"GQbOEl.ujf&V\)0^IiXCJAeld#B_,^h^!k!Q%HPVtQ+HNe6b,4dLCKaZ=qVHsp%`5_)cR$.BLQ%VEc&'M%U1H@\oJ3Xepf61^JGs=iuMh!b'WQPT$(dVK`Cb]P:)5c"lbZc]pX4d1%j<-Ku@mLfu-)D+P!E+j_MQU5XW]#un#M/$LD1%#o45b7DKbgrW1.NqW&\E1e4\T&=@LYi@u\(]8*/*,0gjq0@+0-bP%8!&:e0r>#PY"f+9-D@RH<a<#$[FI0]3a=>+]l+@IHB#-X_`%LE">-PPZ7U<@rZkPo0s6D(koR[hpMsar/)lDP8'rSKZ;*rWBMF)@$SF!b<tg16Z;([ueJD_)6d.8(^:CBE2;:O\H%ORjH70jRrko%@CCEEXWrm%_aUH"7:_N=aD&.h4t6G`cmTX&)XKjS];KbY`%Ss5,l:rK.8gLFrIHC/M@dC@i7`gaC`r]BJi9pPrNGPnB27b@6^M&`%nt4$a,N_;.&q#IV]e=cb3>[Re9Z_065Q[uf[ka5aXYNdaa9K=N#$_8OOp3ediuhVl!oqP.K@s-X<RMjC[$>O(r.`?XXWpE24HO#-%!=RXTj@Lpq+c"X1.T42K(,?-[>+;TE#tUKE"ph>cK5;(b[VWI6WpYV!VGUA>7-"hs.-TiH*,l@FXG'8AXrKom+R:J#!Rjc$[W=#C%nK_/%b'o^Ojgf-U_3^G;V!WaKm3#AjKfXd/SoL"tHrZ0GUGJJE=8Cd9F_6\R)cdQ`#(TL+#dW[ARa<st&LO.g8TZ2dHbrtg]O&%5%Pt]6mM:c#fI698CYNdHe/P%hB7M'o40T`=fkHf_ZXsW&VKAS#"Ui6lqf]#Hd,7?\75lPFIO&SG7\449%NMMDP"J_"rbAmY.X-4H`%&'0;`0K$'lAXl%XM1MkTT^7iK7:ep7<&J]Q)e=:@[?t&H`Dgh*=U^^^=:#-$gge1'"_pG/St&SDM*(Vb*);hS0*WI!$eN./kq0.P%h+<H^QRWE4QioJ5"P@R,jXJ:bO@LV?7#F:MA^chi4`^N.;)Y*;<C\Ufo(:;Y;NCpBRGrbUbtBHTi)9^1^`7n@Zt*kh:6=eQ5bo"a%"Fm>)[m;K>m\1`_dq9d(V3g6fVTDOT?.T8@%B"B2?Qc?4*1Th.$4HH9;f&U-.'G'<7g?rbaZ5Tt2'<#2%N&n9WPM0o0dj8[0EImS%g'r0[!:;!%8Xm2Zc];`E17/&i)DtQ+Min8h/#fP";$c6*$o1`#T"4r;'f'/`,]CNlX0pBEJkl`n&_Wb9E]@bUicbqQKlTYY1#O$X%[e1oX.-[?e\NO8VY8k"eWqQWs@M?jcZIE,M)`J8EAWUu1'dt(`kjG-9A/g&i!KmnCH3[h;@+?kF][]DV6\l_ZRRZ-Pkf\Ue:]O`p%^,!Y]Y]#lli4s>k='&k)e"FF$l7.['N&3A&;^@i-,k(sT4!f/<L/La>*$K!TQ3J!H0Bn!lTI:biB`rVuaE`VK6^M<T)/5=rh1EX.%"]"gn9;8$2ao:ZO?7>o+M+S6U,W>o17Ro$JBj,b1+KS^@88Hul07=:B)\ot?BNX59W53`.(s3D6Qp&r#FeCbg+:Lei:uRKDFc'up%XbRsb.FM$_=L<WbWDY:%R$0BUO.(#7n_p>KD$=)O^pI#BaY2X7%HWZOCa43O5T[cuS8ilJeP^]s[8rm/-%!:U4Ocb)%`.,n-2CVc%O_-ik)N=uHK7pr#BpAW)&-uuB;k_nJ+K[4TFe3Z]!=Bl7Q<G@OSC"P%.g(00!7iCr8o&c!"`9tnhQ.P%,Is"?p>iMWjeEhW!hUrR%@9nTL@]1Xee)ZV5@b2g,_;^$i8mV)ncelojeg+XKB/kb0?cte:k*&^q1D[W,R9ZSAZ@c,#,ZPppeO"=*_8qRt\EFoq("H!<,PVE2%8[oBRmPpN!nrXq$P%-)UC>]qdoCU[%R)3Rp#ih_9AN<-08\G4"n'V4T&6HBQ-#.j2&Ue:RLp[]BdQPd1i$(Q-)OP96KL*del`Gp=%W0HM/(_=he!(Ydh8?V#_90!M:?4W-upJ$Af9^5Bu?mNF5!]U19r^#,,XC:ohZLalU+gm'$Jat77\E06BV;@B>RkWhEZIC'?#114Y%M5?Y7$AIcs7Q*..A_N@=L"kf;_FToeTTG,ZM3@RmPHmHZQQ0GDid2;\aQ4W9"aJ/'Q1hH9N"W1gQK4/FENu]V93Kos')@1d7udZt%j%1bTKO@T7*mA/3mmP0MCqs(59b+ZK-FEKr(;L_FFtEr_hA.5$=Zm502sM-c-Ml&COon=(oU4X&C0X;WG9\rk/FHj@7*B1W$cQ3+%_6K^%$LaFb]3;8gHaGOZRM&A!.-1CAabDB;i^p/CV#ghMmR_"d".cfhc[lY\B[&G[TR&t0WiQDoWsOl&5=#bhAi'f#,NT-887`0B%)en9Q(R\BpNfon=.Q4_K,ZGq&!b.H-(de`^fWN_4-@NB<Uo`\eaT>^rUtZD"CWc_]br3JK8j`QN@0\T$/1;W4)AR-DdbQ>LP2U=h%"F@>gm_f!d$=R7qb<ie_a@<L>G+'pQ7+kci36IK)&<bU"*%]1iehG1_*NA:;M!m4jm/!_XL4!(99qM[qLsN3i=$WAs)=8P;"Q4D6%]+[c\*(nc#"lj8]B!;dG*<7W!klaFM^qjaI8/eWSR[2E1UkBjM9N9o2]`s@FTfroI4:k+odj*:OmWe+3!7uPLa#W4<bVX:GRM"p^%4,m4fCQFXlm""Em'KqI3QF%/r"!4;gMCcQ/`"5MUP_RuhFt/aY`SVqRXHL!n3jI0^K;_ZmE4#*[80^AC&n=i#d.e7Fis=P[lR,=p%0;V]Rik-i_5pSg3@179:*H`/-bV?EZ-"2BNFt7]2Ji8]O!H]h0LG`e$%Ne&be`%:+F'lFh_55/mO>Pq/At#ZboKYSeaKFPkmaqYi%G>Gd]kS)P,#)5^,\1;N>ppUkjqI4+l-+\Y>PfU`49X8Ws<:Pn=T!&HTH.7p&)r@$D1EB-4FsI5#\17Q0?"$]ePsK!j`Q]&"?6,%M%#RsNe4GXHn,T(B#fniRH"=m`L5UncSZG=J3;G\K'A<!CR,`r*Ign',HJV8OTO!_OrOe`ApLZ]LL5,Z5WLMC,C6jm!Y'KEE/e-14(%_Ej/LZ0[/cAubs,"fZ3dHqKN=K&(,tP.IWU!AG#[<,`H-qLG:t!7_[:_C$Io!\QWt*H!(1P;4#4r=8%G=uK0;7r18ZSV12L2+n!d%V"!!i<5RLk!?H`q"c(\`OeNGT%aN'?UPN5MV)ZRhGqtnc:hZstr()c:VH?>SYhU]NF4m_s6@mZVP+@P.j<:`u)6=0Z[U-\CG'tY"%<J*;&>p8@)`31G;V,UcYca4T^]Go!I4=BTK<0[RfLTFX(*9;3485:bVMc?^@3FCT-\ck<^k)WCmm77[I?`bUT]=(B]Zf8XI(ML&c%IBaKWG:Ur_:ViScI1-,)8Ji(Xlk<bg^ddAt-[#XWX\A!$NY2J?"N=T>*K-n\o07Aj3_UO>_l2'_\\ms%6ngI+db_2^bE*\D8Crf8%*>1*VABNC[>5XIkNuc4L'_)gB1'i6"B$$_/YZp_I;lJ^aTql,m6e3d>eZqH^$-8ZKQ"WI'p-g]_-APeu;Vs)E!fE8M95%4]_Nu<4%>_,ZQ[4lU9\sZr#>=FFFhD8S^c$<PkLr7u-O(<5,J?"mQeV9hKZSsZ"d7'QBTl)$t!-Gdp'9f7/@Y@Vp!']s.-+B:;okp^YgG_P!%[$r:Q!ENh18,clgru^_PiW6r2:7'SUZZQ"AotN0Oeb/Jgs.>LSW]p=Hk^5L!SmPQ#q>)9E5Fn=ZW]o27Wd1T;mnUlM=oDG[EVId<%bNjPP+&DJP[_&^qe'E:_4gM[YSn("RjD&o-;EsUk%!arq4\`OYBt1_!]3ep;S;qmhS+U@Cm[lC]Ut$cj4Dd"d-^V`qflW[4h+cX>%<qiN_n6u:b>je\:oBOmh]/=ME4]srIA9H/=m$a-_2<X)kea@I#m;d@:Ed$hjF7""uQ(-=#2lfSi[[1%,2k+U'o]fGjg`=q]S9Ka9%I_C)NSM*e7MQ8jET.J<4qjZ'`I(alh/fB4uf=SWS/=hk#WCH,-^H1>64RN^&M`6tMY?kT)?=0Qa1Pr`E5&=Q7F2#:.o<c,R[/8+u%BtAUrD43(PDm%A\c>U--XoJ>HTC8B-gi'>:>ds_,noC8+*d)Lpq<tY32;F_ma81C`p=m(Vq*p99+#ts'3T&)r%]AQmr9*>8e]EnJ%Fi3@El#`oHIFsN\2k'#Z[_+fKe+NF<eO\cMdut0Rr(;l*n*[;)A++TGh>Z_RGKCa`+4[4DHrg5H(:&\)4EUPBlC$b;D>U>Q4Sef+%"gT#Qc'\OSk.de:[$oC;S',C-C"Xr)I[@glj/Ur"6m$fg4S7dl$b^15Z9ZQ;DtdD,Y4AHBjUYXCrH`a1V'T%,m`h']dHnXB<\*3D%e%)7(d!W69s(]8Q^Y2rbe`rlI<Yp0?Hf"V2^KFk4VpuN3RQoq1X.MjnlK[YFGBW^q,0nVUaa1_GX39RIZ6<7QHF9NKh:FUKYL;OW%fkJ%.eim?1kFZpQV#./.7n=oos5E'tX.-Hnjl1(S\.V^:g*PoPkCY\Wq5Z.b0E45.rg^1"_A8X@Wd`aZ2XbN:0`%DI]_J*<Bt&Q8%@W,NFq8Jh]>l?)BluimmCtJ#g/FoEOd]*4ZG>HL3m=jjbZQ7'[QO>&]F(.W7UQWO>7ajiA5"V[4aY`DM6dAS41DcD$nRdk"37/DC%&SQK<LqDQ7j]?.ng$!Xfle+*&)nXpJTc8Hom6qGqL\^R'/S&8EY#Oem^Z=ufGp*iUMbga(?[i%;XC%R5gg0ljI(J:clc&jK);E\,%rZ*Z?b^?sGp8@NRFI'tdX4sM*D*G-ED:Oi=`Vq8CnR!fYBD:eE4g[`Q\-CWrL:<&_<0E^3'^sTLog+".+4\CC6d*Ab!8VR(lo)-%%C\F6Mk--j\Nb-N7\&ss8fu7SWpFl2]B:<?/G,T3MFY+FlXmQ?TW.p5=51Xccp&'6O-^GD!QC8!(P1:@YO4CF$ol&aUh1,9^Q.`/8%mE!q6f0>5QVsg\4?9\)3rfuoUo2]dQHu$XnVFQ+fpYC8QPOBr=ffr`dOB1RkIbo(elGmM<B#<j+KZQ-V#./b+&YVUXP@=1/^,[m&%k/\Oc=!UVt==6U4Nfd@_r2hEN*hVI_8,MPe^A[0Hn0X]U?N/F"L7MbDO4rab[gpt^$'&pMFfmH>^:qsXhL52a])(lSjmhm2dIH2c%_=@NphJkXfa5(`^m#TtBF'KgA@rla>FEDVLFE"U:[!*4F_GPO,*r.%)e/["/p;e3p+!)FD*Zc<h+7:/h_b_@sL[Cd"FGJ+LI:s/9%_=>@h_;W5H_>_:-5s,DXh*HDG&)9Hl:`n<lZ[]W;["#T8YeRrf[ib@^I^e5&qgGs2m+;,Xhc+sCHUiF<HO"opH[C*Z0C3h.m@N3V%Hd,m1BD5(^N^rUn*lS#e(Lmkm$l:\A"tHZe_JqOBLZ'BBLHW`-X3cQdU7]5@[1/upmZ+lrm\&>'p,^jd]8i(!f/6jig!6tFm885_%*jkh3*ll9;f?/GX*@JmHO&c23+8J9Ri:m0kliqM#jjSP=jj$23l&OS^4*1^FhsEE6ffH?T*5'-&38>;]U&#TD!Q8(0cll%r!#DqF%_jX-`%?7giM2&sa!MGGjb-/3>=mDJF^06rr`P$-ad$:\eq)\N7Mr.Xp+*'_RrN^WmrVcC..C<ja+4"N/Ps6$k<mQ4WPeVKbHMt%>%06Y+]ITZNAgAV$39T!G1M-54)RG0n&PQ'm[C;&*rZ/VCV^OCF&5Q3tKnS`1=A`4F)[.s/uc!jZ<&)V)7m,A8<3Su0+DXkb^+[n?S%hkbu%U2BY]qMjAZ=kRg2Gj2\cGr#DHp>^A9`4dd;pg;^s5?q2!>/))X7jZRo5?51Bl&'ER2r.TNm=!"L\R%6;fEYbd0)1OMZtB![%9(DM?s)d"s#Mj0CmtZ[bhk&[=\[fA`q!*61<mQZf[.lOn">8$8dEl78?L2%U>eOIV=>!B6?ei?Qp8?G>q!mp$Ie@Wn6e=O#r9],#%kh4i(V14Ohq<h%JVa#4BDnb0QaaYa7hoYB?CEE;"o<,"ZrQQ-"T;KfEI7F$RoC(QXN3Z&NY0OIc0PfA@pY/`%-L+R5f[]+=X$=(A%H@GGV](*6OVL>b_4I]&^Bg"NW3M.oWAfnQtOi+R$kB)">e77a6D#$pAq#/IZFl#m2o'Bh2UV"9jSM"T)E92"SSD-be\<Jcpl$\r%%P@XUZqJQ[4r]2L"A%I&oqYQ%tHN*SXbiOmus*;8j<hf<bCYYc*ZX;&>4HK:Grdd*#\`E3l0-C5mkB)#kHU1p'I\h8Fq>'m3`U0k@%H^C)`Yo]FslSPX%+5[+r@3,,'?(Riu\g:]jr>n#in(ri7jXC%HHd2%`T)<.`^V/ddZCP8L3I#hthd"XX5Eqf>nF0Yr]Lj"LCl,ps%`4kgjh<crk]Y0f\rlb,fbMhUKH?o5)-SD"`\c1>Y_tk;n:.P-=bFd\Zo<]"2I]jj62uMW?QK&4Q!e%\Hldo]5hDSEJ["Nn;^V?J2%J&T=EE4R$<b2_6kmsKE[e0t5VIbVI.T5k[ZLFi3`DjGSeUq>N52?!+7V?*kq:PSl\lE>TVpWK&L+n&oHr[ttMhO8q0(L=`'`C=J%%G<)5nITH;T,4<][5K6p6dtMIbB4(8mZ*3ubAA!Bieh=&XDC;foq42r]D<E!iea(G!g"Sa7q&Me_^U)6ip\s,qouh,RLX5R6rQXFq%EDtccL&/0)H2#(C:ODj;^Csm'eb&mOWr;8JS%hkaBCQ41!'0\\j1"b_>boR/I[Mh/`NVI1?7tU(Ec$-9oh%tYcen9HIPZ8fl,1u:%f%U\Iou^DBhKj&=5g;L*m-a/upZp"EIW^c0oYVW]mUTR-Sc%UC3G,t(\aUeKj@fGrG&pi=cDsSVA(Eu+MnZa4^::^[I$_n\3Vc=Y%E:I5J>+XSen$2l;4o^bM?GGT^qs.ZR&c/BZ:[6Ng1gZ^=h!9AL4h8/UFI'(Y])@/&h3X$VDGB]8Y82IDf?6n'eg&B$hN"-aMs6IN%lFFprZ<[.Cc[!%OAG#+CSIZ6$n]i`0RqpGM(>&B6lZ]u3lM>PsdsC!--S?H8:G+KW">5./OIid@^]4!$m^TdN=8DFM]NG0'0/!S@%?9LL=GNI-Eq=O.)p#0q9^)YQMNnRM/r@o1t\b7Nd8A7-T?TJ/^"gK</])G9B1Ft3"4?i,Y@e]3Mopq`BI(c+)\)4MO3A3b*]II@=%gIL/9I=#dO2],0TR9\./MqL,.oCOA:D@UA]a$s[g7?Yn2[HDq-[:0otqs%=pQt+e3kGs`UIRK\'l)R1"e*>YR](V2cH$ZHjp!`*i%*kn`"@ZSF)?ciD8IJ^:7g$su-(6.Z1Xn=cR=,lQ:B0s;qlF6qBjl1+5Ap9uSDGc0;j2J":[QC__/aCpS\409KZlE%fUIX+MaG(_u%_sBCQL>/'ZVV<HT[6)s[HLZC;e:o!ZqA8H&qmP1_D7b5l\j;B[pMerqq2!9o[OpfH*B`ogc`;IhhO[=^dI7?]B>Vo&s&J_\e/,^K%X]jJh",4P'&%6TFLU69(?t3<HIURDY1#;a;GZf6BD;G%(^XsX.03l-LU;lZ2T>%M,bKA>]20Z7*2($^oG:rg<DVWNfhqg(e4ZPM!%:Ft@Xb.8Qc]OWh#Ns8s/0:FJ(]D/l#_6Q&T2Dsk39Jr:sd)g\\qd[&9f.F=/Y\DienG5E]Vu5Ik]AfGb?hNU+KQTsVeF`,r?e>&(%R9A$WVfR/qoK1QYPLcFoQWMgc#8il7b0$6c7BeE2['jZi?LJ\;FA@J:\5;>^SK>KE:63t6GIf2U:V(H;B#i^IhJZ0PX'g-VkgU'F%cYI).S5m##G5shZ[QWNVBj#-*CTfnYh"jRjm*=ir!giqd'+]*gOLO!Nc,l^1B["*IZjJa/caRaTCgO?[ooZ-)Sc(*b!A1Mkn621'%%\,;4c8:sqle,-H9A!k2p3bWG7^mj1k2+/4B(u"q8"k!mD6<1P[("poY$3hJYJ/n!f6Xnn*U)k$:",[!oS'\emJOP<e",f>NIB9o%q/u##44gI\F^*aKn%*4^*J7XQG5`MOVE<C$9K(Jtq/u##44ecVfL.[5DV`6RLd#$Y2J^D<7Ui\pif7s2=ds9pqC5HGf?IO:lC*??%gD8G`jm-MqX`g]*=nRf_)Y,dW1dtr6f)"bk[k0`.iDo1k7<?3SZ$t%)6t3Z3i7g/C@&mqB^Tc17Q)ch'Y\?+*K\!8pI4uV2:#"h+%?@BNA1U"MV(`fBZFFSC+Pi0,/3`6:Smc^`Vk+f8rCAfE7b4b8e=L\:(D-KqW[f<e\mJ&c<dl-MFgoQZ]$`!;i,Fq!G`_*iXN`BTU%:=mW$BT;_VUd*G%g.GbQ2.k;b(Y@]QD/7#"/Z`ScI0dDlFa'T2,tcJFD4A.[V&!gD<I!]LD;4DLgT99R]%*9,l`HK%HM-*#8^Dh*%HQHtO*jEK69eXb^/'hgEU![a4lX%Sd=)Q`6ARlaH.j^?Zj#4Mie&L.==`6h1`NiYtEmI(1P!CcVChma6EPWqc="h:i^<iq^q+`FU%qMWO"Ngc6#8%j?EEg;(I_gek%$0-rRcihJhpd-aLp3,s-/bS,'_?o3$?i5VmYH(Z@hn&K9RrumMhjqKlGl@S8Is(_O@f,%nYV4N'%(ON4WrpZGUr!WQ"+-dV'>5IN>rDa'\il/arFZ$B#B+<_W`S]L#^l&jIP_tN"l[R1=`G6OeB.5&'l]po"W`.V*87)3l4hJ4/^A<6I%i`Br6[JWue]=e#R3r<:MQI9.[NM'L'@ET3GgRJ6:XBbV>U3a'_diZT0>s/"3n\[TKSKur]kBG-Je;TmDh4GufZdDT62+u8uDVs0L%?MhpWbC8"'$iKf2ku]NGEN>VCb^lq-f.k$mC%bN8C'O^+H05unF3hS1BAb>Lp4a9H2X=Xq6V[kC7<e*XFkb][=Ps!XgDtY$mRTm4%hVRsd,I&;D[?^O2IY*.7r(9<"#9k;Bmg[4HD>qrKHQR&#NIg;^okbd3&G7CfLtM+IHRkgF*.clcLeZY%UY#6(f(L$bU$oH4[j%:8%+,FD)s7T9*$u-Z7pPn];gY<Y7lA*CS@r9tImgmB,9PAEnfMK(R1)-4k4r]B=9UH:.VJZ%[RsQ5mH[7(uEoM_,_LI`Bf^/=b:i)rE%Ca_2YZd7L`qcMV%6a;af+$:8)-Q.fdIbtXS<\A2QBA5?Am*35)[66Ye)d2^I6d^;`Tt/k0=If+3`O]n=.D0pS'cq4MDj;$nIc*JE%:M<PJ#@\nkAco;T1Cn'6UMWd:`(!LLn3FofBMZhW@NuIs"0l]!%jf)fD,1Y[7S5d,&=3)uG`-/+.;[5QY20Z-<[)?EB@^Z98q]^h%SfEWIPk^'.GTSHb/mc5lKI@G`HP0fD2O=ttGUO"BCYR_CUkBjAnUZ>^4r3;8#@Xs.B7mFN"LCDH[*:dZF73UU:Ck<33dejg]T742%p-I?tjOkYlUqgdX2Joc2hVA!1gXCeZOUN<d#TmGU^:Rq.%`MHUCd2Re2Z)jc]oTQa4VSjWn.A%X5'H%78-\B%8qqKC>V_]?TbMaQ%D0t`8P/25^4:%S!U>5,!fjJWl_/(e`D6jc1h"t4.dt=of&0EVD+(/$]O/F]ON/^f(%E>8^p>MKf+)?4L0K,*R,6m01m)o(m27A.B%Pmc=Wg:#6iHunadD,1\^7TOoT@(_P;q<kQ*a+q]fS$n`dnDW>'i1k/Zal(BH<qu/tE9:F1Tme)ao%gF(q&ld#_0cePD;eoNo$OnD%#@T2/5%Y?iA^k`a'PhD:+,WcsGSm-%[-d+O=A+I2)2_3-\"!oH7Ma33BA41C`[DpGH[7*ko&4)5in\Ip7uoZhgMs[npYRNak*rud%roVMl3DXnc=U1qXn)(\#6()S5C^g"8^:iX$m%Y)Op-34YNSTF3LXUCZ'2$9q][LkuoChG?R:g0sjSWnn^<gLNoqkZ#q/!V@rJTD2%J+I!Yi0C+GQ>X&LYA1bieNrR"i3I.Yij@c)Ffh9AFumD)2R7N&aQ$$rl1&kfB-h[ks#8,Mhr!<1L7>O<QIiI-if`8!HYjdIYFjRE%fM+S7FiE5'kOu2u59E#UYLUt7SC\a\f/o(%g`A(`?rjfc<kFh2FC\:VG'i'0r&RaR@d3*/k<7YKL/3tGH+/gB&p>UV4!!Dc^8q4'%NbY@`UK'8Akk;T)7isk^YLLt>?r)#3mjJG<i+1a0BT,%#a8,UFQYlTpn8Wr[!S*,m=J=KVK$=W3otqNU]kk;I+$Atp[6c`GmCdu*%8X*?MPB$0fqDl0(gWp+cq^_?g3[7@4l]R:WGulc!8388AVZg2"c6@q1YhClEK9S:/\r(m*d*\VD%stmSDTB,,f>Vt"j^R]<Nl1Bh%mU&QN,:Tqk13=]j\E"71@FOdpe'dL?g-rbO#3<M=g9u376L8"5:&<V?j2j,4Z0UQ:GjD4gBlRZVeb,Ii]62SnlXV:ABJmPBh6]da%g\^U\QWM`//TO][O9`AXZZ"<nr8KK&SEA#[eJ1WYl27&#b8:#/g6i!b]=<1#r.PpBZG-7Cc]5_"Y5U*@pHW*~>%AI9_PrivateDataEnd